# Generated by roxygen2: do not edit by hand

S3method(base::plot,color.theme)
S3method(base::plot,mid)
S3method(base::plot,mid.breakdown)
S3method(base::plot,mid.conditional)
S3method(base::plot,mid.importance)
S3method(base::print,color.theme)
S3method(base::print,encoder)
S3method(base::print,mid)
S3method(base::print,mid.breakdown)
S3method(base::print,mid.conditional)
S3method(base::print,mid.importance)
S3method(base::summary,mid)
S3method(ggplot2::autoplot,mid)
S3method(ggplot2::autoplot,mid.breakdown)
S3method(ggplot2::autoplot,mid.conditional)
S3method(ggplot2::autoplot,mid.importance)
S3method(midr::get.yhat,AccurateGLM)
S3method(midr::get.yhat,default)
S3method(midr::get.yhat,glm)
S3method(midr::get.yhat,glmnet)
S3method(midr::get.yhat,ksvm)
S3method(midr::get.yhat,lm)
S3method(midr::get.yhat,mid)
S3method(midr::get.yhat,model_fit)
S3method(midr::get.yhat,randomForest)
S3method(midr::get.yhat,ranger)
S3method(midr::get.yhat,rpart)
S3method(midr::get.yhat,rpf)
S3method(midr::get.yhat,svm)
S3method(midr::ggmid,mid)
S3method(midr::ggmid,mid.breakdown)
S3method(midr::ggmid,mid.conditional)
S3method(midr::ggmid,mid.importance)
S3method(midr::interpret,default)
S3method(midr::interpret,formula)
S3method(shapviz::shapviz,mid)
S3method(stats::formula,mid)
S3method(stats::model.frame,mid)
S3method(stats::predict,mid)
S3method(stats::terms,mid)
S3method(stats::terms,mid.importance)
S3method(stats::weights,weighted)
export(augmented)
export(color.theme)
export(factor.encoder)
export(factor.frame)
export(get.yhat)
export(ggmid)
export(interpret)
export(latticized)
export(mid.breakdown)
export(mid.conditional)
export(mid.encoding.scheme)
export(mid.extract)
export(mid.f)
export(mid.frames)
export(mid.importance)
export(mid.plots)
export(mid.terms)
export(numeric.encoder)
export(numeric.frame)
export(par.midr)
export(scale_color_theme)
export(scale_colour_theme)
export(scale_fill_theme)
export(shuffled)
export(theme_midr)
export(weighted)
export(weighted.mae)
export(weighted.medae)
export(weighted.mse)
export(weighted.quantile)
export(weighted.rmse)
export(weighted.tabulate)
importFrom(rlang,.data)

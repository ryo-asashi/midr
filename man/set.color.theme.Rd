% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_color_theme.R
\name{set.color.theme}
\alias{set.color.theme}
\title{Register a Color Theme}
\usage{
set.color.theme(
  kernel,
  kernel.args = list(),
  options = list(),
  name = "newtheme",
  source = "custom",
  type = NULL
)
}
\arguments{
\item{kernel}{a color vector, a palette function or a ramp function to be used as a color kernel. It can also be a character vector or a list (see "Details"). An existing "color.theme" object can also be passed.}

\item{kernel.args}{a list of arguments to be passed to the color kernel.}

\item{options}{a list of option values to control the color theme's behavior.}

\item{name}{a character string for the color theme name.}

\item{source}{a character string for the source name of the color theme.}

\item{type}{a character string specifying the type of the color theme. One of "sequential", "diverging", or "qualitative".}
}
\value{
\code{set.color.theme()} returns the metadata of the previous theme that was overwritten (or \code{NULL} if none existed) invisibly.
}
\description{
\code{set.color.theme()} registers a custom color theme in the package's theme registry.
}
\details{
This function takes a color vector, a color-generating function, or an existing "color.theme" object and registers it under a specified \code{name} and \code{source} (default is "custom").
The registered color theme can then be easily retrieved using the "Theme Name Syntax" (see \code{?color.theme}).

To keep the size of "color.theme" objects small, the \code{kernel} argument supports a form of lazy loading.
By providing a character vector of length two or a list of two character strings, you can specify an R expression to be evaluated at loading and to return a color kernel, and the namespace in which the expression is evaluated (e.g., \code{kernel = list(text = "rainbow", namespace = "grDevices")}).
}
\seealso{
\code{\link{color.theme}}, \code{\link{color.theme.info}}
}

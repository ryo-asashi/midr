// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_interpolate_beta
Rcpp::List cpp_interpolate_beta(Eigen::VectorXd beta, const Rcpp::IntegerVector& indices, const Rcpp::IntegerVector& neighbors, const Rcpp::IntegerVector& pointers, const double tol, const int maxit);
RcppExport SEXP _midr_cpp_interpolate_beta(SEXP betaSEXP, SEXP indicesSEXP, SEXP neighborsSEXP, SEXP pointersSEXP, SEXP tolSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type indices(indicesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type neighbors(neighborsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type pointers(pointersSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_interpolate_beta(beta, indices, neighbors, pointers, tol, maxit));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_midr_cpp_interpolate_beta", (DL_FUNC) &_midr_cpp_interpolate_beta, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_midr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}

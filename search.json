[{"path":"https://ryo-asashi.github.io/midr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 midr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ryo-asashi.github.io/midr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryoichi Asasihba. Author, maintainer. Hirokazu Iwasawa. Author. Reiji Kozuma. Contributor.","code":""},{"path":"https://ryo-asashi.github.io/midr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Asasihba R, Iwasawa H (2025). midr: Create Interpretable Surrogate Black-Box ML Models. R package version 0.4.3, https://ryo-asashi.github.io/midr/, https://github.com/ryo-asashi/midr.","code":"@Manual{,   title = {midr: Create an Interpretable Surrogate of Black-Box ML Models},   author = {Ryoichi Asasihba and Hirokazu Iwasawa},   year = {2025},   note = {R package version 0.4.3, https://ryo-asashi.github.io/midr/},   url = {https://github.com/ryo-asashi/midr}, }"},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"midr-","dir":"","previous_headings":"","what":"Create an Interpretable Surrogate of Black-Box ML Models","title":"Create an Interpretable Surrogate of Black-Box ML Models","text":"midr package designed provide model-agnostic method interpreting black-box machine learning models creating globally interpretable surrogate target model using functional decomposition technique called Maximum Interpretation Decomposition (MID). theoretical details MID, see Iwasawa & Matsumori (2025) [Forthcoming], technical details package, see Asashiba et al. (2025) [Forthcoming].","code":""},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create an Interpretable Surrogate of Black-Box ML Models","text":"can install released version midr CRAN : development version midr GitHub :","code":"install.packages(\"midr\") # not yet available # install.packages(\"devtools\") devtools::install_github(\"ryo-asashi/midr\")"},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Create an Interpretable Surrogate of Black-Box ML Models","text":"following example, fit random forest model Boston dataset included ISLR2 package. main function package interpret(), can used create global surrogate random forest model using MID. graphing functions ggmid() plot() can used visualize main effects interactions variables.  mid.importance() function helps compute compare importance main effects interactions variables whole data instance.  mid.conditional() function can used compute ICE curves (Goldstein et al. 2015) fitted MID model breakdown ICE curves main effects interactions.","code":"# load required packages library(midr) library(ggplot2) library(gridExtra) library(ISLR2) library(ranger) theme_set(theme_midr()) # split the Boston dataset data(\"Boston\", package = \"ISLR2\") set.seed(42) idx <- sample(nrow(Boston), nrow(Boston) * .75) train <- Boston[ idx, ] valid <- Boston[-idx, ] # fit a random forest model model_rf <- ranger(medv ~ ., train, mtry = 5) preds_rf <- predict(model_rf, valid)$predictions cat(\"RMSE: \", weighted.rmse(valid$medv, preds_rf)) #> RMSE:  3.351362 # fit a two-dimensional MID model mid_rf <- interpret(medv ~ .^2, train, model_rf, lambda = .1) print(mid_rf, omit.values = TRUE) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model_rf, #>  lambda = 0.1) #>  #> Intercept: 22.446 #>  #> Main Effects: #> 12 main effect terms #>  #> Interactions: #> 66 interaction terms #>  #> Uninterpreted Rate: 0.016249 preds_mid <- predict(mid_rf, valid) cat(\"\\nRMSE: \", weighted.rmse(preds_rf, preds_mid)) #>  #> RMSE:  1.106746 cat(\"\\nRMSE: \", weighted.rmse(valid$medv, preds_mid)) #>  #> RMSE:  3.306111 # visualize the main effects and interactions of the MID model grid.arrange(   ggmid(mid_rf, \"lstat\") +     ggtitle(\"main effect of lstat\"),   ggmid(mid_rf, \"dis\") +     ggtitle(\"main effect of dis\"),   ggmid(mid_rf, \"lstat:dis\") +     ggtitle(\"interaction of lstat:dis\"),   ggmid(mid_rf, \"lstat:dis\", include.main.effects = TRUE) +     ggtitle(\"interaction + main effects\") ) # visualize the MID importance of the component functions imp <- mid.importance(mid_rf) ibd <- mid.importance(mid_rf, data = train[1L, ]) grid.arrange(   nrow = 1L,   ggmid(imp, max.bars = 16L, plot.main = FALSE) +     geom_point(aes(shape = degree), size = 2L) +     theme_midr(grid_type = \"y\") +     theme(legend.position = \"bottom\") +     scale_shape_manual(values = c(1, 16)) +     ggtitle(\"importance of variable effects\"),   ggmid(ibd, max.bars = 16L) +     aes(fill = mid > 0) +     theme(legend.position = \"bottom\") +     scale_fill_manual(values = c(\"#7e1952\", \"#2f7a9a\")) +     ggtitle(\"breakdown of a prediction\") ) # visualize the ICE curves of the MID model ice <- mid.conditional(mid_rf, \"lstat\", data = train) grid.arrange(   ggmid(ice, centered = TRUE, alpha = .1) +     ggtitle(\"c-ICE of lstat\"),   ggmid(ice, term = \"lstat\", centered = TRUE) +     ggtitle(\"c-ICE of main effect\"),   ggmid(ice, term = \"lstat:dis\", centered = TRUE, variable.colour = \"dis\", alpha = .1) +     ggtitle(\"c-ICE of interaction with dis\"),   ggmid(ice, term = \"lstat:age\", centered = TRUE, variable.colour = \"age\", alpha = .1) +     ggtitle(\"c-ICE of interaction with age\") )"},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Create an Interpretable Surrogate of Black-Box ML Models","text":"[1] Iwasawa, H. & Matsumori, Y. (2025). [Forthcoming] [2] Asashiba, R., Kozuma, R. & Iwasawa, H. (2025). [Forthcoming] [3] Goldstein, ., Kapelner, ., Bleich, J., & Pitkin, E. (2015). “Peeking Inside Black Box: Visualizing Statistical Learning Plots Individual Conditional Expectation”. Journal Computational Graphical Statistics, 24(1), 44–65. https://doi.org/10.1080/10618600.2014.907095","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":null,"dir":"Reference","previous_headings":"","what":"Encoder for Qualitative Variables — factor.encoder","title":"Encoder for Qualitative Variables — factor.encoder","text":"factor.encoder() returns encoder qualitative variable.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encoder for Qualitative Variables — factor.encoder","text":"","code":"factor.encoder(   x,   k,   use.catchall = TRUE,   catchall = \"(others)\",   tag = \"x\",   frame = NULL,   weights = NULL )  factor.frame(levels, catchall = \"(others)\", tag = \"x\")"},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encoder for Qualitative Variables — factor.encoder","text":"x vector encoded qualitative variable. k integer specifying maximum number distinct levels. positive, unique values x used levels. use.catchall logical. TRUE, less frequent levels dropped replaced catchall level. catchall character string used catchall level. tag character string. name variable. frame \"factor.frame\" object character vector defines levels variable. weights optional. numeric vector sample weights value x. levels vector used levels variable.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encoder for Qualitative Variables — factor.encoder","text":"factor.encoder() returns list containing following components: frame object class \"factor.frame\". encode function encode new_x dummy matrix. n number encoding levels. type type encoding. factor.frame() returns \"factor.frame\" object containing encoding information.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encoder for Qualitative Variables — factor.encoder","text":"factor.encoder() extracts unique values (levels) vector x returns list containing encode() function convert vector dummy matrix using one-hot encoding. use.catchall TRUE number levels exceeds k, frequent k - 1 levels used values replaced catchall.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encoder for Qualitative Variables — factor.encoder","text":"","code":"data(iris, package = \"datasets\") enc <- factor.encoder(x = iris$Species, use.catchall = FALSE, tag = \"Species\") enc$frame #>      Species Species_level #> 1     setosa             1 #> 2 versicolor             2 #> 3  virginica             3 enc$encode(new_x = c(\"setosa\", \"virginica\", \"ensata\", NA, \"versicolor\")) #>      setosa versicolor virginica #> [1,]      1          0         0 #> [2,]      0          0         1 #> [3,]      0          0         0 #> [4,]      0          0         0 #> [5,]      0          1         0  frm <- factor.frame(c(\"setosa\", \"virginica\"), \"other iris\") enc <- factor.encoder(x = iris$Species, frame = frm) enc$encode(c(\"setosa\", \"virginica\", \"ensata\", NA, \"versicolor\")) #>      setosa virginica other iris #> [1,]      1         0          0 #> [2,]      0         1          0 #> [3,]      0         0          1 #> [4,]      0         0          1 #> [5,]      0         0          1  enc <- factor.encoder(x = iris$Species, frame = c(\"setosa\", \"versicolor\")) enc$encode(c(\"setosa\", \"virginica\", \"ensata\", NA, \"versicolor\")) #>      setosa versicolor #> [1,]      1          0 #> [2,]      0          0 #> [3,]      0          0 #> [4,]      0          0 #> [5,]      0          1"},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper Prediction Function — get.yhat","title":"Wrapper Prediction Function — get.yhat","text":"get.yhat() works proxy prediction function many classes fitted models.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper Prediction Function — get.yhat","text":"","code":"get.yhat(X.model, newdata, ...)  # Default S3 method get.yhat(X.model, newdata, ...)  # S3 method for class 'mid' get.yhat(X.model, newdata, ...)  # S3 method for class 'lm' get.yhat(X.model, newdata, ...)  # S3 method for class 'glm' get.yhat(X.model, newdata, ...)  # S3 method for class 'rpart' get.yhat(X.model, newdata, ...)  # S3 method for class 'randomForest' get.yhat(X.model, newdata, ...)  # S3 method for class 'ranger' get.yhat(X.model, newdata, ...)  # S3 method for class 'svm' get.yhat(X.model, newdata, ...)  # S3 method for class 'ksvm' get.yhat(X.model, newdata, ...)  # S3 method for class 'AccurateGLM' get.yhat(X.model, newdata, ...)  # S3 method for class 'glmnet' get.yhat(X.model, newdata, ...)  # S3 method for class 'model_fit' get.yhat(X.model, newdata, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper Prediction Function — get.yhat","text":"X.model fitted model object. newdata data frame matrix. ... parameters passed prediction method model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper Prediction Function — get.yhat","text":"get.yhat() returns numeric vector model predictions newdata.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper Prediction Function — get.yhat","text":"get.yhat() wrapper prediction function many classes models. Although many predictive models method stats::predict(), structure type output methods uniform. get.yhat() designed always return simple numeric vector model predictions. design get.yhat() strongly influenced DALEX::yhat().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper Prediction Function — get.yhat","text":"","code":"data(trees, package = \"datasets\") model <- glm(Volume ~ ., trees, family = Gamma(log)) predict(model, trees, \"response\")[1:5] #>        1        2        3        4        5  #> 11.68832 11.23782 11.19185 16.63260 19.87816  get.yhat(model, trees)[1:5] #> [1] 11.68832 11.23782 11.19185 16.63260 19.87816"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID with ggplot2 Package — ggmid","title":"Plot MID with ggplot2 Package — ggmid","text":"\"mid\" objects, ggmid() visualizes MID component function using ggplot2 package.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID with ggplot2 Package — ggmid","text":"","code":"ggmid(object, ...)  # S3 method for class 'mid' ggmid(   object,   term,   limits = c(NA, NA),   plot.main = TRUE,   add.intercept = FALSE,   include.main.effects = FALSE,   interaction.type = c(\"default\", \"raster\", \"rectangle\"),   scale.type = \"default\",   scale.palette = c(\"#2f7a9a\", \"#FFFFFF\", \"#7e1952\"),   cells.count = c(100L, 100L),   ... )  # S3 method for class 'mid' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID with ggplot2 Package — ggmid","text":"object \"mid\" object visualized. ... optional parameters passed main layer. term character string specifying component function plotted. limits NULL numeric vector length two specifying limits plotting scale. NAs replaced minimum /maximum MID values. plot.main logical. FALSE, main layer drawn. add.intercept logical. TRUE, intercept added MID values. include.main.effects logical. TRUE, main effects included interaction plot. interaction.type character string. method plotting interaction effects. scale.type character string function specifying color type interaction plot. One \"default\", \"viridis\", \"gradient\" function returns continuous color scale fill aesthetics. scale.palette character vector color names. colors used interaction plot scale.type \"default\". cells.count integer integer-valued vector length two, specifying number cells raster type interaction plot.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID with ggplot2 Package — ggmid","text":"ggmid.mid() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID with ggplot2 Package — ggmid","text":"S3 method ggmid() \"mid\" objects creates \"ggplot\" object visualizes MID component function. main layer drawn using geom_line() geom_path() main effect quantitative variable, geom_col() main effect qualitative variable, geom_raster() geom_rect() interaction effect. methods ggmid(), see help(ggmid.mid.importance) help(ggmid.mid.conditional).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID with ggplot2 Package — ggmid","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used ggmid(mid, \"carat\")  ggplot2::autoplot(mid, \"clarity\")  ggmid(mid, \"carat:clarity\")  ggmid(mid, \"carat:clarity\", add.intercept = TRUE,       include.main.effects = TRUE, scale.type = \"viridis\")"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"\"mid.conditional\" objects, ggmid() visualizes ICE curves MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"","code":"# S3 method for class 'mid.conditional' ggmid(   object,   limits = c(NA, NA),   plot.main = TRUE,   centered = FALSE,   draw.dots = TRUE,   sample = NULL,   term = NULL,   variable.alpha = NULL,   variable.colour = NULL,   variable.linetype = NULL,   variable.linewidth = NULL,   ... )  # S3 method for class 'mid.conditional' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"object \"mid.conditional\" object visualized. limits NULL numeric vector length two specifying limits scale. NAs replaced minimum /maximum MID values. plot.main logical. FALSE, main layer drawn. centered logical. TRUE, ICE values observation set zero leftmost point variable. draw.dots logical. TRUE, points representing predictions observation plotted. sample optional vector specifying names observations plotted. term optional character string specifying interaction term. passed, ICE curve specified term plotted. variable.alpha name variable used set alpha. variable.colour name variable used set colour. variable.linetype name variable used set linetype. variable.linewidth name variable used set linewidth. ... optional parameters passed main layer.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"ggmid.mid.conditional() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"S3 method ggmid() \"mid.conditional\" objects creates \"ggplot\" object visualizes ICE curves fitted MID model using geom_line().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, airquality, lambda = 1) #> 'model' is not passed: the response variable in the data is used mc <- mid.conditional(mid, \"Wind\", airquality) ggmid(mc, variable.colour = \"Solar.R\", centered = TRUE)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"\"mid.importance\" objects, ggmid() visualizes importance MID component functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"","code":"# S3 method for class 'mid.importance' ggmid(   object,   type = c(\"barplot\", \"heatmap\"),   plot.main = TRUE,   max.bars = NA,   scale.palette = c(\"#FFFFFF\", \"#464646\"),   ... )  # S3 method for class 'mid.importance' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"object \"mid.importance\" object visualized. type character string specifying type plot. One \"barplot\" \"heatmap\". plot.main logical. TRUE, main layer drawn. max.bars integer specifying maximum number bars barplot. scale.palette character vector length two used color palette heatmap. ... optional parameters passed main layer.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"ggmid.mid.importance() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"S3 method ggmid() \"mid.importance\" objects creates \"ggplot\" object visualizes term importance fitted MID model. main layer drawn using geom_col() geom_tile().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used imp <- mid.importance(mid) ggmid(imp)  ggmid(imp, type = \"heatmap\")"},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit MID Models — interpret","title":"Fit MID Models — interpret","text":"interpret() used fit MID model specifically interpretable surrogate black-box ML models. fitted MID model consists set component functions, two variables.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit MID Models — interpret","text":"","code":"interpret(object, ...)  # Default S3 method interpret(   object,   x,   y = NULL,   weights = NULL,   pred.fun = get.yhat,   link = NULL,   k = c(NA, NA),   type = c(1L, 1L),   frames = list(),   interaction = FALSE,   terms = NULL,   singular.ok = FALSE,   mode = 1L,   method = NULL,   lambda = 0,   kappa = 1e+06,   na.action = getOption(\"na.action\"),   encoding.digits = 3L,   use.catchall = FALSE,   catchall = \"(others)\",   max.ncol = 3000L,   nil = 1e-07,   tol = 1e-07,   ... )  # S3 method for class 'formula' interpret(   formula,   data = NULL,   model = NULL,   pred.fun = get.yhat,   weights = NULL,   subset = NULL,   na.action = getOption(\"na.action\"),   mode = 1L,   drop.unused.levels = FALSE,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit MID Models — interpret","text":"object fitted model object interpreted. ... interpret.default(), optional arguments including special aliases ok singular.ok ie interaction. interpret.formula(), optional parameters passed interpret.default(). x matrix data frame predictor variables used fitting process. response variable included. y optional numeric vector model predictions response variable. weights numeric vector sample weights observation x. pred.fun function obtain predictions fitted model, first argument fitted model second argument new data. default get.yhat(). link character string specifying link function. One \"logit\", \"probit\", \"cauchit\", \"cloglog\", \"identity\", \"log\", \"sqrt\", \"1/mu^2\", \"inverse\". k integer integer-valued vector length two. maximum number sample points variable. vector passed, k[1L] used main effects k[2L] used interactions. integer passed, k used main effects sqrt(k) used interactions. positive, unique values used sample points. type integer integer-valued vector length two. type encoding. effects quantitative variables modeled piecewise linear functions type 1, step functions type 0. vector passed, type[1L] used main effects type[2L] used interactions. frames named list encoding frames (\"numeric.frame\" \"factor.frame\" objects). encoding frames used encode variable corresponding name. name begins \"|\" \":\", encoding frame used main effects interactions, respectively. interaction logical. TRUE terms formula supplied, interactions pair variables modeled calculated. terms character vector term labels specifying set component functions modeled. passed, terms includes main effects, interactions interaction TRUE. singular.ok logical. FALSE, singular fit error. mode integer specifying method calculation. mode 1, centralization constraints treated penalties least squares problem. mode 2, constraints used reduce number free parameters. method integer specifying method used solve least squares problem. non-negative value passed RcppEigen::fastLmPure(). negative, stats::lm.fit() used. lambda strength smoothing penalty. default 0. kappa strength penalty centralization. Used mode 1. default 1e+6. na.action function character string specifying method NA handling. default \"na.omit\". encoding.digits integer. rounding digits encoding numeric variables. Used type 1. use.catchall logical. TRUE, less frequent levels qualitative variables dropped replaced catchall level. catchall character string specifying catchall level. max.ncol integer. maximum number columns design matrix. nil threshold intercept coefficients treated zero. default 1e-7. tol tolerance singular value decomposition. default 1e-7. formula symbolic description MID model fit. data data frame containing variables formula. found data, variables taken environment(formula). model fitted model object interpreted. subset optional vector specifying subset observations used fitting process. drop.unused.levels logical. TRUE, unused levels factors dropped.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit MID Models — interpret","text":"interpret() returns \"mid\" object following components: weights numeric vector sample weights. call matched call. terms term labels. link \"link-glm\" object containing link function. intercept intercept. encoders list variable encoders. main.effects list data frames representing main effects. interacions list data frames representing interactions. uninterpreted.rate ratio sum squared error target model predictions fitted MID values, sum squared deviations target model predictions. fitted.matrix matrix showing breakdown predictions effects component functions. linear.predictors numeric vector linear predictors. fitted.values numeric vector fitted values. residuals numeric vector working residuals. na.action information special handlings NAs.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit MID Models — interpret","text":"prediction function fitted MID model \\(\\hat{f}(X)\\) following structure: $$\\hat{f}(X) = f_{\\phi} + \\Sigma_{j\\ \\D}\\ f_{j}(X_j) + \\Sigma_{j,k\\ \\D}\\ f_{j,k}(X_j, X_k)$$ , \\(f_\\phi\\) intercept, \\(f_{j}(X_j)\\) main effect variable \\(j\\), \\(f_{j,k}(X_j, X_k)\\) second-order interaction two variables \\(j\\) \\(k\\). effects quantitative variables modeled piecewise functions degree 1 (piecewise linear function) 0 (step function). MID values sample point determined using constrained least squares method. loss function \\(E[(\\hat{Y}-\\hat{f}(X))^2]\\), \\(\\hat{Y}\\) model prediction response variable, constraint functions \\(E[f_j(X_j)] = 0\\) variable \\(j\\) \\(E[f_{j,k}(X_j, X_k)]=E[f_{j,k}(X_j, X_k)|X_j]=E[f_{j,k}(X_j, X_k)|X_k]=0\\) pair variables \\((j,k)\\).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit MID Models — interpret","text":"","code":"data(cars, package = \"datasets\") model <- lm(dist ~ I(speed^2) + speed, cars) mid <- interpret(dist ~ speed, cars, model) plot(mid, \"speed\", add.intercept = TRUE) +   points(cars)  #> integer(0) summary(mid) #>  #> Call: #> interpret(formula = yhat ~ speed, data = cars, model = model) #>  #> Uninterpreted Rate: #> [1] 6.9571e-07 #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.07616  0.00000  0.00000  0.00000  0.03808   #>  #> Encoding: #>       main.effect #> speed  linear(17) #>  #> Importance: #>    term importance degree #> 1 speed     17.381      1  data(Nile, package = \"datasets\") mid <- interpret(x = 1L:100L, y = Nile, k = 100L) plot(mid, \"x\", add.intercept = TRUE, ylim = c(600L, 1300L)) +   points(x = 1L:100L, y = Nile)  #> integer(0) # reduce the number of knots by setting the 'k' parameter mid <- interpret(x = 1L:100L, y = Nile, k = 10L) plot(mid, \"x\", add.intercept = TRUE, ylim = c(600L, 1300L)) +   points(x = 1L:100L, y = Nile)  #> integer(0) # perform a pseudo smoothing by setting the 'lambda' parameter mid <- interpret(x = 1L:100L, y = Nile, k = 100L, lambda = 100L) plot(mid, \"x\", add.intercept = TRUE, ylim = c(600L, 1300L)) +   points(x = 1L:100L, y = Nile)  #> integer(0)  data(airquality, package = \"datasets\") airquality$Month <- factor(airquality$Month) model <- glm(Ozone ~ .^2, Gamma(log), airquality) mid <- interpret(Ozone ~ .^2, na.omit(airquality), model, lambda = .1) summary(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = na.omit(airquality), model = model, #>  lambda = 0.1) #>  #> Uninterpreted Rate: #> [1] 0.0063266 #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -9.43720 -1.17555  0.28758  1.03561 11.38039   #>  #> Encoding: #>         main.effect interaction #> Solar.R  linear(25)   linear(5) #> Wind     linear(19)   linear(5) #> Temp     linear(23)   linear(5) #> Month     factor(5)   factor(5) #> Day      linear(25)   linear(5) #>  #> Importance: #> (Top 10 out of 15) #>             term importance degree #> 1           Temp    12.5710      1 #> 2           Wind    10.3230      1 #> 3        Solar.R     7.1669      1 #> 4          Month     4.6166      1 #> 5     Wind:Month     4.2745      2 #> 6     Temp:Month     3.5311      2 #> 7   Solar.R:Wind     2.8283      2 #> 8  Solar.R:Month     2.2372      2 #> 9      Month:Day     1.6755      2 #> 10           Day     1.5932      1 plot(mid, \"Wind\")  plot(mid, \"Temp\")  plot(mid, \"Wind:Month\", include.main.effects = TRUE)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ICE of MID Models — mid.conditional","title":"Calculate ICE of MID Models — mid.conditional","text":"mid.conditional() creates object draw ICE curves MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ICE of MID Models — mid.conditional","text":"","code":"mid.conditional(   object,   variable,   data,   keep.effects = TRUE,   n.samples = 100L,   max.nrow = 100000L,   type = c(\"response\", \"link\") )  # S3 method for class 'mid.conditional' print(x, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ICE of MID Models — mid.conditional","text":"object \"mid\" object. variable character string expression specifying variable ICE calculation. data data frame containing observations ICE values calculated. keep.effects logical. TRUE, effects component functions stored output object. n.samples integer. number sample points calculation. max.nrow integer specifying maximum number rows output data frames. type type prediction required. default \"response\". \"link\" possible MID model uses link function. x \"mid.conditional\" object printed. ... additional parameters passed print.default() print sample point vector.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ICE of MID Models — mid.conditional","text":"mid.conditional() returns object class \"mid.conditional\" following components: terms character vector relevant terms. observed data frame actual observations corresponding predictions. conditional data frame hypothetical observations corresponding predictions. values sample points variable.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate ICE of MID Models — mid.conditional","text":"mid.conditional() obtains predictions hypothetical observations MID model returns \"mid.conditional\" object. graphing functions ggmid() plot() can used generate ICE curve plots.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ICE of MID Models — mid.conditional","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, airquality, lambda = 1) #> 'model' is not passed: the response variable in the data is used mc <- mid.conditional(mid, \"Wind\", airquality) mc #>  #> Individual Conditional Expectation for 153 Observations #>  #> Variable: Wind #>  #> Sample Points: #>   [1]  2.300000  2.485859  2.671717  2.857576  3.043434  3.229293  3.415152 #>   [8]  3.601010  3.786869  3.972727  4.158586  4.344444  4.530303  4.716162 #>  [15]  4.902020  5.087879  5.273737  5.459596  5.645455  5.831313  6.017172 #>  [22]  6.203030  6.388889  6.574747  6.760606  6.946465  7.132323  7.318182 #>  [29]  7.504040  7.689899  7.875758  8.061616  8.247475  8.433333  8.619192 #>  [36]  8.805051  8.990909  9.176768  9.362626  9.548485  9.734343  9.920202 #>  [43] 10.106061 10.291919 10.477778 10.663636 10.849495 11.035354 11.221212 #>  [50] 11.407071 11.592929 11.778788 11.964646 12.150505 12.336364 12.522222 #>  [57] 12.708081 12.893939 13.079798 13.265657 13.451515 13.637374 13.823232 #>  [64] 14.009091 14.194949 14.380808 14.566667 14.752525 14.938384 15.124242 #>  [71] 15.310101 15.495960 15.681818 15.867677 16.053535 16.239394 16.425253 #>  [78] 16.611111 16.796970 16.982828 17.168687 17.354545 17.540404 17.726263 #>  [85] 17.912121 18.097980 18.283838 18.469697 18.655556 18.841414 19.027273 #>  [92] 19.213131 19.398990 19.584848 19.770707 19.956566 20.142424 20.328283 #>  [99] 20.514141 20.700000"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Components from MID Models — mid.extract","title":"Extract Components from MID Models — mid.extract","text":"mid.extract() returns component MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Components from MID Models — mid.extract","text":"","code":"mid.extract(object, component, ...)  mid.encoding.scheme(object, ...)  mid.frames(object, ...)  mid.terms(   object,   main.effect = TRUE,   interaction = TRUE,   require = NULL,   remove = NULL,   ... )  # S3 method for class 'mid' terms(x, ...)  # S3 method for class 'mid.importance' terms(x, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Components from MID Models — mid.extract","text":"object \"mid\" object. component literal character string name. name component extract, \"frames\", \"encoding.scheme\" \"uninterpreted.rate\". ... optional parameters passed function used extract component. main.effect logical. FALSE, main effect terms excluded. interaction logical. FALSE, interaction terms excluded. require character vector variable names. terms related specified names excluded. remove character vector variable names. terms related least one specified names excluded. x \"mid\" \"mid.importance\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Components from MID Models — mid.extract","text":"mid.extract() returns component extracted object. mid.encoding.scheme() returns data frame containing information encoding schemes. mid.frames() returns list encoding frames. mid.terms() returns character vector term labels.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Components from MID Models — mid.extract","text":"","code":"data(trees, package = \"datasets\") mid <- interpret(Volume ~ .^2, trees, k = 10) #> 'model' is not passed: the response variable in the data is used mid.extract(mid, encoding.scheme) #>        main.effect interaction #> Girth   linear(10)   linear(4) #> Height  linear(10)   linear(4) mid.extract(mid, uninterpreted.rate) #> [1] 0.0002371872 mid.extract(mid, frames) #> $`|Girth` #>    Girth Girth_min Girth_max #> 1    8.3      8.30      9.40 #> 2   10.5      9.40     10.75 #> 3   11.0     10.75     11.15 #> 4   11.3     11.15     11.50 #> 5   11.7     11.50     12.50 #> 6   13.3     12.50     13.65 #> 7   14.0     13.65     15.15 #> 8   16.3     15.15     17.10 #> 9   17.9     17.10     19.25 #> 10  20.6     19.25     20.60 #>  #> $`:Girth` #>   Girth Girth_min Girth_max #> 1   8.3      8.30      9.80 #> 2  11.3      9.80     12.65 #> 3  14.0     12.65     17.30 #> 4  20.6     17.30     20.60 #>  #> $`|Height` #>    Height Height_min Height_max #> 1      63       63.0       64.5 #> 2      66       64.5       68.5 #> 3      71       68.5       72.5 #> 4      74       72.5       74.5 #> 5      75       74.5       76.5 #> 6      78       76.5       79.0 #> 7      80       79.0       80.5 #> 8      81       80.5       82.0 #> 9      83       82.0       85.0 #> 10     87       85.0       87.0 #>  #> $`:Height` #>   Height Height_min Height_max #> 1     63       63.0       68.5 #> 2     74       68.5       77.0 #> 3     80       77.0       83.5 #> 4     87       83.5       87.0 #>  mid.extract(mid, Girth) #>    Girth Girth_min Girth_max    density         mid #> 1    8.3      8.30      9.40 0.08506452  -21.003604 #> 2   10.5      9.40     10.75 0.07622581   -6.108702 #> 3   11.0     10.75     11.15 0.12903226    1.782576 #> 4   11.3     11.15     11.50 0.11290323    4.368677 #> 5   11.7     11.50     12.50 0.09070968    2.595397 #> 6   13.3     12.50     13.65 0.10977419  -18.178493 #> 7   14.0     13.65     15.15 0.13261290   -5.837210 #> 8   16.3     15.15     17.10 0.09029032   31.919879 #> 9   17.9     17.10     19.25 0.13874194   42.242478 #> 10  20.6     19.25     20.60 0.03464516 -135.072647 mid.extract(mid, intercept) #> [1] 30.17097"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MID Importance — mid.importance","title":"Calculate MID Importance — mid.importance","text":"mid.importance() calculates MID importance fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MID Importance — mid.importance","text":"","code":"mid.importance(object, data = NULL, weights = NULL, sort = TRUE, measure = 1L)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MID Importance — mid.importance","text":"object \"mid\" object. data data frame containing observations used calculate MID importance. NULL, fitted.matrix MID model used. data one observation, output special class \"mid.breakdown\". weights optional numeric vector sample weights. sort logical. TRUE, output data frame sorted MID importance. measure integer specifying measure MID importance. Possible alternatives 1 mean absolute effect, 2 root mean square effect, 3 median absolute effect.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MID Importance — mid.importance","text":"mid.importance returns data frame class \"mid.importance\".","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate MID Importance — mid.importance","text":"mid.importance() returns object class \"mid.importance\". MID importance defined component function MID model mean absolute effect given data.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate MID Importance — mid.importance","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, airquality, lambda = 1) #> 'model' is not passed: the response variable in the data is used imp <- mid.importance(mid) imp #>             term importance degree #> 1           Temp 13.9409625      1 #> 2           Wind 10.5054026      1 #> 3        Solar.R  5.5745798      1 #> 4            Day  4.3927693      1 #> 5          Month  2.2799537      1 #> 6   Solar.R:Wind  0.4494962      2 #> 7  Solar.R:Month  0.3762348      2 #> 8       Temp:Day  0.3714793      2 #> 9     Wind:Month  0.3690533      2 #> 10      Wind:Day  0.3654715      2 #> 11     Month:Day  0.3226006      2 #> 12     Wind:Temp  0.2805991      2 #> 13   Solar.R:Day  0.2664565      2 #> 14  Solar.R:Temp  0.2346434      2 #> 15    Temp:Month  0.1207601      2"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Multiple MID Component Functions — mid.plots","title":"Plot Multiple MID Component Functions — mid.plots","text":"mid.plots() applies ggmid() plot() component functions \"mid\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Multiple MID Component Functions — mid.plots","text":"","code":"mid.plots(   object,   terms = mid.terms(object, interaction = FALSE),   limits = c(NA, NA),   add.intercept = FALSE,   include.main.effects = FALSE,   max.plots = NULL,   engine = c(\"ggplot2\", \"base\", \"graphics\"),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Multiple MID Component Functions — mid.plots","text":"object \"mid\" object. terms character vector. names terms visualized. limits NULL numeric vector length two specifying limits plotting scale. NAs replaced minimum /maximum MID values. add.intercept logical. TRUE, intercept added MID values plotting scale shifted. include.main.effects logical. TRUE, main effects included interaction plot. max.plots integer specifying number maximum number plots. engine character string. One \"ggplot2\" \"graphics\". ... optional parameters passed ggmid() plot().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Multiple MID Component Functions — mid.plots","text":"engine \"ggplot2\", mid.plots() returns list \"ggplot\" objects. Otherwise mid.plots() produces plots returns NULL.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Multiple MID Component Functions — mid.plots","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4L) mid <- interpret(price ~ (carat + cut + color + clarity) ^ 2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used mid.plots(mid, c(\"carat\", \"color\", \"carat:color\", \"clarity:color\"), limits = NULL) #> $carat  #>  #> $color  #>  #> $`carat:color`  #>  #> $`clarity:color`  #>"},{"path":"https://ryo-asashi.github.io/midr/reference/midr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"midr: Create an Interpretable Surrogate of Black-Box ML Models — midr-package","title":"midr: Create an Interpretable Surrogate of Black-Box ML Models — midr-package","text":"Construct globally interpretable surrogate black-box ML model decomposing prediction function target model set component functions including intercept, main effects second-order interactions.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/midr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"midr: Create an Interpretable Surrogate of Black-Box ML Models — midr-package","text":"Maintainer: Ryoichi Asasihba ryoichi.asashiba@gmail.com Authors: Hirokazu Iwasawa contributors: Reiji Kozuma [contributor]","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":null,"dir":"Reference","previous_headings":"","what":"Encoder for Quantitative Variables — numeric.encoder","title":"Encoder for Quantitative Variables — numeric.encoder","text":"numeric.encoder() returns encoder quantitative variable.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encoder for Quantitative Variables — numeric.encoder","text":"","code":"numeric.encoder(   x,   k,   type = 1L,   encoding.digits = NULL,   tag = \"x\",   frame = NULL,   weights = NULL )  numeric.frame(   reps = NULL,   breaks = NULL,   type = NULL,   encoding.digits = NULL,   tag = \"x\" )"},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encoder for Quantitative Variables — numeric.encoder","text":"x numeric vector encoded. k integer specifying coarseness encoding. positive, unique values x used sample points. type integer specifying encoding method. 1, values encoded [0, 1] scale based linear interpolation knots. 0, values encoded 0 1 using ont-hot encoding intervals. encoding.digits integer specifying rounding digits encoding case type 1. tag character string. name variable. frame \"numeric.frame\" object numeric vector defines sample points binning. weights optional. numeric vector sample weights value x. reps numeric vector used representative values (knots). breaks numeric vector used binning breaks.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encoder for Quantitative Variables — numeric.encoder","text":"numeric.encoder() returns list containing following components: frame object class \"numeric.frame\". encode function encode new_x dummy matrix. n number encoding levels. type type encoding, \"linear\" \"constant\". numeric.frame() returns \"numeric.frame\" object containing encoding information.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encoder for Quantitative Variables — numeric.encoder","text":"numeric.encoder() selects sample points variable x returns list containing encode() function convert vector dummy matrix. type 1, k considered maximum number knots, values two knots encoded two decimals, reflecting relative position knots. type 0, k considered maximum number intervals, values converted using one-hot encoding intervals.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encoder for Quantitative Variables — numeric.encoder","text":"","code":"data(iris, package = \"datasets\") enc <- numeric.encoder(x = iris$Sepal.Length, k = 5L, tag = \"Sepal.Length\") enc$frame #>   Sepal.Length Sepal.Length_min Sepal.Length_max #> 1          4.3             4.30             4.70 #> 2          5.1             4.70             5.45 #> 3          5.8             5.45             6.10 #> 4          6.4             6.10             7.15 #> 5          7.9             7.15             7.90 enc$encode(new_x = c(4:8, NA)) #>        4.3   5.1       5.8       6.4 7.9 #> [1,] 1.000 0.000 0.0000000 0.0000000 0.0 #> [2,] 0.125 0.875 0.0000000 0.0000000 0.0 #> [3,] 0.000 0.000 0.6666667 0.3333333 0.0 #> [4,] 0.000 0.000 0.0000000 0.6000000 0.4 #> [5,] 0.000 0.000 0.0000000 0.0000000 1.0 #> [6,] 0.000 0.000 0.0000000 0.0000000 0.0  frm <- numeric.frame(breaks = seq(3, 9, 2), type = 0L) enc <- numeric.encoder(x = iris$Sepal.Length, frame = frm) enc$encode(new_x = c(4:8, NA)) #>      [-Inf, 5) [5, 7) [7, Inf) #> [1,]         1      0        0 #> [2,]         0      1        0 #> [3,]         0      1        0 #> [4,]         0      0        1 #> [5,]         0      0        1 #> [6,]         0      0        0  enc <- numeric.encoder(x = iris$Sepal.Length, frame = seq(3, 9, 2)) enc$encode(new_x = c(4:8, NA)) #>        3   5   7   9 #> [1,] 0.5 0.5 0.0 0.0 #> [2,] 0.0 1.0 0.0 0.0 #> [3,] 0.0 0.5 0.5 0.0 #> [4,] 0.0 0.0 1.0 0.0 #> [5,] 0.0 0.0 0.5 0.5 #> [6,] 0.0 0.0 0.0 0.0"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ICE of MID Model with Basic Functions — plot.mid.conditional","title":"Plot ICE of MID Model with Basic Functions — plot.mid.conditional","text":"\"mid.conditional\" objects, plot() visualizes ICE curves MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ICE of MID Model with Basic Functions — plot.mid.conditional","text":"","code":"# S3 method for class 'mid.conditional' plot(   x,   centered = FALSE,   draw.dots = TRUE,   sample = NULL,   term = NULL,   variable.alpha = NULL,   variable.colour = NULL,   variable.linetype = NULL,   variable.linewidth = NULL,   scale.palette = NULL,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ICE of MID Model with Basic Functions — plot.mid.conditional","text":"x \"mid.conditional\" object visualized. centered logical. TRUE, ICE values observation set zero leftmost point variable. draw.dots logical. TRUE, points representing predictions observation plotted. sample optional vector specifying names observations plotted. term optional character string specifying interaction term. passed, ICE specified term plotted. variable.alpha name variable used set alpha. variable.colour name variable used set colour. variable.linetype name variable used set linetype. variable.linewidth name variable used set linewidth. scale.palette character vector color names, specifying colors used. ... optional parameters passed base::plot().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ICE of MID Model with Basic Functions — plot.mid.conditional","text":"plot.mid.conditional() produces ICE plot invisibly returns ICE matrix used plot.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot ICE of MID Model with Basic Functions — plot.mid.conditional","text":"S3 method plot() \"mid.conditional\" objects creates visualization ICE curves fitted MID model using base:plot().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ICE of MID Model with Basic Functions — plot.mid.conditional","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, airquality, lambda = 1) #> 'model' is not passed: the response variable in the data is used mc <- mid.conditional(mid, \"Wind\", na.omit(airquality)) plot(mc, variable.colour = \"Solar.R\", centered = TRUE)"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID with Basic Functions — plot.mid","title":"Plot MID with Basic Functions — plot.mid","text":"\"mid\" objects, plot() visualizes MID component function.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID with Basic Functions — plot.mid","text":"","code":"# S3 method for class 'mid' plot(   x,   term,   add.intercept = FALSE,   include.main.effects = FALSE,   scale.type = \"default\",   scale.palette = c(\"#2f7a9a\", \"#FFFFFF\", \"#7e1952\"),   cells.count = c(100L, 100L),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID with Basic Functions — plot.mid","text":"x \"mid\" object visualized. term character string specifying component function plotted. add.intercept logical. TRUE, intercept added MID values plotting scale shifted. include.main.effects logical. TRUE, main effects included interaction plot. scale.type character string. color type interaction plot. One \"default\", \"viridis\", \"gradient\". scale.palette character vector color names specifying colors used interaction plot. cells.count integer integer-valued vector length two specifying number cells raster type interaction plot. ... optional parameters passed graphing function.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID with Basic Functions — plot.mid","text":"plot.mid() produces line plot bar plot main effect filled contour plot interaction returns NULL.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID with Basic Functions — plot.mid","text":"S3 method plot() \"mid\" objects creates visualization MID component function using base::plot() main effect quantitative variable, graphics::barplot() main effect qualitative variable, graphics::filled.contour() interaction.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID with Basic Functions — plot.mid","text":"","code":"data(airquality, package = \"datasets\") airquality$Month <- factor(airquality$Month) mid <- interpret(Ozone ~ .^2, airquality, lambda = 1) #> 'model' is not passed: the response variable in the data is used plot(mid, \"Temp\")  plot(mid, \"Month\")  plot(mid, \"Wind:Temp\")  plot(mid, \"Solar.R:Month\", scale.type = \"viridis\",      add.intercept = TRUE, include.main.effects = TRUE)"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Importance with Basic Functions — plot.mid.importance","title":"Plot MID Importance with Basic Functions — plot.mid.importance","text":"\"mid.importance\" objects, plot() visualizes importance MID component functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Importance with Basic Functions — plot.mid.importance","text":"","code":"# S3 method for class 'mid.importance' plot(   x,   type = c(\"barplot\", \"heatmap\"),   max.bars = NA,   scale.palette = c(\"#FFFFFF\", \"#464646\"),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Importance with Basic Functions — plot.mid.importance","text":"x \"mid.importance\" object visualized. type character string specifying type plot. One \"barplot\" \"heatmap\". max.bars integer specifying maximum number bars barplot. scale.palette character vector length two used color palette heatmap. ... optional parameters passed graphing function.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Importance with Basic Functions — plot.mid.importance","text":"plot.mid.importance() produces barplot heatmap returns NULL.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Importance with Basic Functions — plot.mid.importance","text":"S3 method plot() \"mid.importance\" objects creates visualization MID importance using graphics::barplot() graphics::image().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Importance with Basic Functions — plot.mid.importance","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used imp <- mid.importance(mid) plot(imp)  plot(imp, type = \"heatmap\")"},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Method for fitted MID Models — predict.mid","title":"Predict Method for fitted MID Models — predict.mid","text":"method predict() \"mid\" objects obtains predictions fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Method for fitted MID Models — predict.mid","text":"","code":"# S3 method for class 'mid' predict(   object,   newdata = NULL,   na.action = getOption(\"na.action\"),   type = c(\"response\", \"link\", \"terms\"),   terms = object$terms,   ... )  mid.f(object, term, x, y = NULL)"},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Method for fitted MID Models — predict.mid","text":"object \"mid\" object used make predictions. newdata data frame new observations. na.action function character string specifying happen data contain NAs. type type prediction required. default scale response varialbe. alternative \"link\" scale linear predictors. \"terms\" option returns matrix giving fitted values term model formula linear predictor scale. terms character vector term labels, specifying subset component functions used make predictions. ... used. term character string specifying component function fitted MID model. x matrix, data frame vector used input first argument component function. matrix data frame passed, inputs x y extracted . y vector used input second argument component function.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Method for fitted MID Models — predict.mid","text":"predict.mid() returns numeric vector MID model predictions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict Method for fitted MID Models — predict.mid","text":"S3 method predict() MID models returns model predictions. mid.f() works component function MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Method for fitted MID Models — predict.mid","text":"","code":"data(trees, package = \"datasets\") idx <- c(5L, 10L, 15L, 20L, 25L, 30L) mid <- interpret(Volume ~ .^2, trees[-idx,], lambda = 1) #> 'model' is not passed: the response variable in the data is used trees[idx, \"Volume\"] #> [1] 18.8 19.9 19.1 24.9 42.6 51.0 predict(mid, trees[idx,]) #> [1] 18.55337 20.58210 22.14285 23.46519 45.01464 57.83952 predict(mid, trees[idx,], type = \"terms\") #>           Girth     Height Girth:Height #> [1,] -12.738856  1.1216360 -0.189405623 #> [2,]  -8.033129 -1.7644569  0.019681599 #> [3,]  -6.497487 -1.7644569  0.044798668 #> [4,]  -1.870473 -4.7782653 -0.246067966 #> [5,]  15.096778 -0.4426815  0.000545126 #> [6,]  27.372413  0.1252837 -0.018178806 #> attr(,\"constant\") #> [1] 30.36 mid.f(mid, \"Girth\", trees[idx,]) #> [1] -12.738856  -8.033129  -6.497487  -1.870473  15.096778  27.372413 mid.f(mid, \"Girth:Height\", trees[idx,]) #> [1] -0.189405623  0.019681599  0.044798668 -0.246067966  0.000545126 #> [6] -0.018178806 predict(mid, trees[idx,], terms = c(\"Girth\", \"Height\")) #> [1] 18.74278 20.56241 22.09806 23.71126 45.01410 57.85770"},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Print MID Models — print.mid","title":"Print MID Models — print.mid","text":"\"mid\" objects, print() prints MID values uninterpreted rate.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print MID Models — print.mid","text":"","code":"# S3 method for class 'mid' print(x, digits = max(3L, getOption(\"digits\") - 2L), omit.values = FALSE, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print MID Models — print.mid","text":"x \"mid\" object printed. digits integer specifying number significant digits. omit.values logical. TRUE, MID values main effects printed. ... used.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print MID Models — print.mid","text":"print.mid() returns \"mid\" object passed function without modification.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print MID Models — print.mid","text":"S3 method print() \"mid\" objects prints MID values fitted MID model uninterpreted rate.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print MID Models — print.mid","text":"","code":"data(cars, package = \"datasets\") print(interpret(dist ~ speed, cars)) #> 'model' is not passed: the response variable in the data is used #>  #> Call: #> interpret(formula = dist ~ speed, data = cars) #>  #> Intercept: 42.98 #>  #> Main Effects: #> --- #> $speed #>        4        7        8       10       11       12       13       14  #> -36.9800 -29.9800 -31.1050 -18.3550 -20.4800 -21.4800  -7.9800   7.5200  #>       15       16       17       18       19       20       22       24  #>  -9.6467  -6.9800  -2.3133  21.5200   7.0200   7.4200  13.1629  48.3057  #>       25  #>  42.0200  #>  #> Uninterpreted Rate: 0.22636"},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize MID Models — summary.mid","title":"Summarize MID Models — summary.mid","text":"\"mid\" objects, summary() prints information fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize MID Models — summary.mid","text":"","code":"# S3 method for class 'mid' summary(object, digits = max(3L, getOption(\"digits\") - 2L), top.n = 10L, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize MID Models — summary.mid","text":"object \"mid\" object summarized. digits integer specifying number significant digits. top.n integer specifying maximum number terms printed MID importance values. ... used.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize MID Models — summary.mid","text":"summary.mid() returns \"mid\" object passed function without modification.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize MID Models — summary.mid","text":"S3 method summary() \"mid\" objects prints basic information MID model including uninterpreted rate, residuals, encoding schemes, MID importance.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize MID Models — summary.mid","text":"","code":"data(cars, package = \"datasets\") summary(interpret(dist ~ speed, cars)) #> 'model' is not passed: the response variable in the data is used #>  #> Call: #> interpret(formula = dist ~ speed, data = cars) #>  #> Uninterpreted Rate: #> [1] 0.22636 #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -24.50000  -8.06250  -0.33333   8.37500  29.50000   #>  #> Encoding: #>       main.effect #> speed  linear(17) #>  #> Importance: #>    term importance degree #> 1 speed     18.138      1"},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for ggplot Objects — theme_midr","title":"Theme for ggplot Objects — theme_midr","text":"theme_midr() returns complete theme \"ggplot\" objects.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for ggplot Objects — theme_midr","text":"","code":"theme_midr(   grid_type = c(\"none\", \"x\", \"y\", \"xy\"),   base_size = 11,   base_family = \"serif\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )"},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for ggplot Objects — theme_midr","text":"grid_type one \"none\", \"x\", \"y\" \"xy\". base_size base font size, given pts. base_family base font family. base_line_size base size line elements. base_rect_size base size rect elements.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for ggplot Objects — theme_midr","text":"theme_midr() provides ggplot2 theme customized midr package.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for ggplot Objects — theme_midr","text":"","code":"X <- data.frame(x = 1:10, y = 1:10) ggplot2::ggplot(X) +   ggplot2::geom_point(ggplot2::aes(x, y)) +   theme_midr()  ggplot2::ggplot(X) +   ggplot2::geom_col(ggplot2::aes(x, y)) +   theme_midr(grid_type = \"y\")  ggplot2::ggplot(X) +   ggplot2::geom_line(ggplot2::aes(x, y)) +   theme_midr(grid_type = \"xy\")"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Data Frames — weighted","title":"Weighted Data Frames — weighted","text":"weighted() returns data frame sample weights.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Data Frames — weighted","text":"","code":"weighted(data, weights = NULL, ...)  augmented(data, weights = NULL, size = nrow(data), r = 0.01)  shuffled(data, weights = NULL, size = nrow(data))  latticized(   data,   weights = NULL,   k = 10L,   type = 0L,   use.catchall = TRUE,   catchall = \"(others)\",   frames = list(),   keep.mean = TRUE )  # S3 method for class 'weighted' weights(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Data Frames — weighted","text":"data data frame. weights numeric vector sample weights observation data. ... used. size integer. number random observations whose values sampled marginal distribution variable. r numeric value specifying ratio total weights random observations sum sample weights. weight random observations calculated sum(attr(data, \"weights\")) * r / size. k integer. maximum number sample points variable. positive, unique values used sample points. type integer. type encoding quantitative variables passed numeric.encoder(). use.catchall logical. TRUE, less frequent levels factor variables dropped replaced catchall level. catchall character string used catchall level. frames named list encoding frames (\"numeric.frame\" \"factor.frame\" objects). keep.mean logical. TRUE, representative values group average corresponding group. object data frame attribute \"weights\".","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Data Frames — weighted","text":"weighted() returns data frame attribute \"weights\". augmented() returns weighted data frame original data shuffled data relatively small weights. shuffled() returns weighted data frame shuffled data. latticized() returns weighted data frame latticized data, whose values grouped replaced representative value corresponding group.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Data Frames — weighted","text":"weighted() returns data frame \"weights\" attribute can extracted using stats::weights(). augmented(), shuffled() latticized() return weighted data frame data modifications. functions designed use interpret(). modified data frames preserve original correlation structure variables, response variable (y) always replaced model predictions (yhat).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Data Frames — weighted","text":"","code":"x1 <- runif(1000L, -1, 1) x2 <- x1 + runif(1000L, -1, 1) X <- weighted(cbind(x1, x2), (abs(x1) + abs(x2)) / 2) Y1 <- weighted(X) ggplot2::ggplot(Y1, ggplot2::aes(x1, x2, alpha = weights(Y1))) +   ggplot2::geom_point() +   ggplot2::labs(title = \"weighted\")  Y2 <- shuffled(X) #> Error in shuffled(X): object 'X' not found ggplot2::ggplot(Y2, ggplot2::aes(x1, x2, alpha = weights(Y2))) +   ggplot2::geom_point() +   ggplot2::labs(title = \"shuffled\") #> Error: object 'Y2' not found Y3 <- augmented(X) #> Error in augmented(X): object 'X' not found ggplot2::ggplot(Y3, ggplot2::aes(x1, x2, alpha = weights(Y3))) +   ggplot2::geom_point() +   ggplot2::labs(title = \"augmented\") #> Error: object 'Y3' not found Y4 <- latticized(X) #> Error in latticized(X): object 'X' not found ggplot2::ggplot(Y4, ggplot2::aes(x1, x2, size = weights(Y4))) +   ggplot2::geom_point() +   ggplot2::labs(title = \"latticized\") #> Error: object 'Y4' not found"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Sample Quantile — weighted.quantile","title":"Weighted Sample Quantile — weighted.quantile","text":"weighted.quantile() produces weighted sample quantiles corresponding given probabilities.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Sample Quantile — weighted.quantile","text":"","code":"weighted.quantile(   x,   w = NULL,   probs = seq(0, 1, 0.25),   na.rm = FALSE,   names = TRUE,   digits = 7L,   type = 1L,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Sample Quantile — weighted.quantile","text":"x numeric vector whose weighted sample quantiles wanted. w numeric vector sample weights value x. probs numeric vector probabilities values [0, 1]. na.rm logical. TRUE, NA NaNs removed x quantiles computed. names logical. TRUE, result \"names\" attribute. digits used names TRUE. precision use formatting percentages. type integer 1 9 selecting quantile algorithms. 1 available weighted quantile. ... arguments passed stats::quantile() weights passed.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Sample Quantile — weighted.quantile","text":"weighted.quantile() returns weighted sample quantiles corresponding given probabilities.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Sample Quantile — weighted.quantile","text":"weighted.quantile() wrapper function stats::quantile() weighted quantiles. weighted quantile, \"type 1\" quantile, inverse empirical distribution function, available.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Sample Quantile — weighted.quantile","text":"","code":"stats::quantile(x = 1:10, type = 1L, probs = c(0, .25, .50, .75, 1)) #>   0%  25%  50%  75% 100%  #>    1    3    5    8   10  weighted.quantile(x = 1:10, w = 1:10, probs = c(0, .25, .50, .75, 1)) #>   0%  25%  50%  75% 100%  #>    1    5    7    9   10"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Loss Functions — weighted.rmse","title":"Weighted Loss Functions — weighted.rmse","text":"weighted.rmse(), weighted.mae() weighted.medae() compute loss weighted vector prediction errors.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.rmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Loss Functions — weighted.rmse","text":"","code":"weighted.rmse(x, y = NULL, w = NULL, ..., na.rm = FALSE)  weighted.mae(x, y = NULL, w = NULL, ..., na.rm = FALSE)  weighted.medae(x, y = NULL, w = NULL, ..., na.rm = FALSE)"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.rmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Loss Functions — weighted.rmse","text":"x numeric vector errors. y optional numeric vector. passed, loss calculated differences x y. w numeric vector sample weights value x. ... optional parameters. na.rm logical. TRUE, NA NaNs removed x calculation.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.rmse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Loss Functions — weighted.rmse","text":"weighted.rmse() (root mean squared error), weighted.mae() (mean absolute error) weighted.medae (median absolute error) returns single numeric value.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.rmse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Loss Functions — weighted.rmse","text":"weighted.rmse() returns root mean square error, weighted.mae() returns mean absolute error, weighted.medae() returns median absolute error weighted vector.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.rmse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Loss Functions — weighted.rmse","text":"","code":"weighted.rmse(x = c(0, 10), y = c(0, 0), w = c(99, 1)) #> [1] 1 weighted.mae(x = c(0, 10), y = c(0, 0), w = c(99, 1)) #> [1] 0.1 weighted.medae(x = c(0, 10), y = c(0, 0), w = c(99, 1)) #> [1] 0"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Tabulation for Vectors — weighted.tabulate","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"weighted.tabulate() returns sum weights integer vector bin.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"","code":"weighted.tabulate(bin, w = NULL, nbins = max(1L, bin, na.rm = TRUE))"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"bin numeric vector positive integers, factor. w numeric vector sample weights value bin. nbins number bins used.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"weighted.tabulate() returns numeric vector.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"weighted.tabulate() wrapper function tabulate() reflect sample weights.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"","code":"tabulate(bin = c(2, 2, 3, 5)) #> [1] 0 2 1 0 1 weighted.tabulate(bin = c(2, 2, 3, 5), w = 1:4) #> [1] 0 3 3 0 4"},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-043","dir":"Changelog","previous_headings":"","what":"midr 0.4.3","title":"midr 0.4.3","text":"“midr” package currently release process. write vignettes use package. mid-January 2025 submit package CRAN.","code":""}]

[{"path":"https://ryo-asashi.github.io/midr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 midr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"classification-task","dir":"Articles","previous_headings":"","what":"Classification Task","title":"Interpretation of Classification Models","text":"use titanic dataset, available website https://www.encyclopedia-titanica.org/ included DALEX package. dataset 9 variables 2207 people, 1317 passengers 890 crew members. fit classification models predict survived tragedy , interpret fitted models. model type, fit classification model using training dataset 1707 people interpretative MID surrogate target model using dataset. evaluate predictive accuracy target model AUC representation accuracy surrogate model Spearman’s rank correlation coefficient two predicted probabilities. following examples, use two specialized link functions classification tasks: translogit (transformed-logit) transprobit (transformed-probit). two link functions transformed g(0.5)=0.5g(0.5) = 0.5 g′(0.5)=1g'(0.5) = 1. link functions, effects linear predictor can approximately interpreted upper bound effects predicted probabilities.","code":"# benchmark classification task library(DALEX) #> Welcome to DALEX (version: 2.5.2). #> Find examples and detailed introduction at: http://ema.drwhy.ai/ #> Additional features will be available after installation of: ggpubr. #> Use 'install_dependencies()' to get all suggested dependencies set.seed(42) test_rows <- sample(nrow(titanic), 500L) train <- titanic[-test_rows, -5] str(train) #> 'data.frame':    1707 obs. of  8 variables: #>  $ gender  : Factor w/ 2 levels \"female\",\"male\": 2 1 1 2 2 1 2 2 2 2 ... #>  $ age     : num  42 39 16 25 30 28 27 20 30 27 ... #>  $ class   : Factor w/ 7 levels \"1st\",\"2nd\",\"3rd\",..: 3 3 3 3 2 2 3 3 3 3 ... #>  $ embarked: Factor w/ 4 levels \"Belfast\",\"Cherbourg\",..: 4 4 4 4 2 2 2 4 4 4 ... #>  $ fare    : num  7.11 20.05 7.13 7.13 24 ... #>  $ sibsp   : num  0 1 0 0 1 1 0 0 0 0 ... #>  $ parch   : num  0 1 0 0 0 0 0 0 0 0 ... #>  $ survived: Factor w/ 2 levels \"no\",\"yes\": 1 2 2 2 1 2 2 2 1 1 ... test  <- titanic[ test_rows, -5] str(test[, -9]) #> 'data.frame':    500 obs. of  8 variables: #>  $ gender  : Factor w/ 2 levels \"female\",\"male\": 2 2 1 2 2 2 2 2 1 2 ... #>  $ age     : num  74 19 32 21 40 23 24 26 34 28 ... #>  $ class   : Factor w/ 7 levels \"1st\",\"2nd\",\"3rd\",..: 3 3 2 3 4 3 5 5 2 5 ... #>  $ embarked: Factor w/ 4 levels \"Belfast\",\"Cherbourg\",..: 4 2 4 4 4 4 4 4 4 1 ... #>  $ fare    : num  7.15 7.04 21 8.08 0 ... #>  $ sibsp   : num  0 0 0 0 0 0 0 0 1 0 ... #>  $ parch   : num  0 0 0 0 0 0 0 0 1 0 ... #>  $ survived: Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 1 1 2 1 2 2 ... # define utility functions for the following chunks effect_plots <- function(object) {   plots <- mid.plots(mid, terms = terms(mid)[1:6])   for (i in 1:6) {     plots[[i]] <- plots[[i]] + ggtitle(\"main effect\")     if (any(i == c(1, 3, 4)))       plots[[i]] <- plots[[i]] + coord_flip()   }   plots }  interaction_plot <- function(     object, term = NULL, theme = \"shap\") {   if (is.null(term))     term <- mid.terms(mid.importance(object), main.effect = FALSE)[1L]   ggmid(object, term, type = \"data\", data = na.omit(titanic),          theme = theme, main.effects = TRUE) +     theme(legend.position = \"right\") +     ggtitle(\"interaction effect plot\") }  ice_plot <- function(object, variable = \"age\") {   ggmid(mid.conditional(object, variable,                         data = na.omit(titanic)[1:200, ]),         var.color = gender, theme = \"shap_r\") +     theme(legend.position = \"right\") +     ggtitle(\"conditional expectation\") }  importance_plot <- function(object) {   ggmid(mid.importance(object), \"heatmap\", theme = \"grayscale\") +     theme(legend.position = \"right\") +     ggtitle(\"feature importance\") }  evaluation_plot <- function(model, mid, ...) {   pred <- get.yhat(model, test, ...)   pred_mid <- get.yhat(mid, test)   actual <- as.numeric(test$survived == \"yes\")   auc_vs_test <- auc(actual, pred)   cor_vs_mid <-  cor(pred, pred_mid, method = \"spearman\",                      use = \"pairwise.complete.obs\")   ggplot() + scale_color_theme(\"Accent\") +     geom_point(aes(x = pred, y = pred_mid), col = \"#4378bf\",                data = na.omit(data.frame(pred, pred_mid))) +     geom_abline(slope = 1, intercept = 0, col = \"black\", lty = 2) +     theme(legend.position = \"right\") + xlim(0, 1) +     labs(x = \"model-prediction\", y = \"mid-prediction\") +     annotate(\"text\", family = \"serif\", size = 3, x = 0.2, y = 0.8,       label = sprintf(\"vs test (AUC)       : %.3f\\nvs mid (Spearman): %.3f\",                       auc_vs_test, cor_vs_mid)     ) + ggtitle(\"representation accuracy\") }"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"logistic-regression","dir":"Articles","previous_headings":"Additive Models","what":"Logistic Regression","title":"Interpretation of Classification Models","text":"","code":"model <- glm(survived == \"yes\" ~ ., family = \"binomial\", data = train) mid <- interpret(survived ~ .^2, train, model, link = \"translogit\") print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model, #>  link = \"translogit\") #>  #> Model Class: glm, lm #>  #> Intercept: 0.26975 #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Variation Ratio: 0 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 2L,              importance_plot(mid),              interaction_plot(mid),              ice_plot(mid),              evaluation_plot(model, mid, target = \"yes\"))"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"single-hidden-layer-network","dir":"Articles","previous_headings":"Neural Network","what":"Single Hidden Layer Network","title":"Interpretation of Classification Models","text":"","code":"library(nnet) set.seed(42) model <- nnet(survived ~ ., train, size = 5, maxit = 1e3, trace = FALSE) mid <- interpret(survived ~ .^2, train, model, link = \"transprobit\",                  lambda = .01) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model, #>  link = \"transprobit\", lambda = 0.01) #>  #> Model Class: nnet.formula, nnet #>  #> Intercept: 0.29558 #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Variation Ratio: 0.045592 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 2L,              importance_plot(mid),              interaction_plot(mid),              ice_plot(mid),              evaluation_plot(model, mid))"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"rbf-kernel-svm","dir":"Articles","previous_headings":"Support Vector Machine","what":"RBF Kernel SVM","title":"Interpretation of Classification Models","text":"","code":"library(e1071) model <- svm(survived ~ ., train, kernel = \"radial\", probability = TRUE) mid <- interpret(survived ~ .^2, train, model, link = \"transprobit\",                  pred.args = list(target = \"yes\")) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model, #>  pred.args = list(target = \"yes\"), link = \"transprobit\") #>  #> Model Class: svm.formula, svm #>  #> Intercept: 0.29569 #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Variation Ratio: 0.0073507 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 2L,              importance_plot(mid),              interaction_plot(mid),              ice_plot(mid),              evaluation_plot(model, mid, target = \"yes\"))"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"random-forest","dir":"Articles","previous_headings":"Tree Based Models","what":"Random Forest","title":"Interpretation of Classification Models","text":"","code":"library(ranger) set.seed(42) model <- ranger(survived ~ ., na.omit(train), probability = TRUE) mid <- interpret(survived ~ .^2, train, model,                  link = \"transprobit\", lambda = .01) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model, #>  link = \"transprobit\", lambda = 0.01) #>  #> Model Class: ranger #>  #> Intercept: 0.30031 #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Variation Ratio: 0.062185 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 2L,              importance_plot(mid),              interaction_plot(mid),              ice_plot(mid),              evaluation_plot(model, mid, target = \"yes\"))"},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"decision-tree","dir":"Articles","previous_headings":"Tree Based Models","what":"Decision Tree","title":"Interpretation of Classification Models","text":"","code":"library(rpart) model <- rpart(survived ~ ., train) # create encoding frames for CART frm <- cbind(model$frame, labels(model, collapse = FALSE)) print(t(frm[frm$var != \"<leaf>\", c(\"var\", \"ltemp\")])) #>       1        2       4       9       5        11        3       6         #> var   \"gender\" \"class\" \"age\"   \"sibsp\" \"age\"    \"fare\"    \"class\" \"fare\"    #> ltemp \"b\"      \"bcefg\" \">=9.5\" \">=2.5\" \">=54.5\" \">=26.63\" \"c\"     \">=24.56\" #>       13       #> var   \"age\"    #> ltemp \">=36.5\" fun <- function(x) if (is.numeric(x)) range(x, na.rm = TRUE) else levels(x) frames <- lapply(train, fun) frames$age <- c(frames$age, 9.5, 54.5, 36.5) frames$fare <- c(frames$fare, 26.63, 24.56) frames$sibsp <- c(frames$fare, 2.5) mid <- interpret(survived ~ .^2, train, model, link = \"transprobit\",                  singular.ok = TRUE, type = 0, frames = frames) #> singular fit encountered print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model, #>  link = \"transprobit\", singular.ok = TRUE, type = 0, frames = frames) #>  #> Model Class: rpart #>  #> Intercept: 0.29099 #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Variation Ratio: 0.022918 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 2L,              importance_plot(mid),              interaction_plot(mid),              ice_plot(mid),              evaluation_plot(model, mid, target = \"yes\"))"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"predictive-mid","dir":"Articles","previous_headings":"Other Models","what":"Predictive MID","title":"Interpretation of Classification Models","text":"fit MID model Titanic classification task, can use “one-sided” link functions: identity-gaussian identity-logistic. link functions map 00 00 11 11, inverse link functions map real number value unit interval (0,1)(0, 1).","code":"mid <- interpret(survived ~ .^2, train,                  link = \"identity-gaussian\", lambda = .1) #> 'model' not passed: response variable in 'data' is used print(mid) #>  #> Call: #> interpret(formula = survived ~ .^2, data = train, link = \"identity-gaussian\", #>  lambda = 0.1) #>  #> Intercept: 0.32285 #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Variation Ratio: 0.61459 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 2L,              importance_plot(mid),              interaction_plot(mid),              ice_plot(mid),              interaction_plot(mid, \"age:class\"))"},{"path":"https://ryo-asashi.github.io/midr/articles/colortheme.html","id":"color-themes","dir":"Articles","previous_headings":"","what":"Color themes","title":"Getting Started with Color Themes","text":"“color.theme” object provides two color-generating functions: palette() ramp(). palette() function accepts integer nn returns vector nn discrete colors. primarily intended qualitative themes, distinct colors used represent categorical data. ramp() function accepts numeric vector xx values [0,1][0, 1] interval returns vector corresponding colors. maps numeric values onto continuous color gradient, making suitable sequential diverging themes.","code":""},{"path":"https://ryo-asashi.github.io/midr/articles/colortheme.html","id":"pre-defined-themes","dir":"Articles","previous_headings":"Color themes","what":"Pre-defined themes","title":"Getting Started with Color Themes","text":"can get pre-defined “color.theme” object providing theme name color.theme() function.   can modify themes reversing color order changing theme type (e.g., sequential qualitative). changes can applied two ways: Using Arguments : provide appropriate argument function, reverse = TRUE type = \"qualitative\". Using Suffixes : convenience, can append suffix directly theme’s name. _r reverse theme, @q (longer, @qual) make theme qualitative (@d diverging, @s sequential).     multiple packages provide theme name (e.g., “Paired”), must specify one use. can two ways: Using Argument : provide package name source argument (e.g., source = \"grDevices\"). Using Prefix : append prefix theme name package name forward slash (e.g., \"RColorBrewer/Paired\").","code":"library(midr) library(ggplot2) library(gridExtra) # diverging color theme \"nightfall\" (package:khroma) nightfall <- color.theme(\"nightfall\") print(nightfall) #> Diverging Color Theme : \"nightfall\" nightfall$palette(5) #> [1] \"#125A56\" \"#60BCE9\" \"#ECEADA\" \"#FD9A44\" \"#A01813\" #> attr(,\"missing\") #> [1] \"#FFFFFF\" nightfall$ramp(c(0.00, 0.25, 0.50, 0.75, 1.00)) #> [1] \"#125955\" \"#5FBBE9\" \"#EBEAD9\" \"#FD9944\" \"#9F1813\" # sequential color theme \"viridis\" (package:viridisLite) viridis <- color.theme(\"viridis\") print(viridis) #> Sequential Color Theme : \"viridis\" nightfall$ramp(c(0.00, 0.25, 0.50, 0.75, 1.00)) #> [1] \"#125955\" \"#5FBBE9\" \"#EBEAD9\" \"#FD9944\" \"#9F1813\" viridis$ramp(c(0.00, 0.25, 0.50, 0.75, 1.00)) #> [1] \"#440053\" \"#3B518B\" \"#21908C\" \"#5CC862\" \"#FDE625\" plot(color.theme(\"nightfall\", reverse = TRUE),      text = \"khroma/nightfall_r\") plot(color.theme(\"nightfall\", type = \"qualitative\"),      text = \"khroma/nightfall@qual\") plot(color.theme(\"viridis_r\",),      text = \"viridisLite/viridis_r\") plot(color.theme(\"viridis@qual\"),      text = \"viridisLite/viridis@qual\") # qualitative color theme \"Paired\" (package:grDevices) paired <- color.theme(\"Paired\", source = \"grDevices\") plot(paired, text = \"grDevices/Paired\") # qualitative color theme \"Paired\" (package:RColorBrewer) paired2 <- color.theme(\"RColorBrewer/Paired\") plot(paired2, text = \"RColorBrewer/Paired\")"},{"path":"https://ryo-asashi.github.io/midr/articles/colortheme.html","id":"custom-themes","dir":"Articles","previous_headings":"Color themes","what":"Custom themes","title":"Getting Started with Color Themes","text":"Alternatively, can create new “color.theme” object passing custom color vector function first argument color.theme().   can register custom theme call name later current R session. , use set.color.theme() function.","code":"# create new color theme using a color vector mytheme <- color.theme(   c(\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\"),   type = \"sequential\", name = \"mytheme\" ) print(mytheme) #> Sequential Color Theme : \"mytheme\" mytheme$palette(5) #> [1] \"#003F5B\" \"#614D86\" \"#B85485\" \"#F46C63\" \"#FFA500\" mytheme$ramp(c(0.00, 0.25, 0.50, 0.75, 1.00)) #> [1] \"#003F5B\" \"#614D86\" \"#B85485\" \"#F46C63\" \"#FFA500\" # create new color theme using a color function rainbow <- color.theme(grDevices::rainbow,                        name = \"rainbow\", source = \"grDevices\") print(rainbow) #> Sequential Color Theme : \"rainbow\" rainbow$palette(5) #> [1] \"#FF0000\" \"#CCFF00\" \"#00FF66\" \"#0066FF\" \"#CC00FF\" rainbow$ramp(c(0.00, 0.25, 0.50, 0.75, 1.00)) #> [1] \"#FF0000\" \"#81FF00\" \"#00FFFB\" \"#7B00FF\" \"#FF0006\" set.color.theme(mytheme, name = \"mytheme\", source = \"custom\") color.theme(\"mytheme_r@div\") #> Diverging Color Theme : \"mytheme\" color.theme(\"custom/mytheme@q\") #> Qualitative Color Theme : \"mytheme\""},{"path":"https://ryo-asashi.github.io/midr/articles/colortheme.html","id":"using-themes-in-midr","dir":"Articles","previous_headings":"Color themes","what":"Using themes in midr","title":"Getting Started with Color Themes","text":"color appearance visualizations created midr can easily customized passing “color.theme” object pre-defined color theme name (see ) ggmid() plot().","code":"set.seed(42) dataset <- diamonds[sample(nrow(diamonds), 5000L), ] mid <- interpret(price ~ (carat + color + clarity + cut) ^ 2, dataset) #> 'model' not passed: response variable in 'data' is used grid.arrange(   ggmid(mid, \"color:clarity\", main.effect = TRUE),   ggmid(mid, \"color:clarity\", main.effect = TRUE, theme = mytheme),   ggmid(mid, \"carat:color\", main.effect = TRUE, theme = \"tokyo_r\"),   ggmid(mid, \"carat:color\", main.effect = TRUE, theme = \"bicolor\") ) imp <- mid.importance(mid) grid.arrange(   ggmid(imp, \"heatmap\"),   ggmid(imp, \"barplot\", max = 10, theme = \"mytheme@q\"),   ggmid(imp, \"heatmap\", theme = \"mytheme_r\"),   ggmid(imp, \"barplot\", max = 10, theme = \"highlight_r\") )"},{"path":"https://ryo-asashi.github.io/midr/articles/colortheme.html","id":"using-themes-with-ggplot2","dir":"Articles","previous_headings":"Color themes","what":"Using themes with ggplot2","title":"Getting Started with Color Themes","text":"apply color themes ggplot2 plots, use scale_color_theme() scale_fill_theme() functions. scales integrate themes directly plot’s color fill aesthetics.","code":"p <- ggplot(dataset) + geom_point(aes(carat, price, col = color)) grid.arrange(   p + scale_color_theme(\"discreterainbow\"),   p + scale_color_theme(\"viridisLite/mako\", discrete = TRUE),   p + scale_color_theme(\"tokyo@qual\"),   p + scale_color_theme(\"highlight?base='#50505010'&which=6:7\") ) p <- ggplot(dataset) +   geom_histogram(aes(x = carat, fill = cut), bins = 20) grid.arrange(   p + scale_fill_theme(\"muted_r\"),   p + scale_fill_theme(\"khroma/discreterainbow\"),   p + scale_fill_theme(\"mytheme@q\"),   p + scale_fill_theme(\"highlight?which=1:3&accent='#0da1d0'\") )"},{"path":"https://ryo-asashi.github.io/midr/articles/colortheme.html","id":"pre-defined-color-themes","dir":"Articles","previous_headings":"","what":"Pre-defined color themes","title":"Getting Started with Color Themes","text":"following color themes available midr package loaded. themes depend packages installed, full functionality, please ensure already installed viridisLite, RColorBrewer, khroma packages.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/ggplot2.html","id":"feature-importance","dir":"Articles","previous_headings":"","what":"Feature Importance","title":"Visualization with ggplot2 package","text":"","code":"# compute MID based variable importance imp <- mid.importance(mid)  # create importance plots ggmid(imp, theme = \"Temps\", max = 15) +   ggtitle('Feature Importance (barplot)') ggmid(imp, type = \"dotchart\", theme = \"Set 1\", max = 15, cex = 3) +   ggtitle('Feature Importance (dotchart)') ggmid(imp, type = \"heatmap\", theme = \"BuPu\") +   ggtitle('Feature Importance (heatmap)') ggmid(imp, type = \"boxplot\", theme = \"Spectral\", max = 15) +   ggtitle('Feature Importance (boxplot)')"},{"path":"https://ryo-asashi.github.io/midr/articles/ggplot2.html","id":"component-functions","dir":"Articles","previous_headings":"","what":"Component Functions","title":"Visualization with ggplot2 package","text":"","code":"# create component plots ggmid(mid, term = \"temp\") +   ggtitle('Main Effect (effect)') ggmid(mid, term = \"hr\") +   ggtitle('Main Effect (effect)') ggmid(mid, term = \"hr:as.factor(workingday)\") +   ggtitle('Interaction Effect (effect)') ggmid(mid, term = \"hr:temp\", type = \"data\",      main.effects = TRUE, theme = \"Mako\", data = Bikeshare) +   ggtitle('Interaction Effect (data)') ggmid(mid, term = \"temp:windspeed\", type = \"compound\",      main.effects = TRUE, data = Bikeshare) +   ggtitle('Interaction Effect (compound)')"},{"path":"https://ryo-asashi.github.io/midr/articles/ggplot2.html","id":"conditional-expectations","dir":"Articles","previous_headings":"","what":"Conditional Expectations","title":"Visualization with ggplot2 package","text":"","code":"# compute ICE plots set.seed(42) ice_rows <- sample(nrow(Bikeshare), 200L) ice <- mid.conditional(mid, variable = \"hr\",                        data = Bikeshare[ice_rows, ]) # create plots ggmid(ice, theme = \"Cividis\", var.color = mnth == \"Aug\") +   ggtitle('Conditional Expectations (iceplot)') +   theme(legend.position = \"bottom\") ggmid(ice, term = \"hr:temp\", dots = FALSE,      theme = \"Temps\", var.color = temp) +   ggtitle('Conditional Expectations (iceplot)') ggmid(ice, type = \"centered\", alpha = .3,      theme = \"midr\", var.color = `as.factor(workingday)`) +   ggtitle('Conditional Expectations (centered)') +   theme(legend.position = \"bottom\")"},{"path":"https://ryo-asashi.github.io/midr/articles/ggplot2.html","id":"prediction-breakdown","dir":"Articles","previous_headings":"","what":"Prediction Breakdown","title":"Visualization with ggplot2 package","text":"","code":"# compute MID breakdown for the individual penguins bd100 <- mid.breakdown(mid, Bikeshare[100L, ])  # create plots ggmid(bd100, theme = \"Tableau 10\") +   ggtitle('Prediction Breakdown (waterfall)') ggmid(bd100, type = \"barplot\", theme = \"Set 1\") +   ggtitle('Prediction Breakdown (barplot)') ggmid(bd100, type = \"dotchart\", theme = \"Set 2\", cex = 3) +   ggtitle('Prediction Breakdown (dotchart)')"},{"path":"https://ryo-asashi.github.io/midr/articles/graphics.html","id":"feature-importance","dir":"Articles","previous_headings":"","what":"Feature Importance","title":"Visualization with graphics package","text":"","code":"# compute MID based variable importance imp <- mid.importance(mid)  # create importance plots par.midr(bg = \"#FEFEFE\") plot(imp, theme = \"Temps\", max = 15) title(main = 'Feature Importance (barplot)') plot(imp, type = \"dotchart\", theme = \"Set 1\", max = 15, cex = 1.4) title(main = 'Feature Importance (dotchart)') plot(imp, type = \"heatmap\", theme = \"BuPu\") title(main = 'Feature Importance (heatmap)') plot(imp, type = \"boxplot\", theme = \"Spectral\", max = 15, cex = .5) title(main = 'Feature Importance (boxplot)')"},{"path":"https://ryo-asashi.github.io/midr/articles/graphics.html","id":"component-functions","dir":"Articles","previous_headings":"","what":"Component Functions","title":"Visualization with graphics package","text":"","code":"# create component plots par.midr(bg = \"#FEFEFE\") plot(mid, term = \"temp\") title(main = 'Main Effect (effect)') plot(mid, term = \"hr\") title(main = 'Main Effect (effect)') plot(mid, term = \"hr:as.factor(workingday)\") title(main = 'Interaction Effect (effect)') plot(mid, term = \"hr:temp\", type = \"data\",      main.effects = TRUE, theme = \"Mako\", data = Bikeshare) title(main = 'Interaction Effect (data)') plot(mid, term = \"temp:windspeed\", type = \"compound\",      main.effects = TRUE, data = Bikeshare) title(main = 'Interaction Effect (compound)')"},{"path":"https://ryo-asashi.github.io/midr/articles/graphics.html","id":"conditional-expectations","dir":"Articles","previous_headings":"","what":"Conditional Expectations","title":"Visualization with graphics package","text":"","code":"# compute ICE plots set.seed(42) ice_rows <- sample(nrow(Bikeshare), 200L) ice <- mid.conditional(mid, variable = \"hr\",                        data = Bikeshare[ice_rows, ]) # create plots par.midr(bg = \"#FEFEFE\") plot(ice, theme = \"Cividis\", var.color = mnth == \"Aug\") title(main = 'Conditional Expectations (iceplot)') plot(ice, term = \"hr:temp\", dots = FALSE,      theme = \"Temps\", var.color = temp) title(main = 'Conditional Expectations (iceplot)') plot(ice, type = \"centered\", alpha = .3,      theme = \"midr\", var.color = `as.factor(workingday)`) title(main = 'Conditional Expectations (centered)')"},{"path":"https://ryo-asashi.github.io/midr/articles/graphics.html","id":"prediction-breakdown","dir":"Articles","previous_headings":"","what":"Prediction Breakdown","title":"Visualization with graphics package","text":"","code":"# compute MID breakdown for the individual penguins bd100 <- mid.breakdown(mid, Bikeshare[100L, ])  # create plots par.midr(bg = \"#FEFEFE\") plot(bd100, theme = \"Tableau 10\") title(main = 'Prediction Breakdown (waterfall)') plot(bd100, type = \"barplot\", theme = \"Set 1\") title(main = 'Prediction Breakdown (barplot)') plot(bd100, type = \"dotchart\", theme = \"Set 2\", cex = 1.5) title(main = 'Prediction Breakdown (dotchart)')"},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"regression-task","dir":"Articles","previous_headings":"","what":"Regression Task","title":"Interpretation of Regression Models","text":"use benchmark regression task, originally described Friedman (1991) Breiman (1996), implemented mlbench package. dataset 10 independent predictor variables x1,x2,...,x10x_1,x_2,...,x_{10} uniformly distributed interval [0,1][0,1], response variable yy , generated according following formula disturbance term ϵ∼𝒩(0,1)\\epsilon\\ {\\sim}\\ \\mathcal{N}{(0, 1)}. y=10sin(πx1x2)+20(x3−0.5)2+10x4+5x5+ϵ y=10\\sin{(\\pi{x_1}{x_2})+20{(x_3-0.5)}^2+10x_4+5x_5+\\epsilon} following plots show effect predictor variable response. x1x_1 x2x_2 , interaction effect shown colored lines: effect x1x_1 depends value x2x_2 (pale purple 0 dark red 1) vice versa.  model type, fit regression model using train data 500 observations interpretative MID surrogate target model using mtrain data 2500 observations without response variable. evaluate predictive accuracy target model interpretative accuracy MID surrogate based RMSE test model prediction two predictions, respectively.","code":"# benchmark regression task library(mlbench) set.seed(42) train  <- as.data.frame(mlbench.friedman1(n = 500L)) test   <- as.data.frame(mlbench.friedman1(n = 500L)) mtrain <- as.data.frame(mlbench.friedman1(n = 2500L))[, -11L] # define utility functions for the following chunks effect_plots <- function(object) {   mid.plots(object, terms = paste(\"x\", 1:6, sep = \".\")) }  interaction_plot <- function(object) {   ggmid(object, \"x.1:x.2\", main.effects = TRUE, theme = \"Zissou 1\") +     ggtitle(\"interaction effect\") }  ice_theme <- color.theme(\"Zissou 1@seq\") ice_plot <- function(object, data = train[1:200, ]) {   ggmid(mid.conditional(object, \"x.1\", data = data),         var.color = x.2, type = \"centered\", theme = ice_theme) +     ggtitle(\"conditional expectation\") }  importance_plot <- function(object) {   ggmid(mid.importance(object), \"heatmap\") +     ggtitle(\"feature importance\") }  eval_plot <- function(model, mid, data = test, ...) {   pred <- get.yhat(model, data, ...)   pred_mid <- get.yhat(mid, data)   actual <- test$y   rmse_vs_test <- rmse(pred, actual)   rmse_vs_mid <-  rmse(pred, pred_mid)   ggplot() + scale_color_theme(\"highlight?accent='#F5191C'\") +     geom_point(aes(x = pred, y = actual, col = \"vs test\")) +     geom_point(aes(x = pred, y = pred_mid, col = \"vs mid\")) +     geom_abline(slope = 1, intercept = 0, col = \"black\", lty = 2) +     labs(x = \"model-prediction\", y = \"mid-prediction / test\") +     annotate(       \"text\", family = \"serif\", size = 3,       x = min(pred) + diff(range(pred)) / 8,       y = max(actual) - diff(range(actual) / 8),       label = sprintf(\"RMSE\\nvs test: %.3f\\nvs mid: %.3f\",                       rmse_vs_test, rmse_vs_mid)     ) + ggtitle(\"prediction / representation accuracy\") }"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"linear-model","dir":"Articles","previous_headings":"Additive Models","what":"Linear Model","title":"Interpretation of Regression Models","text":"","code":"model <- lm(y ~ ., train) coef(model) #> (Intercept)         x.1         x.2         x.3         x.4         x.5  #>   0.1302510   6.8458545   6.8892805  -0.4403955  10.3264576   4.6735425  #>         x.6         x.7         x.8         x.9        x.10  #>   0.5837944   0.2030152  -0.6272202  -0.1722106   0.3453933 mid <- interpret(y ~ .^2, mtrain, model) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = mtrain, model = model) #>  #> Model Class: lm #>  #> Intercept: 14.319 #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Variation Ratio: 0 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(interaction_plot(mid), importance_plot(mid),              ice_plot(mid), eval_plot(model, mid), nrow = 2)"},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"regularized-glm","dir":"Articles","previous_headings":"Additive Models","what":"Regularized GLM","title":"Interpretation of Regression Models","text":"","code":"library(glmnet) model <- glmnet(x = as.matrix(train[, -11]), y = train[, 11]) # prediction with arbitrarily chosen lambda mid <- interpret(y ~ .^2, train[, -11], model,                  pred.args = list(s = model$lambda[9])) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train[, -11], model = model, #>  pred.args = list(s = model$lambda[9])) #>  #> Model Class: elnet, glmnet #>  #> Intercept: 14.417 #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Variation Ratio: 0 grid.arrange(grobs = effect_plots(mid), nrow = 2L) evp <- eval_plot(model, mid, data = test[, -11],                        s = model$lambda[9]) grid.arrange(interaction_plot(mid), importance_plot(mid),              ice_plot(mid), evp, nrow = 2)"},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"generalized-additive-model","dir":"Articles","previous_headings":"Additive Models","what":"Generalized Additive Model","title":"Interpretation of Regression Models","text":"","code":"library(gam) model <- gam(y ~ s(x.1) + s(x.2) + s(x.3) + s(x.4) + s(x.5) +              s(x.6) + s(x.7) + s(x.8) + s(x.9) + s(x.10),              family = gaussian, data = train) mid <- interpret(y ~ .^2, train, model) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model) #>  #> Model Class: Gam, glm, lm #>  #> Intercept: 14.417 #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Variation Ratio: 3.2805e-05 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(interaction_plot(mid), importance_plot(mid),              ice_plot(mid), eval_plot(model, mid), nrow = 2)"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"single-hidden-layer-network","dir":"Articles","previous_headings":"Neural Network","what":"Single Hidden Layer Network","title":"Interpretation of Regression Models","text":"","code":"library(nnet) set.seed(42) model <- nnet(y ~ ., train, size = 5, linout = TRUE, maxit = 1e3, trace = FALSE) mid <- interpret(y ~ .^2, mtrain, model) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = mtrain, model = model) #>  #> Model Class: nnet.formula, nnet #>  #> Intercept: 14.195 #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Variation Ratio: 0.0028096 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(interaction_plot(mid), importance_plot(mid),              ice_plot(mid), eval_plot(model, mid), nrow = 2)"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"rbf-kernel-svm","dir":"Articles","previous_headings":"Support Vector Machine","what":"RBF Kernel SVM","title":"Interpretation of Regression Models","text":"","code":"library(e1071) model <- svm(y ~ ., train, kernel = \"radial\") mid <- interpret(y ~ .^2, mtrain, model) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = mtrain, model = model) #>  #> Model Class: svm.formula, svm #>  #> Intercept: 14.32 #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Variation Ratio: 0.0075539 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(interaction_plot(mid), importance_plot(mid),              ice_plot(mid), eval_plot(model, mid), nrow = 2)"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"gradient-boosting-trees","dir":"Articles","previous_headings":"Tree Based Models","what":"Gradient Boosting Trees","title":"Interpretation of Regression Models","text":"","code":"library(xgboost) params <- list(eta = .1, subsample = .7, max_depth = 5) set.seed(42) model <- xgboost(as.matrix(train[, -11]), train[, 11], nrounds = 100,                  params = params, verbose = 0) mid <- interpret(y ~ .^2, as.matrix(mtrain), model) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = as.matrix(mtrain), model = model) #>  #> Model Class: xgb.Booster #>  #> Intercept: 14.172 #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Variation Ratio: 0.011813 grid.arrange(grobs = effect_plots(mid), nrow = 2L) evp <- eval_plot(model, mid, as.matrix(test[, -11])) grid.arrange(interaction_plot(mid), importance_plot(mid),              ice_plot(mid), evp, nrow = 2)"},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"random-forest","dir":"Articles","previous_headings":"Tree Based Models","what":"Random Forest","title":"Interpretation of Regression Models","text":"","code":"library(ranger) set.seed(42) model <- ranger(y ~ ., train, mtry = 5) mid <- interpret(y ~ .^2, mtrain, model) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = mtrain, model = model) #>  #> Model Class: ranger #>  #> Intercept: 14.27 #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Variation Ratio: 0.0075668 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(interaction_plot(mid), importance_plot(mid),              ice_plot(mid), eval_plot(model, mid), nrow = 2)"},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"decision-tree","dir":"Articles","previous_headings":"Tree Based Models","what":"Decision Tree","title":"Interpretation of Regression Models","text":"","code":"library(rpart) model <- rpart(y ~ ., train) # create encoding frames for CART frm <- cbind(model$frame, labels(model, collapse = FALSE)) print(t(frm[frm$var != \"<leaf>\", c(\"var\", \"ltemp\")])) #>       1          2        5         11         22         3          7          #> var   \"x.4\"      \"x.1\"    \"x.2\"     \"x.4\"      \"x.5\"      \"x.2\"      \"x.1\"      #> ltemp \"< 0.5579\" \"< 0.21\" \"< 0.311\" \"< 0.2953\" \"< 0.5849\" \"< 0.2653\" \"< 0.3184\" #>       14         15         31         62         #> var   \"x.4\"      \"x.5\"      \"x.4\"      \"x.2\"      #> ltemp \"< 0.8843\" \"< 0.2486\" \"< 0.8413\" \"< 0.4782\" frames <- lapply(mtrain, range) frames$x.1 <- c(frames$x.1, .2100, .3184) frames$x.2 <- c(frames$x.2, .3110, .2653, .4782) frames$x.4 <- c(frames$x.4, .5579, .2953, .8843, .8413) frames$x.5 <- c(frames$x.5, .5849, .2486) mid <- interpret(y ~ .^2, mtrain, model, type = 0, frames = frames) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = mtrain, model = model, #>  type = 0, frames = frames) #>  #> Model Class: rpart #>  #> Intercept: 14.264 #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Variation Ratio: 0.031256 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(interaction_plot(mid), importance_plot(mid),              ice_plot(mid), eval_plot(model, mid), nrow = 2)"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"predictive-mid","dir":"Articles","previous_headings":"Other Modes","what":"Predictive MID","title":"Interpretation of Regression Models","text":"","code":"model <- mid <- interpret(y ~ .^2, train, lambda = .2) #> 'model' not passed: response variable in 'data' is used pred <- pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = y ~ .^2, data = train, lambda = 0.2) #>  #> Intercept: 14.417 #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Variation Ratio: 0.031792 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(interaction_plot(mid), importance_plot(mid),              ice_plot(mid), eval_plot(model, mid), nrow = 2)"},{"path":"https://ryo-asashi.github.io/midr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryoichi Asasihba. Author, maintainer. Hirokazu Iwasawa. Author. Reiji Kozuma. Contributor.","code":""},{"path":"https://ryo-asashi.github.io/midr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Asashiba R, Kozuma R, Iwasawa H (2025). “midr: Learning Black-Box Models Maximum Interpretation Decomposition.” 2506.08338, https://arxiv.org/abs/2506.08338.","code":"@Misc{,   title = {midr: Learning from Black-Box Models by Maximum Interpretation Decomposition},   author = {Ryoichi Asashiba and Reiji Kozuma and Hirokazu Iwasawa},   year = {2025},   eprint = {2506.08338},   archiveprefix = {arXiv},   primaryclass = {stat.ME},   url = {https://arxiv.org/abs/2506.08338}, }"},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"midr-","dir":"","previous_headings":"","what":"Learning from Black-Box Models by Maximum Interpretation Decomposition","title":"Learning from Black-Box Models by Maximum Interpretation Decomposition","text":"goal ‘midr’ provide model-agnostic method interpreting explaining black-box predictive models creating globally interpretable surrogate model. package implements ‘Maximum Interpretation Decomposition’ (MID), functional decomposition technique finds optimal additive approximation original model. approximation achieved minimizing squared error predictions black-box model surrogate model. theoretical foundations MID described Iwasawa & Matsumori (2025) [Forthcoming], package detailed Asashiba et al. (2025).","code":""},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Learning from Black-Box Models by Maximum Interpretation Decomposition","text":"can install released version midr CRAN : development version GitHub :","code":"install.packages(\"midr\") # install.packages(\"devtools\") devtools::install_github(\"ryo-asashi/midr\")"},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Learning from Black-Box Models by Maximum Interpretation Decomposition","text":"following example, fit random forest model Boston dataset included ISLR2, attempt interpret using functions midr. first step create MID model global surrogate target model using interpret(). visualize main interaction effects variables, apply ggmid() plot() fitted MID model.   mid.importance() helps compute compare importance main interaction effects.  mid.breakdown() provides way analyze individual predictions decomposing differences intercept predicted value variable effects.  mid.conditional() can used compute ICE curves (Goldstein et al. 2015) fitted MID model, well breakdown ICE curves main interaction effects.","code":"# load required packages library(midr) library(ggplot2) library(gridExtra) library(ISLR2) library(ranger) theme_set(theme_midr()) # split the Boston dataset data(\"Boston\", package = \"ISLR2\") set.seed(42) idx <- sample(nrow(Boston), nrow(Boston) * .75) train <- Boston[ idx, ] valid <- Boston[-idx, ] # fit a random forest model rf <- ranger(medv ~ ., train, mtry = 5) preds_rf <- predict(rf, valid)$predictions cat(\"RMSE: \", weighted.loss(valid$medv, preds_rf)) #> RMSE:  3.351362 # fit a two-dimensional MID model mid <- interpret(medv ~ .^2, train, rf, lambda = .1) mid #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = rf, lambda = 0.1) #>  #> Model Class: ranger #>  #> Intercept: 22.446 #>  #> Main Effects: #> 12 main effect terms #>  #> Interactions: #> 66 interaction terms #>  #> Uninterpreted Variation Ratio: 0.016249 preds_mid <- predict(mid, valid) cat(\"RMSE: \", weighted.loss(preds_rf, preds_mid)) #> RMSE:  1.106763 cat(\"RMSE: \", weighted.loss(valid$medv, preds_mid)) #> RMSE:  3.306072 # visualize the main and interaction effects of the MID model grid.arrange(   ggmid(mid, \"lstat\") +     ggtitle(\"main effect of lstat\"),   ggmid(mid, \"dis\") +     ggtitle(\"main effect of dis\"),   ggmid(mid, \"lstat:dis\") +     ggtitle(\"interaction of lstat:dis\"),   ggmid(mid, \"lstat:dis\", main.effects = TRUE, type = \"compound\") +     ggtitle(\"interaction + main effects\") ) # visualize all main effects grid.arrange(grobs = mid.plots(mid), nrow = 3) # visualize the MID importance of the component functions imp <- mid.importance(mid) grid.arrange(nrow = 1L,   ggmid(imp, \"dotchart\", theme = \"highlight\") +     theme(legend.position = \"bottom\") +     ggtitle(\"importance of variable effects\"),   ggmid(imp, \"heatmap\") +     theme(legend.position = \"bottom\") +     ggtitle(\"heatmap of variable importance\") ) # visualize the MID breakdown of the model predictions bd1 <- mid.breakdown(mid, data = train, row = 1L) bd9 <- mid.breakdown(mid, data = train, row = 9L) grid.arrange(nrow = 1L,   ggmid(bd1, \"waterfall\", theme = \"midr\", max.nterms = 14L) +     theme(legend.position = \"bottom\") +     ggtitle(\"breakdown of prediction 1\"),   ggmid(bd9, \"waterfall\", theme = \"midr\", max.nterms = 14L) +     theme(legend.position = \"bottom\") +     ggtitle(\"breakdown of prediction 9\") ) # visualize the ICE curves of the MID model ice <- mid.conditional(mid, \"lstat\") grid.arrange(   ggmid(ice, alpha = .1) +     ggtitle(\"ICE of lstat\"),   ggmid(ice, \"centered\", \"mako\", var.color = dis) +     ggtitle(\"c-ICE of lstat\"),   ggmid(ice, term = \"lstat:dis\", theme = \"mako\", var.color = dis) +     ggtitle(\"ICE of interaction with dis\"),   ggmid(ice, term = \"lstat:age\", theme = \"mako\", var.color = age) +     ggtitle(\"ICE of interaction with age\") )"},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Learning from Black-Box Models by Maximum Interpretation Decomposition","text":"[1] Iwasawa, H. & Matsumori, Y. (2025). “Functional Decomposition Approach Maximize Interpretability Black-Box Models”. [Forthcoming] [2] Asashiba, R., Kozuma, R. & Iwasawa, H. (2025). “midr: Learning Black-Box Models Maximum Interpretation Decomposition”. https://arxiv.org/abs/2506.08338 [3] Goldstein, ., Kapelner, ., Bleich, J., & Pitkin, E. (2015). “Peeking Inside Black Box: Visualizing Statistical Learning Plots Individual Conditional Expectation”. Journal Computational Graphical Statistics, 24(1), 44–65. https://doi.org/10.1080/10618600.2014.907095","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Color Themes for Graphics — color.theme","title":"Color Themes for Graphics — color.theme","text":"color.theme() function main interface working \"color.theme\" objects. acts dispatcher , depending class object, can retrieve pre-defined theme name (see \"Theme Name Syntax\" section), create new theme vector colors color-generating function, modify existing \"color.theme\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color Themes for Graphics — color.theme","text":"","code":"color.theme(   object,   kernel.args = list(),   options = list(),   name = NULL,   source = NULL,   type = NULL,   reverse = FALSE,   env = color.theme.env(),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color Themes for Graphics — color.theme","text":"object character string retrieve pre-defined theme, color kernel (.e., vector colors color generating function) create new theme, \"color.theme\" object modified. See \"Details\" section. kernel.args list arguments passed color kernel. options list option values control color theme's behavior. name character string color theme name. source character string source name color theme. type character string specifying type color theme. One \"sequential\", \"diverging\", \"qualitative\". reverse logical. TRUE, order colors reversed. env environment color themes registered. ... optional named arguments used modify color theme. argument passed override corresponding settings kernel.args options. kernel color vector, palette function, ramp function serves basis generating colors.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color Themes for Graphics — color.theme","text":"color.theme() returns \"color.theme\" object, environment special class attribute, containing ...$palette() ...$ramp functions, along metadata theme.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color Themes for Graphics — color.theme","text":"\"color.theme\" object special environment provides two color-generating functions: ...$palette() ...$ramp(). ...$palette() takes integer n returns vector n discrete colors. primarily intended qualitative themes, distinct colors used represent categorical data. ...$ramp() takes numeric vector x values [0, 1] interval, returns vector corresponding colors. maps numeric values onto continuous color gradient, making suitable sequential diverging themes. function, color.theme(), versatile dispatcher behaves differently depending class object argument. object character string (e.g., \"Viridis\", \"grDevices/RdBu_r@q?alpha=.5\"), string parsed according theme name syntax, corresponding pre-defined theme loaded (see \"Theme Name Syntax\" section details). object color kernel (.e., character vector colors, palette function, ramp function), new color theme created kernel. object \"color.theme\" object, function returns modified version theme, applying arguments update settings.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"theme-name-syntax","dir":"Reference","previous_headings":"","what":"Theme Name Syntax","title":"Color Themes for Graphics — color.theme","text":"retrieving theme using character string, can use special syntax specify source apply modifications: \"[(source)/](name)[_r][@(type)][?(query)]\" source: (optional) source package collection theme (e.g., \"grDevices\"). name: name theme (e.g., \"RdBu\"). \"_r\": (optional) suffix reverse color order. type: (optional) desired theme type, matched \"sequential\", \"diverging\" \"qualitative\" (.e., \"s\", \"d\", \"q\" sufficient, longer character strings \"seq\", \"div\", \"qual\" also possible). query: (optional) query string overwrite color theme's metadata including specific theme options kernel arguments. Pairs key=value format separated ; & (e.g., \"...?alpha=0.5;na.color='gray50'\"). Possible keys include \"name\", \"source\", \"type\", \"reverse\" item theme's options kernel.args.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color Themes for Graphics — color.theme","text":"","code":"# Retrieve a pre-defined theme ct <- color.theme(\"Mako\") ct$palette(5L) #> [1] \"#070707\" \"#423460\" \"#007FA8\" \"#48C2B4\" \"#E0F7E1\" ct$ramp(seq.int(0, 1, length.out = 5)) #> [1] \"#060606\" \"#42345F\" \"#007FA7\" \"#48C2B3\" \"#DFF7E0\"  # Use special syntax to get a reversed, qualitative theme with alpha value ct <- color.theme(\"grDevices/Zissou 1_r@qual?alpha=0.75\") ct$palette(5L) #> [1] \"#F5191CBF\" \"#E78F0ABF\" \"#EACB2BBF\" \"#7CBA96BF\" \"#3B99B1BF\" ct$ramp(seq.int(0, 1, length.out = 5)) #> [1] \"#F5191CBF\" \"#E78E09BF\" \"#E6CA4CBF\" \"#7BBA96BF\" \"#3B99B1BF\"  # Create a new theme from a vector of colors ct <- color.theme(c(\"#003f5c\", \"#7a5195\", \"#ef5675\", \"#ffa600\")) ct$palette(5L) #> [1] \"#003F5B\" \"#614D86\" \"#B85485\" \"#F46C63\" \"#FFA500\" ct$ramp(seq.int(0, 1, length.out = 5)) #> [1] \"#003F5B\" \"#614D86\" \"#B85485\" \"#F46C63\" \"#FFA500\"  # Create a new theme from a palette function ct <- color.theme(grDevices::rainbow) ct$palette(5L) #> [1] \"#FF0000\" \"#CCFF00\" \"#00FF66\" \"#0066FF\" \"#CC00FF\" ct$ramp(seq.int(0, 1, length.out = 5)) #> [1] \"#FF0000\" \"#81FF00\" \"#00FFFB\" \"#7B00FF\" \"#FF0006\"  # Modify an existing theme ct <- color.theme(ct, type = \"qualitative\", kernel.args = list(v = 0.5)) ct$palette(5L) #> [1] \"#800000\" \"#668000\" \"#008033\" \"#003380\" \"#660080\" ct$ramp(seq.int(0, 1, length.out = 5)) #> [1] \"#7F0000\" \"#407F00\" \"#007F7E\" \"#3D007F\" \"#7F0002\""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Color Theme Information — color.theme.info","title":"Retrieve Color Theme Information — color.theme.info","text":"color.theme.info() returns data frame listing available color themes. color.theme.env() provides direct access environment color themes registered.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Color Theme Information — color.theme.info","text":"","code":"color.theme.info(env = color.theme.env())  color.theme.env()"},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Color Theme Information — color.theme.info","text":"env environment color themes registered.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Color Theme Information — color.theme.info","text":"color.theme.info() returns data frame columns \"name\", \"source\", \"type\". color.theme.env() returns environment currently used default theme registry.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Color Theme Information — color.theme.info","text":"functions provide tools inspecting color themes available current R session. color.theme.info() primary user-facing function discovering themes name, source, type. color.theme.env() advanced function returns environment currently used theme registry. first checks user-specified environment via getOption(\"midr.color.theme.env\"). option NULL (default), function returns package's internal environment default themes storesd.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Color Theme Information — color.theme.info","text":"","code":"# Get a data frame of all available themes head(color.theme.info()) #>            name    source      type #> 1      ArmyRose grDevices diverging #> 2        Berlin grDevices diverging #> 3      Blue-Red grDevices diverging #> 4    Blue-Red 2 grDevices diverging #> 5    Blue-Red 3 grDevices diverging #> 6 Blue-Yellow 2 grDevices diverging  # Get the environment where color themes are stored theme_env <- color.theme.env() names(theme_env)[1:5] #> [1] \"oleron\" \"sunset\" \"Sunset\" \"RdYlGn\" \"Set 1\""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":null,"dir":"Reference","previous_headings":"","what":"Encoder for Qualitative Variables — factor.encoder","title":"Encoder for Qualitative Variables — factor.encoder","text":"factor.encoder() creates encoder function qualitative (factor character) variable. encoder converts variable one-hot encoded (dummy) design matrix. factor.frame() helper function create \"factor.frame\" object defines encoding scheme.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encoder for Qualitative Variables — factor.encoder","text":"","code":"factor.encoder(   x,   k,   use.catchall = TRUE,   catchall = \"(others)\",   tag = \"x\",   frame = NULL,   weights = NULL )  factor.frame(levels, catchall = \"(others)\", tag = \"x\")"},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encoder for Qualitative Variables — factor.encoder","text":"x vector encoded qualitative variable. k integer specifying maximum number distinct levels retain (including catch-level). positive, unique values x used. use.catchall logical. TRUE, less frequent levels grouped catch-level. catchall character string catch-level. tag name variable. frame \"factor.frame\" object character vector explicitly defines levels variable. weights optional numeric vector sample weights x. levels vector used levels variable.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encoder for Qualitative Variables — factor.encoder","text":"factor.encoder() returns object class \"encoder\". list containing following components: frame \"factor.frame\" object containing encoding information (levels). encode function convert vector x one-hot encoded matrix. n number encoding levels (.e., columns design matrix). type character string describing encoding type: \"factor\" \"null\". factor.frame() returns \"factor.frame\" object containing encoding information.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encoder for Qualitative Variables — factor.encoder","text":"function designed handle qualitative data use MID model's linear system formulation. primary mechanism one-hot encoding. unique level input variable becomes column output matrix. given observation, column corresponding level assigned 1, columns assigned 0. variable many unique levels (high cardinality), can use use.catchall = TRUE k arguments. group k - 1 frequent levels columns, less frequent levels consolidated single catchall level (e.g., \"(others)\" default). crucial preventing MID models becoming overly complex.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encoder for Qualitative Variables — factor.encoder","text":"","code":"# Create an encoder for a qualitative variable data(iris, package = \"datasets\") enc <- factor.encoder(x = iris$Species, use.catchall = FALSE, tag = \"Species\") enc #>  #> Factor encoder with 3 levels #>  #> Frame: #>      Species #> 1     setosa #> 2 versicolor #> 3  virginica #>   # Encode a vector with NA enc$encode(x = c(\"setosa\", \"virginica\", \"ensata\", NA, \"versicolor\")) #>      setosa versicolor virginica #> [1,]      1          0         0 #> [2,]      0          0         1 #> [3,]      0          0         0 #> [4,]      0          0         0 #> [5,]      0          1         0  # Create an encoder with a pre-defined encoding frame frm <- factor.frame(c(\"setosa\", \"virginica\"), \"other iris\") enc <- factor.encoder(x = iris$Species, frame = frm) enc #>  #> Factor encoder with 3 levels #>  #> Frame: #>            x #> 1     setosa #> 2  virginica #> 3 other iris #>  enc$encode(c(\"setosa\", \"virginica\", \"ensata\", NA, \"versicolor\")) #>      setosa virginica other iris #> [1,]      1         0          0 #> [2,]      0         1          0 #> [3,]      0         0          1 #> [4,]      0         0          1 #> [5,]      0         0          1  # Create an encoder with a character vector specifying the levels enc <- factor.encoder(x = iris$Species, frame = c(\"setosa\", \"versicolor\")) enc$encode(c(\"setosa\", \"virginica\", \"ensata\", NA, \"versicolor\")) #>      setosa versicolor #> [1,]      1          0 #> [2,]      0          0 #> [3,]      0          0 #> [4,]      0          0 #> [5,]      0          1"},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper Prediction Function — get.yhat","title":"Wrapper Prediction Function — get.yhat","text":"get.yhat() generic function provides unified interface obtaining predictions various fitted model objects.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper Prediction Function — get.yhat","text":"","code":"get.yhat(object, newdata, ...)  # Default S3 method get.yhat(object, newdata, target = -1L, ...)  # S3 method for class 'mid' get.yhat(object, newdata, ...)  # S3 method for class 'lm' get.yhat(object, newdata, ...)  # S3 method for class 'glm' get.yhat(object, newdata, ...)  # S3 method for class 'rpart' get.yhat(object, newdata, target = -1L, ...)  # S3 method for class 'randomForest' get.yhat(object, newdata, target = -1L, ...)  # S3 method for class 'ranger' get.yhat(object, newdata, target = -1L, ...)  # S3 method for class 'svm' get.yhat(object, newdata, target = -1L, ...)  # S3 method for class 'ksvm' get.yhat(object, newdata, target = -1L, ...)  # S3 method for class 'AccurateGLM' get.yhat(object, newdata, ...)  # S3 method for class 'glmnet' get.yhat(object, newdata, ...)  # S3 method for class 'model_fit' get.yhat(object, newdata, target = -1L, ...)  # S3 method for class 'rpf' get.yhat(object, newdata, target = -1L, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper Prediction Function — get.yhat","text":"object fitted model object. newdata data.frame matrix. ... optional arguments passed underlying predict() method object's class. target integer character vector specifying target levels used classification models return matrix data frame class probabilities. default, -1, represents probability base level.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper Prediction Function — get.yhat","text":"get.yhat() returns numeric vector model predictions newdata.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper Prediction Function — get.yhat","text":"many predictive models stats::predict() method, structure type outputs uniform. example, return numeric vector, others matrix class probabilities, list. function, get.yhat(), abstracts away complexity. regression models, returns numeric prediction original scale response variable. classification models, returns sum class probabilities classes specified target argument. Furthermore, get.yhat() provides consistent handling missing values. stats::predict() methods may return shorter vector omitting NAs, get.yhat() designed return vector length newdata, preserving NAs original positions. design get.yhat() strongly influenced DALEX::yhat().","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper Prediction Function — get.yhat","text":"","code":"data(trees, package = \"datasets\") model <- glm(Volume ~ ., trees, family = Gamma(log))  # The output of stats::predict() might not be in the scale of the response variable predict(model, trees[1:5, ]) #>        1        2        3        4        5  #> 2.458590 2.419285 2.415186 2.811365 2.989622   # get.yhat() returns a numeric vector in the original scale of the response variable get.yhat(model, trees[1:5, ]) #> [1] 11.68832 11.23782 11.19185 16.63260 19.87816 predict(model, trees[1:5, ], type = \"response\") #>        1        2        3        4        5  #> 11.68832 11.23782 11.19185 16.63260 19.87816"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Component Functions with ggplot2 — ggmid","title":"Plot MID Component Functions with ggplot2 — ggmid","text":"ggmid() S3 generic function creating various visualizations MID-related objects using ggplot2. \"mid\" objects (.e., fitted MID models), visualizes single component function specified term argument.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Component Functions with ggplot2 — ggmid","text":"","code":"ggmid(object, ...)  # S3 method for class 'mid' ggmid(   object,   term,   type = c(\"effect\", \"data\", \"compound\"),   theme = NULL,   intercept = FALSE,   main.effects = FALSE,   data = NULL,   limits = c(NA, NA),   jitter = 0.3,   resolution = c(100L, 100L),   ... )  # S3 method for class 'mid' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Component Functions with ggplot2 — ggmid","text":"object \"mid\" object visualized. ... optional parameters passed main plotting layer. term character string specifying component function plotted. type plotting style. One \"effect\", \"data\" \"compound\". theme character string object defining color theme. See color.theme details. intercept logical. TRUE, intercept added MID values. main.effects logical. TRUE, main effects included interaction plot. data data frame plotted corresponding MID values. provided, data automatically extracted based function call. limits numeric vector length two specifying limits plotting scale. NA values replaced minimum /maximum MID values. jitter numeric value specifying amount jitter data points. resolution integer vector two integers specifying resolution raster plot interactions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Component Functions with ggplot2 — ggmid","text":"ggmid.mid() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Component Functions with ggplot2 — ggmid","text":"\"mid\" objects, ggmid() creates \"ggplot\" object visualizes component function fitted MID model. type argument controls visualization style. default, type = \"effect\", plots component function . style, plotting method automatically selected based effect's type: line plot quantitative main effects; bar plot qualitative main effects; raster plot interactions. type = \"data\" option creates scatter plot data, colored values component function. type = \"compound\" option combines approaches, plotting component function alongside data points.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Component Functions with ggplot2 — ggmid","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' not passed: response variable in 'data' is used  # Plot a quantitative main effect ggmid(mid, \"carat\")   # Plot a qualitative main effect ggmid(mid, \"clarity\")   # Plot an interaction effect with data points and a raster layer ggmid(mid, \"carat:clarity\", type = \"compound\", data = diamonds[idx, ])   # Use a different color theme ggmid(mid, \"clarity:color\", theme = \"RdBu\")"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Breakdowns with ggplot2 — ggmid.mid.breakdown","title":"Plot MID Breakdowns with ggplot2 — ggmid.mid.breakdown","text":"\"mid.breakdown\" objects, ggmid() visualizes breakdown prediction component functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Breakdowns with ggplot2 — ggmid.mid.breakdown","text":"","code":"# S3 method for class 'mid.breakdown' ggmid(   object,   type = c(\"waterfall\", \"barplot\", \"dotchart\"),   theme = NULL,   terms = NULL,   max.nterms = 15L,   width = NULL,   vline = TRUE,   catchall = \"others\",   format = c(\"%t=%v\", \"%t\"),   ... )  # S3 method for class 'mid.breakdown' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Breakdowns with ggplot2 — ggmid.mid.breakdown","text":"object \"mid.breakdown\" object visualized. type plotting style. One \"waterfall\", \"barplot\" \"dotchart\". theme character string object defining color theme. See color.theme details. terms optional character vector specifying terms display. max.nterms maximum number terms display plot. Less important terms grouped \"catchall\" category. width numeric value specifying width bars. vline logical. TRUE, vertical line drawn zero intercept line. catchall character string catchall label. format character string character vector length two used format axis labels. Use \"%t\" term name (e.g., \"Wind\") \"%v\" values (e.g., \"30\"). ... optional parameters passed main layer.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Breakdowns with ggplot2 — ggmid.mid.breakdown","text":"ggmid.mid.breakdown() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Breakdowns with ggplot2 — ggmid.mid.breakdown","text":"S3 method ggmid() generic creates breakdown plot \"mid.breakdown\" object, visualizing contribution component function single prediction. type argument controls visualization style. default, type = \"waterfall\" (default), creates waterfall plot shows prediction builds intercept, term's contribution sequentially added subtracted. type = \"barplot\" option creates standard bar plot length bar represents magnitude term's contribution. type = \"dotchart\" option creates dot plot showing contribution term point connected zero baseline.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Breakdowns with ggplot2 — ggmid.mid.breakdown","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' not passed: response variable in 'data' is used mbd <- mid.breakdown(mid, diamonds[1L, ])  # Create a waterfall plot ggmid(mbd, type = \"waterfall\")   # Create a bar plot with a different theme ggmid(mbd, type = \"barplot\", theme = \"highlight\")   # Create a dot chart ggmid(mbd, type = \"dotchart\", size = 3)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Conditional Expectations with ggplot2 — ggmid.mid.conditional","title":"Plot MID Conditional Expectations with ggplot2 — ggmid.mid.conditional","text":"\"mid.conditional\" objects, ggmid() visualizes Individual Conditional Expectation (ICE) curves derived fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Conditional Expectations with ggplot2 — ggmid.mid.conditional","text":"","code":"# S3 method for class 'mid.conditional' ggmid(   object,   type = c(\"iceplot\", \"centered\"),   theme = NULL,   term = NULL,   var.alpha = NULL,   var.color = NULL,   var.linetype = NULL,   var.linewidth = NULL,   reference = 1L,   dots = TRUE,   sample = NULL,   ... )  # S3 method for class 'mid.conditional' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Conditional Expectations with ggplot2 — ggmid.mid.conditional","text":"object \"mid.conditional\" object visualized. type plotting style. One \"iceplot\" \"centered\". theme character string object defining color theme. See color.theme details. term optional character string specifying interaction term. passed, ICE curve specified term plotted. var.alpha variable name expression map alpha aesthetic. var.color variable name expression map color aesthetic. var.linetype variable name expression map linetype aesthetic. var.linewidth variable name expression map linewidth aesthetic. reference integer specifying index sample points use reference centering c-ICE plot. dots logical. TRUE, points representing actual predictions observation plotted. sample optional vector specifying names observations plotted. ... optional parameters passed main layer.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Conditional Expectations with ggplot2 — ggmid.mid.conditional","text":"ggmid.mid.conditional() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Conditional Expectations with ggplot2 — ggmid.mid.conditional","text":"S3 method ggmid() generic produces ICE curves \"mid.conditional\" object. ICE plots model-agnostic tool visualizing model's prediction single observation changes one feature varies. function plots one line observation data. type argument controls visualization style: default, type = \"iceplot\", plots row ICE curves. type = \"centered\" option creates centered ICE (c-ICE) plot, curve shifted start zero, makes easier compare slopes curves. var.color, var.alpha, etc., arguments allow map aesthetics variables data using (possibly) unquoted expressions.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Conditional Expectations with ggplot2 — ggmid.mid.conditional","text":"","code":"data(airquality, package = \"datasets\") library(midr) mid <- interpret(Ozone ~ .^2, airquality, lambda = 0.1) #> 'model' not passed: response variable in 'data' is used ice <- mid.conditional(mid, \"Temp\", data = airquality)  # Create an ICE plot, coloring lines by 'Wind' ggmid(ice, var.color = \"Wind\")   # Create a centered ICE plot, mapping color and linetype to other variables ggmid(ice, type = \"centered\", theme = \"Purple-Yellow\",       var.color = factor(Month), var.linetype = Wind > 10)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Importance with ggplot2 — ggmid.mid.importance","title":"Plot MID Importance with ggplot2 — ggmid.mid.importance","text":"\"mid.importance\" objects, ggmid() visualizes importance component functions fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Importance with ggplot2 — ggmid.mid.importance","text":"","code":"# S3 method for class 'mid.importance' ggmid(   object,   type = c(\"barplot\", \"dotchart\", \"heatmap\", \"boxplot\"),   theme = NULL,   max.nterms = 30L,   ... )  # S3 method for class 'mid.importance' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Importance with ggplot2 — ggmid.mid.importance","text":"object \"mid.importance\" object visualized. type plotting style. One \"barplot\", \"dotchart\", \"heatmap\", \"boxplot\". theme character string object defining color theme. See color.theme details. max.nterms maximum number terms display bar, dot box plots. ... optional parameters passed main layer.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Importance with ggplot2 — ggmid.mid.importance","text":"ggmid.mid.importance() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Importance with ggplot2 — ggmid.mid.importance","text":"S3 method ggmid() generic creates importance plot \"mid.importance\" object, visualizing average contribution component functions fitted MID model. type argument controls visualization style. default, type = \"barplot\", creates standard bar plot length bar represents overall importance term. type = \"dotchart\" option creates dot plot, offering clean alternative bar plot visualizing term importance. type = \"heatmap\" option creates matrix-shaped heat map color cell represents importance interaction pair variables, main effect diagonal. type = \"boxplot\" option creates box plot box shows distribution term's contributions across observations, providing insight varibability term's effect.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Importance with ggplot2 — ggmid.mid.importance","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' not passed: response variable in 'data' is used imp <- mid.importance(mid)  # Create a bar plot (default) ggmid(imp)   # Create a dot chart ggmid(imp, type = \"dotchart\", theme = \"Okabe-Ito\", size = 3)   # Create a heatmap ggmid(imp, type = \"heatmap\")   # Create a boxplot to see the distribution of effects ggmid(imp, type = \"boxplot\")"},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit MID Models — interpret","title":"Fit MID Models — interpret","text":"interpret() used fit Maximum Interpretation Decomposition (MID) model. MID models additive, highly interpretable models composed functions, two variables.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit MID Models — interpret","text":"","code":"interpret(object, ...)  # Default S3 method interpret(   object,   x,   y = NULL,   weights = NULL,   pred.fun = get.yhat,   link = NULL,   k = c(NA, NA),   type = c(1L, 1L),   frames = list(),   interactions = FALSE,   terms = NULL,   singular.ok = FALSE,   mode = 1L,   method = NULL,   lambda = 0,   kappa = 1e+06,   na.action = getOption(\"na.action\"),   verbosity = 1L,   encoding.digits = 3L,   use.catchall = FALSE,   catchall = \"(others)\",   max.ncol = 10000L,   nil = 1e-07,   tol = 1e-07,   pred.args = list(),   ... )  # S3 method for class 'formula' interpret(   formula,   data = NULL,   model = NULL,   pred.fun = get.yhat,   weights = NULL,   subset = NULL,   na.action = getOption(\"na.action\"),   verbosity = 1L,   mode = 1L,   drop.unused.levels = FALSE,   pred.args = list(),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit MID Models — interpret","text":"object fitted model object interpreted. ... optional arguments. interpret.formula(), arguments passed interpret.default(). interpret.default(), ... can include convenient aliases (e.g., \"ok\" singular.ok, \"ie\" interaction) well several advanced fitting options (see \"Advanced Fitting Options\" section details). x matrix data.frame predictor variables used fitting process. response variable included. y optional numeric vector model predictions response variable. weights numeric vector sample weights observation x. pred.fun function obtain predictions fitted model, first argument fitted model second argument new data. default get.yhat(). link character string specifying link function: one \"logit\", \"probit\", \"cauchit\", \"cloglog\", \"identity\", \"log\", \"sqrt\", \"1/mu^2\", \"inverse\", \"translogit\", \"transprobit\", \"identity-logistic\" \"identity-gaussian\", object containing two functions linkfun() linkinv(). See help(make.link). k integer vector two integers specifying maximum number sample points main effects (k[1]) interactions (k[2]). single integer provided, used main effects value interactions automatically determined. NA value also trigger automatic determination. non-positive values, unique data points used sample points. type integer integer-valued vector length two. type encoding. effects quantitative variables modeled piecewise linear functions type 1, step functions type 0. vector passed, type[1L] used main effects type[2L] used interactions. frames named list encoding frames (\"numeric.frame\" \"factor.frame\" objects). encoding frames used encode variable corresponding name. name begins \"|\" \":\", encoding frame used main effects interactions, respectively. interactions logical. TRUE terms formula supplied, interactions pair variables modeled calculated. terms character vector term labels specifying set component functions modeled. passed, terms includes main effects, interactions interaction TRUE. singular.ok logical. FALSE, singular fit error. mode integer specifying method calculation. mode 1, centralization constraints treated penalties least squares problem. mode 2, constraints used reduce number free parameters. method integer specifying method used solve least squares problem. non-negative value passed RcppEigen::fastLmPure(). negative, stats::lm.fit() used. lambda penalty factor pseudo smoothing. default 0. kappa penalty factor centering constraints. Used mode 1. default 1e+6. na.action function character string specifying method NA handling. default \"na.omit\". verbosity level verbosity. 0: fatal, 1: warning (default), 2: info 3: debug. encoding.digits integer. rounding digits encoding numeric variables. Used type 1. use.catchall logical. TRUE, less frequent levels qualitative variables dropped replaced catchall level. catchall character string specifying catchall level. max.ncol integer. maximum number columns design matrix. nil threshold intercept coefficients treated zero. default 1e-7. tol tolerance singular value decomposition. default 1e-7. pred.args optional parameters fitted model new data passed pred.fun(). formula symbolic description MID model fit. data data.frame, list environment containing variables formula. found data, variables taken environment(formula). model fitted model object interpreted. subset optional vector specifying subset observations used fitting process. drop.unused.levels logical. TRUE, unused levels factors dropped.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit MID Models — interpret","text":"interpret() returns object class \"mid\". list following components: weights numeric vector sample weights. call matched call. terms term labels. link \"link-glm\" \"link-midr\" object containing link function. intercept intercept. encoders list variable encoders. main.effects list data frames representing main effects. interacions list data frames representing interactions. ratio ratio sum squared error target model predictions fitted MID values, sum squared deviations target model predictions. fitted.matrix matrix showing breakdown predictions effects component functions. linear.predictors numeric vector linear predictors. fitted.values numeric vector fitted values. residuals numeric vector working residuals. na.action information special handlings NAs.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit MID Models — interpret","text":"MID model approximates target model's prediction function \\(f(\\mathbf{x})\\), values response variable \\(\\mathbf{y}\\). model, denoted \\(\\mathcal{F}(\\mathbf{x})\\), following structure: $$\\mathcal{F}(\\mathbf{x}) = f_\\phi + \\sum_{j} f_{j}(x_j) + \\sum_{j<k} f_{jk}(x_j, x_k)$$ \\(f_\\phi\\) intercept, \\(f_{j}(x_j)\\) main effect feature \\(j\\), \\(f_{jk}(x_j, x_k)\\) second-order interaction effect features \\(j\\) \\(k\\). ensure decomposed components unique, fitted centering constraints: main effect's average constrained zero, interaction effect's conditional averages also constrained zero. model fitted minimizing squared error target, \\(f(\\mathbf{x})\\) \\(\\mathbf{y}\\), surrogate \\(\\mathcal{F}(\\mathbf{x})\\), typically evaluated representative dataset.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"advanced-fitting-options","dir":"Reference","previous_headings":"","what":"Advanced Fitting Options","title":"Fit MID Models — interpret","text":"... argument can used pass several advanced fitting options: fit.intercept logical. TRUE, intercept term fitted part least squares problem. FALSE (default), calculated weighted mean response. interpolate.beta character string specifying method interpolating unestimable coefficients (betas) arise sparse deta regions. Can \"iterative\" iterative smoothing process, \"direct\" solving linear system, \"none\" disable interpolation. maxit integer specifying maximum number iterations \"iterative\" interpolation method. weighted.norm logical. TRUE, columns design matrix normalized square root weighted sum. required ensure minimum-norm least squares solution obtained appropriate methods (.e., 4 5) fastLmPure() minimum-norm solution weighted sense. weighted.endoding logical. TRUE, sample weights used encoding process (e.g., calculating quantiles determine knots).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit MID Models — interpret","text":"Asashiba R, Kozuma R, Iwasawa H (2025). “midr: Learning Black-Box Models Maximum Interpretation Decomposition.” 2506.08338, https://arxiv.org/abs/2506.08338.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit MID Models — interpret","text":"","code":"# Fit a MID model as a surrogate for another model data(cars, package = \"datasets\") model <- lm(dist ~ I(speed^2) + speed, cars) mid <- interpret(dist ~ speed, cars, model) plot(mid, \"speed\", intercept = TRUE) points(cars)   # Fit a MID model as a standalone predictive model data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, data = airquality, lambda = .5) #> 'model' not passed: response variable in 'data' is used plot(mid, \"Wind\")  plot(mid, \"Temp\")  plot(mid, \"Wind:Temp\", main.effects = TRUE)   data(Nile, package = \"datasets\") nile <- data.frame(time = 1:length(Nile), flow = as.numeric(Nile))  # A flexible fit with many knots mid <- interpret(flow ~ time, data = nile, k = 100L) #> 'model' not passed: response variable in 'data' is used plot(mid, \"time\", intercept = TRUE, limits = c(600L, 1300L)) points(x = 1L:100L, y = Nile)   # A smoother fit with fewer knots mid <- interpret(flow ~ time, data = nile, k = 10L) #> 'model' not passed: response variable in 'data' is used plot(mid, \"time\", intercept = TRUE, limits = c(600L, 1300L)) points(x = 1L:100L, y = Nile)   # A pseudo-smoothed fit using a penalty mid <- interpret(flow ~ time, data = nile, k = 100L, lambda = 100L) #> 'model' not passed: response variable in 'data' is used plot(mid, \"time\", intercept = TRUE, limits = c(600L, 1300L)) points(x = 1L:100L, y = Nile)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MID Breakdowns — mid.breakdown","title":"Calculate MID Breakdowns — mid.breakdown","text":"mid.breakdown() calculates contribution component function fitted MID model single prediction. breaks total prediction effects intercept, main effects, interactions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MID Breakdowns — mid.breakdown","text":"","code":"mid.breakdown(   object,   data = NULL,   row = NULL,   sort = TRUE,   format = c(\"%s\", \"%s, %s\") )"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MID Breakdowns — mid.breakdown","text":"object \"mid\" object. data data frame containing one observations calculate MID breakdown. provided, data automatically extracted based function call. row optional numeric value character string specifying row data used breakdown. NULL, data contains two observations, first observation used. sort logical. TRUE, output data frame sorted absolute contribution effect. format character vector length two used format string sprintf() display values main effects interactions, respectively.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MID Breakdowns — mid.breakdown","text":"mid.breakdown() returns object class \"mid.breakdown\". list following components: breakdown data frame containing breakdown prediction. data data frame containing predictor variable values used prediction. intercept intercept MID model. prediction predicted value MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate MID Breakdowns — mid.breakdown","text":"mid.breakdown() method local interpretability. given observation, provides clear answer question, \"much component MID model contribute final prediction?\" function calculates value term MID model's additive structure specified observation. total prediction sum individual contributions. prediction, denoted \\(\\mathcal{F}(\\mathbf{x})\\), decomposed : $$\\mathcal{F}(\\mathbf{x}) = f_\\phi + \\sum_{j} f_{j}(x_j) + \\sum_{j<k} f_{jk}(x_j, x_k)$$ output data frame itemizes numerical value main effect (\\(f_{j}(x_j)\\)) interaction effect (\\(f_{jk}(x_j, x_k)\\)), along intercept (\\(f_\\phi\\)). makes prediction transparent easy understand.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate MID Breakdowns — mid.breakdown","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, data = airquality, lambda = 1) #> 'model' not passed: response variable in 'data' is used  # Calculate the breakdown for the first observation in the data mbd <- mid.breakdown(mid, data = airquality, row = 1) print(mbd) #>  #> MID Breakdown of a Prediction #>  #> Intercept: 42.099 #>  #> Prediction: 39.739 #>  #> Breakdown of Effects: #>             term    value         mid order #> 1           Temp       67 -1.5043e+01     1 #> 2            Day        1  4.9770e+00     1 #> 3          Month        5  3.7575e+00     1 #> 4     Wind:Month   7.4, 5  2.0404e+00     2 #> 5       Temp:Day    67, 1  1.3885e+00     2 #> 6  Solar.R:Month   190, 5  1.3124e+00     2 #> 7           Wind      7.4  1.0227e+00     1 #> 8        Solar.R      190 -9.4228e-01     1 #> 9      Wind:Temp  7.4, 67 -6.2914e-01     2 #> 10  Solar.R:Temp  190, 67 -5.6533e-01     2 #> 11     Month:Day     5, 1  5.0500e-01     2 #> 12   Solar.R:Day   190, 1 -2.4755e-01     2 #> 13      Wind:Day   7.4, 1  4.2771e-02     2 #> 14    Temp:Month    67, 5  2.0660e-02     2 #> 15  Solar.R:Wind 190, 7.4 -3.4803e-04     2  # Calculate the breakdown for the third observation in the data mbd <- mid.breakdown(mid, data = airquality, row = 3) print(mbd) #>  #> MID Breakdown of a Prediction #>  #> Intercept: 42.099 #>  #> Prediction: 9.9693 #>  #> Breakdown of Effects: #>             term     value        mid order #> 1           Temp        74 -16.686548     1 #> 2            Day         3 -11.078821     1 #> 3           Wind      12.6  -9.263680     1 #> 4          Month         5   3.757459     1 #> 5  Solar.R:Month    149, 5   0.702906     2 #> 6       Wind:Day   12.6, 3   0.501892     2 #> 7     Wind:Month   12.6, 5  -0.461498     2 #> 8   Solar.R:Wind 149, 12.6   0.321963     2 #> 9      Month:Day      5, 3   0.180867     2 #> 10      Temp:Day     74, 3   0.120489     2 #> 11   Solar.R:Day    149, 3  -0.069100     2 #> 12    Temp:Month     74, 5  -0.068488     2 #> 13       Solar.R       149  -0.034390     1 #> 14     Wind:Temp  12.6, 74  -0.030288     2 #> 15  Solar.R:Temp   149, 74  -0.022524     2"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MID Conditional Expectations — mid.conditional","title":"Calculate MID Conditional Expectations — mid.conditional","text":"mid.conditional() calculates data required draw Individual Conditional Expectation (ICE) curves fitted MID model. ICE curves visualize single observation's prediction changes specified variable's value varies, variable held constant.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MID Conditional Expectations — mid.conditional","text":"","code":"mid.conditional(   object,   variable,   data = NULL,   n.samples = 100L,   max.nrow = 100000L,   type = c(\"response\", \"link\"),   keep.effects = TRUE )"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MID Conditional Expectations — mid.conditional","text":"object \"mid\" object. variable character string expression specifying singlue predictor variable calculate ICE curves. data data frame containing observations used ICE calculations. provided, data automatically extracted based function call. n.samples number sample points varibale's range. max.nrow maximum number rows output data frames. number evaluation points exceeds limit, original data randomly subsampled. type type prediction return. \"response\" (default) original scale \"link\" scale linear predictor. keep.effects logical. TRUE, effects individual component functions stored output object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MID Conditional Expectations — mid.conditional","text":"mid.conditional() returns object class \"mid.conditional\". list following components: terms character vector relevant terms variable. observed data frame original observations used, along predictions. conditional data frame hypothetical observations corresponding predictions. values vector sample points variable used ICE calculation","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate MID Conditional Expectations — mid.conditional","text":"function generates set hypothetical observations creating copies original data varying specified variable across range sample points. obtains prediction hypothetical observations MID model. returned object can plotted visualize ICE curves.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate MID Conditional Expectations — mid.conditional","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, data = airquality, lambda = 1) #> 'model' not passed: response variable in 'data' is used  # Calculate the ICE values for a fitted MID model ice <- mid.conditional(mid, variable = \"Wind\", data = airquality) print(ice) #>  #> Individual Conditional Expectation for 153 Observations #>  #> Variable: Wind #>  #> Sample Points: #>   [1]  2.3000  2.4859  2.6717  2.8576  3.0434  3.2293  3.4152  3.6010  3.7869 #>  [10]  3.9727  4.1586  4.3444  4.5303  4.7162  4.9020  5.0879  5.2737  5.4596 #>  [19]  5.6455  5.8313  6.0172  6.2030  6.3889  6.5747  6.7606  6.9465  7.1323 #>  [28]  7.3182  7.5040  7.6899  7.8758  8.0616  8.2475  8.4333  8.6192  8.8051 #>  [37]  8.9909  9.1768  9.3626  9.5485  9.7343  9.9202 10.1061 10.2919 10.4778 #>  [46] 10.6636 10.8495 11.0354 11.2212 11.4071 11.5929 11.7788 11.9646 12.1505 #>  [55] 12.3364 12.5222 12.7081 12.8939 13.0798 13.2657 13.4515 13.6374 13.8232 #>  [64] 14.0091 14.1949 14.3808 14.5667 14.7525 14.9384 15.1242 15.3101 15.4960 #>  [73] 15.6818 15.8677 16.0535 16.2394 16.4253 16.6111 16.7970 16.9828 17.1687 #>  [82] 17.3545 17.5404 17.7263 17.9121 18.0980 18.2838 18.4697 18.6556 18.8414 #>  [91] 19.0273 19.2131 19.3990 19.5848 19.7707 19.9566 20.1424 20.3283 20.5141 #> [100] 20.7000"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Single MID Component Functions — mid.effect","title":"Evaluate Single MID Component Functions — mid.effect","text":"mid.effect() calculates contribution single component function fitted MID model. serves low-level helper function making predictions direct analysis term's effect. mid.f() convenient shorthand mid.effect().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Single MID Component Functions — mid.effect","text":"","code":"mid.effect(object, term, x, y = NULL)  mid.f(object, term, x, y = NULL)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Single MID Component Functions — mid.effect","text":"object \"mid\" object. term character string specifying component function (term) evaluate. x vector values first variable term. matrix data frame provided, values related variables extracted . y vector values second variable interaction term.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate Single MID Component Functions — mid.effect","text":"mid.effect() returns numeric vector calculated term contributions, Wwith length x y.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.effect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate Single MID Component Functions — mid.effect","text":"mid.effect() low-level function designed calculate contribution single component function. Unlike predict.mid(), designed return total model predictions, mid.effect() flexible. accepts vectors, well data frames, input x y, making particularly useful visualizing component's effect combination functions, graphics::curve(). main effect, function evaluates component function \\(f_j(x_j)\\) vector values \\(x_j\\). interaction, evaluates \\(f_{jk}(x_j, x_k)\\) using vectors \\(x_j\\) \\(x_k\\).","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/mid.effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate Single MID Component Functions — mid.effect","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, data = airquality, lambda = 1) #> 'model' not passed: response variable in 'data' is used  # Visualize the main effect of \"Wind\" curve(mid.effect(mid, term = \"Wind\", x), from = 0, to = 25)   # Visualize the interaction of \"Wind\" and \"Temp\" curve(mid.f(mid, \"Wind:Temp\", x, 50), 0, 25) curve(mid.f(mid, \"Wind:Temp\", x, 60), 0, 25, add = TRUE, lty = 2) curve(mid.f(mid, \"Wind:Temp\", x, 70), 0, 25, add = TRUE, lty = 3)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MID Importance — mid.importance","title":"Calculate MID Importance — mid.importance","text":"mid.importance() calculates MID importance fitted MID model. measure feature importance quantifies average contribution component function across dataset.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MID Importance — mid.importance","text":"","code":"mid.importance(object, data = NULL, weights = NULL, sort = TRUE, measure = 1L)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MID Importance — mid.importance","text":"object \"mid\" object. data data frame containing observations calculate importance. NULL, fitted.matrix \"mid\" object used. weights optional numeric vector sample weights. sort logical. TRUE, output data frame sorted importance descending order. measure integer specifying measure importance. Possible alternatives 1 mean absolute effect, 2 root mean square effect, 3 median absolute effect.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MID Importance — mid.importance","text":"mid.importance() returns object class \"mid.importance\". list containing following components: importance data frame calculated importance values, sorted default. predictions matrix fitted predicted MID values. measure character string describing type importance measure used.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate MID Importance — mid.importance","text":"MID importance component function (e.g., main effect interaction) defined mean absolute effect predictions within given data. Terms higher importance larger average impact model's overall predictions.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate MID Importance — mid.importance","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, data = airquality, lambda = 1) #> 'model' not passed: response variable in 'data' is used  # Calculate MID importance using median absolute contribution imp <- mid.importance(mid) print(imp) #>  #> MID Importance based on 111 Observations #>  #> Measure: Mean Absolute Contribution #>  #> Importance: #>             term importance order #> 1           Temp   13.94096     1 #> 2           Wind   10.50540     1 #> 3        Solar.R    5.57458     1 #> 4            Day    4.39277     1 #> 5          Month    2.27995     1 #> 6   Solar.R:Wind    0.44950     2 #> 7  Solar.R:Month    0.37623     2 #> 8       Temp:Day    0.37148     2 #> 9     Wind:Month    0.36905     2 #> 10      Wind:Day    0.36547     2 #> 11     Month:Day    0.32260     2 #> 12     Wind:Temp    0.28060     2 #> 13   Solar.R:Day    0.26646     2 #> 14  Solar.R:Temp    0.23464     2 #> 15    Temp:Month    0.12076     2  # Calculate MID importance using root mean square contribution imp <- mid.importance(mid, measure = 2) print(imp) #>  #> MID Importance based on 111 Observations #>  #> Measure: Root Mean Square Contribution #>  #> Importance: #>             term importance order #> 1           Temp   16.23314     1 #> 2           Wind   14.77143     1 #> 3        Solar.R    7.25784     1 #> 4            Day    5.69605     1 #> 5          Month    2.66107     1 #> 6     Wind:Month    0.56396     2 #> 7   Solar.R:Wind    0.55439     2 #> 8  Solar.R:Month    0.51836     2 #> 9       Wind:Day    0.51705     2 #> 10      Temp:Day    0.48822     2 #> 11     Month:Day    0.47417     2 #> 12     Wind:Temp    0.41892     2 #> 13   Solar.R:Day    0.32831     2 #> 14  Solar.R:Temp    0.30592     2 #> 15    Temp:Month    0.20070     2"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Multiple MID Component Functions — mid.plots","title":"Plot Multiple MID Component Functions — mid.plots","text":"mid.plots() convenience function applying ggmid() plot() multiple component functions \"mid\" object . can automatically determine common plotting scales manage layout.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Multiple MID Component Functions — mid.plots","text":"","code":"mid.plots(   object,   terms = mid.terms(object, interactions = FALSE),   limits = c(NA, NA),   intercept = FALSE,   main.effects = FALSE,   max.nplots = NULL,   engine = c(\"ggplot2\", \"graphics\"),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Multiple MID Component Functions — mid.plots","text":"object \"mid\" object. terms character vector terms visualized. default, main effect terms used. limits numeric vector length two specifying mid value limits. NA values replaced minimum /maximum plotted MID values. intercept = TRUE set, intercept also included limit calculation. intercept logical. TRUE, intercept added MID values plotting scale shifted accordingly. main.effects logical. TRUE, main effects added interaction plots show conditional effects. argument disables automatic limit calculations. max.nplots maximum number plots generate. engine plotting engine use, either \"ggplot2\" \"graphics\". ... optional parameters passed plot.mid() ggmid().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Multiple MID Component Functions — mid.plots","text":"engine \"ggplot2\", mid.plots() returns list \"ggplot\" objects. Otherwise (.e., engine \"graphics\"), mid.plots() produces plots side-effects returns NULL invisibly.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Multiple MID Component Functions — mid.plots","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4L) mid <- interpret(price ~ (carat + cut + color + clarity) ^ 2, diamonds[idx, ]) #> 'model' not passed: response variable in 'data' is used  # Plot selected main effects and interaction using the ggplot2 engine mid.plots(mid, mid.terms(mid, require = \"color\", remove = \"cut\"), limits = NULL) #> $color  #>  #> $`carat:color`  #>  #> $`color:clarity`  #>"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Terms from MID Models — mid.terms","title":"Extract Terms from MID Models — mid.terms","text":"mid.terms() extracts term labels fitted MID model derivative objects. primary strength ability filter terms based type (main effects vs. interactions) associated variable names.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Terms from MID Models — mid.terms","text":"","code":"mid.terms(   object,   main.effects = TRUE,   interactions = TRUE,   require = NULL,   remove = NULL,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Terms from MID Models — mid.terms","text":"object \"mid\" object another object contains model terms. Can \"mid.importance\", \"mid.conditional\", \"mid.breakdown\" object. main.effects logical. FALSE, main effect terms excluded. interactions logical. FALSE, interactions terms excluded. require character vector variable names. terms related least one variables returned. remove character vector variable names. Terms related variables excluded. ... aliases supported convenience: \"\" main.effects \"ie\" interactions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Terms from MID Models — mid.terms","text":"mid.terms() returns character vector selected term labels.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Terms from MID Models — mid.terms","text":"\"term\" MID model refers either main effect (e.g., \"Wind\") interaction effect (e.g., \"Wind:Temp\"). function provides flexible way select subset terms, useful plotting, summarizing, downstream analyses.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.terms.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract Terms from MID Models — mid.terms","text":"function provides common underlying logic stats::terms() S3 methods \"mid\", \"mid.importance\", \"mid.conditional\", \"mid.breakdown\" objects.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/mid.terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Terms from MID Models — mid.terms","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, airquality, lambda = 1) #> 'model' not passed: response variable in 'data' is used  # Get only main effect terms mid.terms(mid, interactions = FALSE) #> [1] \"Solar.R\" \"Wind\"    \"Temp\"    \"Month\"   \"Day\"      # Get terms related to \"Wind\" or \"Temp\" mid.terms(mid, require = c(\"Wind\", \"Temp\")) #> [1] \"Wind\"         \"Temp\"         \"Solar.R:Wind\" \"Solar.R:Temp\" \"Wind:Temp\"    #> [6] \"Wind:Month\"   \"Wind:Day\"     \"Temp:Month\"   \"Temp:Day\"      # Get terms related to \"Wind\" or \"Temp\", but exclude any with \"Day\" mid.terms(mid, require = c(\"Wind\", \"Temp\"), remove = \"Day\") #> [1] \"Wind\"         \"Temp\"         \"Solar.R:Wind\" \"Solar.R:Temp\" \"Wind:Temp\"    #> [6] \"Wind:Month\"   \"Temp:Month\"    # Get the predicted contributions of only the terms associated with \"Wind\" terms_wind <- mid.terms(mid, require = \"Wind\") predict(mid, airquality[1:3,], terms = terms_wind, type = \"terms\") #>           Wind  Solar.R:Wind   Wind:Temp Wind:Month   Wind:Day #> [1,]  1.022674 -0.0003480335 -0.62914150  2.0403924 0.04277067 #> [2,] -1.592088 -0.3299065460 -0.26756774  1.3537671 0.03546630 #> [3,] -9.263680  0.3219626220 -0.03028815 -0.4614983 0.50189173 #> attr(,\"constant\") #> [1] 42.0991"},{"path":"https://ryo-asashi.github.io/midr/reference/midr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"midr: Learning from Black-Box Models by Maximum Interpretation Decomposition — midr-package","title":"midr: Learning from Black-Box Models by Maximum Interpretation Decomposition — midr-package","text":"goal 'midr' provide model-agnostic method interpreting explaining black-box predictive models creating globally interpretable surrogate model. package implements 'Maximum Interpretation Decomposition' (MID), functional decomposition technique finds optimal additive approximation original model. approximation achieved minimizing squared error predictions black-box model surrogate model. theoretical foundations MID described Iwasawa & Matsumori (2025) [Forthcoming], package detailed Asashiba et al. (2025) doi:10.48550/arXiv.2506.08338 .","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/midr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"midr: Learning from Black-Box Models by Maximum Interpretation Decomposition — midr-package","text":"Maintainer: Ryoichi Asasihba ryoichi.asashiba@gmail.com Authors: Hirokazu Iwasawa contributors: Reiji Kozuma [contributor]","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":null,"dir":"Reference","previous_headings":"","what":"Encoder for Quantitative Variables — numeric.encoder","title":"Encoder for Quantitative Variables — numeric.encoder","text":"numeric.encoder() creates encoder function quantitative variable. encoder can used convert numeric vector design matrix using either piecewise linear one-hot interval encoding, core components modeling effects MID model. numeric.frame() helper function create \"numeric.frame\" object defines encoding scheme.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encoder for Quantitative Variables — numeric.encoder","text":"","code":"numeric.encoder(   x,   k,   type = 1L,   encoding.digits = NULL,   tag = \"x\",   frame = NULL,   weights = NULL )  numeric.frame(   reps = NULL,   breaks = NULL,   type = NULL,   encoding.digits = NULL,   tag = \"x\" )"},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encoder for Quantitative Variables — numeric.encoder","text":"x numeric vector encoded. k integer specifying coarseness encoding. positive, unique values x used knots bins. type integer (1 0) specifying encoding method (see \"details\" section). encoding.digits integer specifying rounding digits piecewise linear encoding (type = 1). tag name variable. frame \"numeric.frame\" object numeric vector explicitly defines knots breakes encoding. weights optional numeric vector sample weights x. reps numeric vector used representative values (knots). breaks numeric vector used binning breaks.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encoder for Quantitative Variables — numeric.encoder","text":"numeric.encoder() returns object class \"encoder\". list containing following components: frame \"numeric.frame\" object containing encoding information. encode function convert numeric vector x dummy matrix. n number encoding levels (.e., columns design matrix). type character string describing encoding type: \"linear\", \"constant\", \"null\". numeric.frame() returns \"numeric.frame\" object containing encoding information.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encoder for Quantitative Variables — numeric.encoder","text":"primary purpose encoder transform single numeric variable design matrix MID model's linear system formulation. output encoder depends type argument. type = 1, variable's effect modeled piecewise linear function k knots including ends. value, encoder finds two nearest knots assigns weight , based relative position. results design matrix row two non-zero values sum 1. approach creates smooth, continuous representation effect. type = 0, variable's effect modeled step function dividing range k intervals (bins). encoder determines interval value falls assigns 1 corresponding column design matrix, columns 0. results standard one-hot encoded matrix creates discrete, bin-based representation effect.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encoder for Quantitative Variables — numeric.encoder","text":"","code":"# Create an encoder for a quantitative variable data(iris, package = \"datasets\") enc <- numeric.encoder(x = iris$Sepal.Length, k = 5L, tag = \"Sepal.Length\") enc #>  #> Linear encoder with 5 knots #>  #> Frame: #>   Sepal.Length #> 1          4.3 #> 2          5.1 #> 3          5.8 #> 4          6.4 #> 5          7.9 #>   # Encode a numeric vector with NA and Inf enc$encode(x = c(4:8, NA, Inf)) #>        4.3   5.1       5.8       6.4 7.9 #> [1,] 1.000 0.000 0.0000000 0.0000000 0.0 #> [2,] 0.125 0.875 0.0000000 0.0000000 0.0 #> [3,] 0.000 0.000 0.6666667 0.3333333 0.0 #> [4,] 0.000 0.000 0.0000000 0.6000000 0.4 #> [5,] 0.000 0.000 0.0000000 0.0000000 1.0 #> [6,] 0.000 0.000 0.0000000 0.0000000 0.0 #> [7,] 0.000 0.000 0.0000000 0.0000000 1.0  # Create an encoder with a pre-defined encoding frame frm <- numeric.frame(breaks = c(3, 5, 7, 9), type = 0L) enc <- numeric.encoder(x = iris$Sepal.Length, frame = frm) enc$encode(x = c(4:8, NA, Inf)) #>      [-Inf, 5) [5, 7) [7, Inf) #> [1,]         1      0        0 #> [2,]         0      1        0 #> [3,]         0      1        0 #> [4,]         0      0        1 #> [5,]         0      0        1 #> [6,]         0      0        0 #> [7,]         0      0        1  # Create an encoder with a numeric vector specifying the knots enc <- numeric.encoder(x = iris$Sepal.Length, frame = c(3, 5, 7, 9)) enc$encode(x = c(4:8, NA, Inf)) #>        3   5   7   9 #> [1,] 0.5 0.5 0.0 0.0 #> [2,] 0.0 1.0 0.0 0.0 #> [3,] 0.0 0.5 0.5 0.0 #> [4,] 0.0 0.0 1.0 0.0 #> [5,] 0.0 0.0 0.5 0.5 #> [6,] 0.0 0.0 0.0 0.0 #> [7,] 0.0 0.0 0.0 1.0"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Breakdowns — plot.mid.breakdown","title":"Plot MID Breakdowns — plot.mid.breakdown","text":"\"mid.breakdown\" objects, plot() visualizes breakdown prediction component functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Breakdowns — plot.mid.breakdown","text":"","code":"# S3 method for class 'mid.breakdown' plot(   x,   type = c(\"waterfall\", \"barplot\", \"dotchart\"),   theme = NULL,   terms = NULL,   max.nterms = 15L,   width = NULL,   vline = TRUE,   catchall = \"others\",   format = c(\"%t=%v\", \"%t\"),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Breakdowns — plot.mid.breakdown","text":"x \"mid.breakdown\" object visualized. type plotting style. One \"waterfall\", \"barplot\" \"dotchart\". theme character string object defining color theme. See color.theme details. terms optional character vector specifying terms display. max.nterms maximum number terms display plot. Less important terms grouped \"catchall\" category. width numeric value specifying width bars. vline logical. TRUE, vertical line drawn zero intercept line. catchall character string catchall label. format character string character vector length two used format axis labels. Use \"%t\" term name (e.g., \"carat\") \"%v\" values (e.g., \"0.23\"). ... optional parameters passed graphing function. Possible arguments \"col\", \"fill\", \"pch\", \"cex\", \"lty\", \"lwd\" aliases .","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Breakdowns — plot.mid.breakdown","text":"plot.mid.breakdown() produces plot side effect returns NULL invisibly.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Breakdowns — plot.mid.breakdown","text":"S3 method plot() generic produces breakdown plot \"mid.breakdown\" object, visualizing contribution component function single prediction. type argument controls visualization style. default, type = \"waterfall\", creates waterfall plot shows prediction builds intercept, term's contribution sequentially added subtracted. type = \"barplot\" option creates standard bar plot length bar represents magnitude term's contribution. type = \"dotchart\" option creates dot plot showing contribution term point connected zero baseline.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Breakdowns — plot.mid.breakdown","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' not passed: response variable in 'data' is used mbd <- mid.breakdown(mid, diamonds[1L, ])  # Create a waterfall plot plot(mbd, type = \"waterfall\")   # Create a bar plot with a different theme plot(mbd, type = \"barplot\", theme = \"highlight\")   # Create a dot chart plot(mbd, type = \"dotchart\", size = 1.5)"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Conditional Expectations — plot.mid.conditional","title":"Plot MID Conditional Expectations — plot.mid.conditional","text":"\"mid.conditional\" objects, plot() visualizes Individual Conditional Expectation (ICE) curves derived fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Conditional Expectations — plot.mid.conditional","text":"","code":"# S3 method for class 'mid.conditional' plot(   x,   type = c(\"iceplot\", \"centered\"),   theme = NULL,   term = NULL,   var.alpha = NULL,   var.color = NULL,   var.linetype = NULL,   var.linewidth = NULL,   reference = 1L,   dots = TRUE,   sample = NULL,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Conditional Expectations — plot.mid.conditional","text":"x \"mid.conditional\" object visualized. type plotting style. One \"iceplot\" \"centered\". theme character string object defining color theme. See color.theme details. term optional character string specifying interaction term. passed, ICE curve specified term plotted. var.alpha variable name expression map alpha aesthetic. var.color variable name expression map color aesthetic. var.linetype variable name expression map linetype aesthetic. var.linewidth variable name expression map linewidth aesthetic. reference integer specifying index sample points use reference centering c-ICE plot. dots logical. TRUE, points representing actual predictions observation plotted. sample optional vector specifying names observations plotted. ... optional parameters passed graphing functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Conditional Expectations — plot.mid.conditional","text":"plot.mid.conditional() produces ICE plot side-effect invisibly returns ICE matrix used plot.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Conditional Expectations — plot.mid.conditional","text":"S3 method plot() generic produces ICE curves \"mid.conditional\" object. ICE plots model-agnostic tool visualizing model's prediction single observation changes one feature varies. function plots one line observation data. type argument controls visualization style: default, type = \"iceplot\", plots row ICE curves. type = \"centered\" option creates centered ICE (c-ICE) plot, curve shifted start zero, makes easier compare slopes curves. var.color, var.alpha, etc., arguments allow map aesthetics variables data using (possibly) unquoted expressions.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Conditional Expectations — plot.mid.conditional","text":"","code":"data(airquality, package = \"datasets\") library(midr) mid <- interpret(Ozone ~ .^2, data = airquality, lambda = 0.1) #> 'model' not passed: response variable in 'data' is used ice <- mid.conditional(mid, \"Temp\", data = airquality)  # Create an ICE plot, coloring lines by 'Wind' plot(ice, var.color = \"Wind\")   # Create a centered ICE plot, mapping color and linetype to other variables plot(ice, type = \"centered\", theme = \"Purple-Yellow\",      var.color = factor(Month), var.linetype = Wind > 10)"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Component Functions — plot.mid","title":"Plot MID Component Functions — plot.mid","text":"\"mid\" objects (.e., fitted MID models), plot() visualizes single component function specified term argument.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Component Functions — plot.mid","text":"","code":"# S3 method for class 'mid' plot(   x,   term,   type = c(\"effect\", \"data\", \"compound\"),   theme = NULL,   intercept = FALSE,   main.effects = FALSE,   data = NULL,   limits = NULL,   jitter = 0.3,   resolution = c(100L, 100L),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Component Functions — plot.mid","text":"x \"mid\" object visualized. term character string specifying component function plotted. type plotting style. One \"effect\", \"data\" \"compound\". theme character string object defining color theme. See color.theme details. intercept logical. TRUE, intercept added MID values. main.effects logical. TRUE, main effects included interaction plot. data data frame plotted corresponding MID values. provided, data automatically extracted function call. limits numeric vector length two specifying limits plotting scale. jitter numeric value specifying amount jitter data points. resolution integer vector two integers specifying resolution raster plot interactions. ... optional parameters passed graphing function. Possible arguments \"col\", \"fill\", \"pch\", \"cex\", \"lty\", \"lwd\" aliases .","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Component Functions — plot.mid","text":"plot.mid() produces plot side-effect returns NULL invisibly.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Component Functions — plot.mid","text":"S3 method plot() generic produces plot \"mid\" object, visualizing component function fitted MID model. type argument controls visualization style. default, type = \"effect\", plots component function . style, plotting method automatically selected based effect's type: line plot quantitative main effects; bar plot qualitative main effects; filled contour (level) plot interactions. type = \"data\" option creates scatter plot data, colored values component function. type = \"compound\" option combines approaches, plotting component function alongside data points.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Component Functions — plot.mid","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' not passed: response variable in 'data' is used  # Plot a quantitative main effect plot(mid, \"carat\")   # Plot a qualitative main effect plot(mid, \"clarity\")   # Plot an interaction effect with data points and a raster layer plot(mid, \"carat:clarity\", type = \"compound\", data = diamonds[idx, ])   # Use a different color theme plot(mid, \"clarity:color\", theme = \"RdBu\")"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Importance — plot.mid.importance","title":"Plot MID Importance — plot.mid.importance","text":"\"mid.importance\" objects, plot() visualizes importance component functions fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Importance — plot.mid.importance","text":"","code":"# S3 method for class 'mid.importance' plot(   x,   type = c(\"barplot\", \"dotchart\", \"heatmap\", \"boxplot\"),   theme = NULL,   max.nterms = 30L,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Importance — plot.mid.importance","text":"x \"mid.importance\" object visualized. type plotting style. One \"barplot\", \"dotchart\", \"heatmap\", \"boxplot\". theme character string object defining color theme. See color.theme details. max.nterms maximum number terms display bar, dot box plots. ... optional parameters passed graphing functions. Possible arguments \"col\", \"fill\", \"pch\", \"cex\", \"lty\", \"lwd\" aliases .","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Importance — plot.mid.importance","text":"plot.mid.importance() produces plot side effect returns NULL invisibly.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Importance — plot.mid.importance","text":"S3 method plot() generic produces importance plot \"mid.importance\" object, visualizing average contribution component functions fitted MID model. type argument controls visualization style. default, type = \"barplot\", creates standard bar plot length bar represents overall importance term. type = \"dotchart\" option creates dot plot, offering clean alternative bar plot visualizing term importance. type = \"heatmap\" option creates matrix-shaped heat map color cell represents importance interaction pair variables, main effect diagonal. type = \"boxplot\" option creates box plot box shows distribution term's contributions across observations, providing insight varibability term's effect.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Importance — plot.mid.importance","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' not passed: response variable in 'data' is used imp <- mid.importance(mid)  # Create a bar plot (default) plot(imp)   # Create a dot chart plot(imp, type = \"dotchart\", theme = \"Okabe-Ito\", size = 1.5)   # Create a heatmap plot(imp, type = \"heatmap\")   # Create a boxplot to see the distribution of effects plot(imp, type = \"boxplot\")"},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Method for fitted MID Models — predict.mid","title":"Predict Method for fitted MID Models — predict.mid","text":"predict.mid() S3 method \"mid\" objects obtains predictions fitted MID model. can used predict new data retrieve fitted values original data.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Method for fitted MID Models — predict.mid","text":"","code":"# S3 method for class 'mid' predict(   object,   newdata = NULL,   na.action = \"na.pass\",   type = c(\"response\", \"link\", \"terms\"),   terms = object$terms,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Method for fitted MID Models — predict.mid","text":"object \"mid\" object used make predictions. newdata data frame new observations. NULL, original fitted values extracted returned. na.action function character string specifying happen data contain NA values. type type prediction required. One \"response\", \"link\", \"terms\". terms character vector term labels, specifying subset component functions use predictions. ... arguments passed methods (used method).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Method for fitted MID Models — predict.mid","text":"predict.mid() returns numeric vector MID model predictions, matrix type = \"terms\".","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict Method for fitted MID Models — predict.mid","text":"type argument allows specify scale prediction. default (type = \"response\"), function returns predictions original scale response variable. Alternatively, can obtain predictions scale linear predictor setting type = \"link\". detailed breakdown, setting type = \"terms\" returns matrix column represents contribution specific model term linear predictor scale. terms argument allows predictions based subset model's component functions, excluding others.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Method for fitted MID Models — predict.mid","text":"","code":"data(airquality, package = \"datasets\") test <- 1:10 mid <- interpret(Ozone ~ .^2, airquality[-test, ], lambda = 1, link = \"log\") #> 'model' not passed: response variable in 'data' is used  # Predict on new data predict(mid, airquality[test, ]) #>  [1] 20.567677 13.073024 15.206606 11.576707  7.077082 12.750558 13.801620 #>  [8]  9.220003  6.914937 18.057558  # Get predictions on the link scale predict(mid, airquality[test, ], type = \"link\") #>  [1] 3.023721 2.570551 2.721730 2.448995 1.956862 2.545575 2.624786 2.221375 #>  [9] 1.933684 2.893564  # Get the contributions of specific terms predict(mid, airquality[test, ], terms = c(\"Temp\", \"Wind\"), type = \"terms\") #>             Temp        Wind #>  [1,] -0.4407995  0.03339056 #>  [2,] -0.4721648 -0.07546887 #>  [3,] -0.4521979 -0.08759411 #>  [4,] -0.7352680 -0.11168528 #>  [5,] -1.0414244 -0.30022613 #>  [6,] -0.4872791 -0.25282628 #>  [7,] -0.5338984 -0.10882497 #>  [8,] -0.9270107 -0.16329480 #>  [9,] -0.8125969 -0.08899763 #> [10,] -0.4332501 -0.10882497 #> attr(,\"constant\") #> [1] 3.44554"},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Print MID Models — print.mid","title":"Print MID Models — print.mid","text":"print.mid() S3 method \"mid\" objects prints concise summary fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print MID Models — print.mid","text":"","code":"# S3 method for class 'mid' print(x, digits = max(3L, getOption(\"digits\") - 2L), main.effects = FALSE, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print MID Models — print.mid","text":"x \"mid\" object printed. digits integer specifying number significant digits printing. main.effects logical. TRUE, MID values main effect also printed. ... arguments passed methods (used method).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print MID Models — print.mid","text":"print.mid() returns original \"mid\" object invisibly.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print MID Models — print.mid","text":"default, print() method \"mid\" objects provides quick overview model structure listing number main effect interaction terms. main.effects = TRUE specified, method also print contribution main effect sample points, providing detailed look model's components.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print MID Models — print.mid","text":"","code":"data(cars, package = \"datasets\") mid <- interpret(dist ~ speed, cars) #> 'model' not passed: response variable in 'data' is used  # Default print provides a concise summary print(mid) #>  #> Call: #> interpret(formula = dist ~ speed, data = cars) #>  #> Intercept: 42.98 #>  #> Main Effects: #> 1 main effect term #>  #> Uninterpreted Variation Ratio: 0.22636  # Setting main.effects = TRUE prints the contributions of each main effect print(mid, main.effects = TRUE) #>  #> Call: #> interpret(formula = dist ~ speed, data = cars) #>  #> Intercept: 42.98 #>  #> Main Effects: #> --- #> $speed #>        4        7        8       10       11       12       13       14  #> -36.9800 -29.9800 -31.1050 -18.3550 -20.4800 -21.4800  -7.9800   7.5200  #>       15       16       17       18       19       20       22       24  #>  -9.6467  -6.9800  -2.3133  21.5200   7.0200   7.4200  13.1629  48.3057  #>       25  #>  42.0200  #>  #> Uninterpreted Variation Ratio: 0.22636"},{"path":"https://ryo-asashi.github.io/midr/reference/scale_color_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Color Theme Scales for ggplot2 Graphics — scale_color_theme","title":"Color Theme Scales for ggplot2 Graphics — scale_color_theme","text":"scale_color_theme() family functions provide unified interface apply custom color themes colour fill aesthetics \"ggplot\" objects.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/scale_color_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color Theme Scales for ggplot2 Graphics — scale_color_theme","text":"","code":"scale_color_theme(   theme,   ...,   discrete = NULL,   middle = 0,   aesthetics = \"colour\" )  scale_colour_theme(   theme,   ...,   discrete = NULL,   middle = 0,   aesthetics = \"colour\" )  scale_fill_theme(theme, ..., discrete = NULL, middle = 0, aesthetics = \"fill\")"},{"path":"https://ryo-asashi.github.io/midr/reference/scale_color_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color Theme Scales for ggplot2 Graphics — scale_color_theme","text":"theme color theme name (e.g., \"Viridis\"), character vector color names, palette/ramp function. See ?color.theme details. ... optional arguments passed ggplot2::continuous_scale() ggplot2::discrete_scale(). discrete logical. TRUE, discrete scale used regardless theme type. middle numeric value specifying middle point diverging color themes. aesthetics aesthetic scaled. Can \"colour\", \"color\", \"fill\".","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/scale_color_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color Theme Scales for ggplot2 Graphics — scale_color_theme","text":"scale_color_theme() returns ggplot2 scale object (either \"ScaleContinuous\" \"ScaleDiscrete\" object) can added \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/scale_color_theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color Theme Scales for ggplot2 Graphics — scale_color_theme","text":"function automatically determines appropriate ggplot2 scale based theme's type. theme \"qualitative\", discrete scale used default assign distinct colors categorical data. discrete argument automatically set TRUE specified. theme \"sequential\" \"diverging\", continuous scale used default. \"diverging\" themes handled specially scales::rescale_mid() correctly center gradient around middle value.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/scale_color_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color Theme Scales for ggplot2 Graphics — scale_color_theme","text":"","code":"data(txhousing, package = \"ggplot2\") cities <- c(\"Houston\", \"Fort Worth\", \"San Antonio\", \"Dallas\", \"Austin\") df <- subset(txhousing, city %in% cities) d <- ggplot2::ggplot(data = df, ggplot2::aes(x = sales, y = median)) +   ggplot2::geom_point(ggplot2::aes(colour = city))  # Plot with a qualitative theme d + scale_color_theme(\"Set 1\")   # Use a sequential theme as a discrete scale d + scale_color_theme(\"SunsetDark\", discrete = TRUE)   data(faithfuld, package = \"ggplot2\") v <- ggplot2::ggplot(faithfuld) +   ggplot2::geom_tile(ggplot2::aes(waiting, eruptions, fill = density))  # Plot with continuous themes v + scale_fill_theme(\"Plasma\")   # Use a diverging theme with a specified midpoint v + scale_fill_theme(\"midr\", middle = 0.017)"},{"path":"https://ryo-asashi.github.io/midr/reference/set.color.theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Register Color Themes — set.color.theme","title":"Register Color Themes — set.color.theme","text":"set.color.theme() registers custom color theme package's theme registry.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/set.color.theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register Color Themes — set.color.theme","text":"","code":"set.color.theme(   kernel,   kernel.args = list(),   options = list(),   name = \"newtheme\",   source = \"custom\",   type = NULL,   env = color.theme.env() )"},{"path":"https://ryo-asashi.github.io/midr/reference/set.color.theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register Color Themes — set.color.theme","text":"kernel color vector, palette function, ramp function used color kernel. can also character vector list (see \"Details\" section). \"color.theme\" object can also passed. kernel.args list arguments passed color kernel. options list option values control color theme's behavior. name character string color theme name. source character string source name color theme. type character string specifying type color theme. One \"sequential\", \"diverging\", \"qualitative\". env environment color themes registered.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/set.color.theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register Color Themes — set.color.theme","text":"set.color.theme() returns metadata previous theme overwritten (NULL none existed) invisibly.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/set.color.theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register Color Themes — set.color.theme","text":"function takes color vector, color-generating function, existing \"color.theme\" object registers specified name source (default \"custom/newtheme\"). registered color theme can easily retrieved using \"Theme Name Syntax\" (see help(color.theme)). keep registry environment size small, kernel argument supports form lazy loading. use feature, provide vector list containing two character strings. first R expression returns color kernel (e.g., \"rainbow\"), second namespace evaluate expression (e.g., \"grDevices\"). expression evaluated color theme loaded color.theme().","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/shapviz.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MID-Derived Shapley Values — shapviz.mid","title":"Calculate MID-Derived Shapley Values — shapviz.mid","text":"shapviz.mid() S3 method shapviz::shapviz() generic, calculates MID-derived Shapley values fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/shapviz.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MID-Derived Shapley Values — shapviz.mid","text":"","code":"# S3 method for class 'mid' shapviz(object, data = NULL)"},{"path":"https://ryo-asashi.github.io/midr/reference/shapviz.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MID-Derived Shapley Values — shapviz.mid","text":"object \"mid\" object. data data frame containing observations calculate MID-derived Shapley values. passed, data automatically extracted based function call.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/shapviz.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MID-Derived Shapley Values — shapviz.mid","text":"shapviz.mid() returns object class \"shapviz\".","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/shapviz.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate MID-Derived Shapley Values — shapviz.mid","text":"function calculates MID-derived Shapley values attributing contribution component function respective variables follows: first, main effect fully attributed corresponding variable; , second-order interaction effect split equally two variables involved.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize MID Models — summary.mid","title":"Summarize MID Models — summary.mid","text":"\"mid\" objects, S3 method summary() prints comprehensive summary fitted MID Model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize MID Models — summary.mid","text":"","code":"# S3 method for class 'mid' summary(object, digits = max(3L, getOption(\"digits\") - 2L), top.n = 10L, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize MID Models — summary.mid","text":"object \"mid\" object summarized. digits number significant digits printing numeric values. top.n maximum number top-ranked terms printed MID importance table. ... arguments passed methods (used method).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize MID Models — summary.mid","text":"summary.mid() returns original \"mid\" object invisibly.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize MID Models — summary.mid","text":"S3 method summary.mid() generates comprehensive overview fitted MID model. output includes following components: (1) \"Call\" - function call used fit MID model. (2) \"Uninterpreted Variation Ratio\" - key metric indicating proportion target model's variance explained MID model. Lower values suggest better fit. (3) \"Residuals\" - five-number summary (Min, 1Q, Median, 3Q, Max) working residuals. aids assessing model fit identifying potential biases. (4) \"Encoding\" - summary encoding schemes used variable MID model. (5) \"Importance\" - list top terms ranked MID importance, quantifies average contribution model's predictions.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize MID Models — summary.mid","text":"","code":"# Summarize a fitted MID model data(cars, package = \"datasets\") mid <- interpret(dist ~ speed, cars) #> 'model' not passed: response variable in 'data' is used summary(mid) #>  #> Call: #> interpret(formula = dist ~ speed, data = cars) #>  #> Uninterpreted Variation Ratio: #> [1] 0.22636 #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -24.50000  -8.06250  -0.33333   8.37500  29.50000   #>  #> Encoding: #>       main.effect #> speed  linear(17) #>  #> Importance: #>    term importance order #> 1 speed     18.138     1"},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Plotting Themes — theme_midr","title":"Default Plotting Themes — theme_midr","text":"theme_midr() returns complete theme \"ggplot\" objects, providing consistent visual style ggplot2 plots. par.midr() can used set graphical parameters base R graphics.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Plotting Themes — theme_midr","text":"","code":"theme_midr(   grid_type = c(\"none\", \"x\", \"y\", \"xy\"),   base_size = 11,   base_family = \"serif\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )  par.midr(...)"},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Plotting Themes — theme_midr","text":"grid_type type grid lines display, one \"none\", \"x\", \"y\" \"xy\". base_size base font size, given pts. base_family base font family. base_line_size base size line elements. base_rect_size base size rect elements. ... par.midr(), optional arguments tag = value form passed graphics::par().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Plotting Themes — theme_midr","text":"theme_midr() provides ggplot2 theme customized midr package. par.midr() returns previous values changed parameters invisible named list.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default Plotting Themes — theme_midr","text":"","code":"# Use theme_midr() with ggplot2 X <- data.frame(x = 1:10, y = 1:10) ggplot2::ggplot(X) +   ggplot2::geom_point(ggplot2::aes(x, y)) +   theme_midr()  ggplot2::ggplot(X) +   ggplot2::geom_col(ggplot2::aes(x, y)) +   theme_midr(grid_type = \"y\")  ggplot2::ggplot(X) +   ggplot2::geom_line(ggplot2::aes(x, y)) +   theme_midr(grid_type = \"xy\")   # Use par.midr() for base R graphics old.par <- par.midr() plot(y ~ x, data = X)  par(old.par)"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.loss.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Loss Function — weighted.loss","title":"Weighted Loss Function — weighted.loss","text":"weighted.loss() computes various loss metrics (e.g., RMSE, MAE) two numeric vectors, deviations weighted mean numeric vector.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.loss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Loss Function — weighted.loss","text":"","code":"weighted.loss(x, y = NULL, w = NULL, na.rm = FALSE, method = \"rmse\")"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.loss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Loss Function — weighted.loss","text":"x numeric vector. y optional numeric vector. NULL, x compared weighted mean. w numeric vector sample weights value x. na.rm logical. TRUE, NA NaNs removed input vectors calculation. method loss measure. One \"mse\" (mean square error), \"rmse\" (root mean square error), \"mae\" (mean absolute error), \"medae\" (median absolute error).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.loss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Loss Function — weighted.loss","text":"weighted.loss() returns single numeric value.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.loss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Loss Function — weighted.loss","text":"","code":"# Calculate loss metrics between x and y with weights weighted.loss(x = c(0, 10), y = c(0, 0), w = c(99, 1), method = \"rmse\") #> [1] 1 weighted.loss(x = c(0, 10), y = c(0, 0), w = c(99, 1), method = \"mae\") #> [1] 0.1 weighted.loss(x = c(0, 10), y = c(0, 0), w = c(99, 1), method = \"medae\") #> [1] 0  # Verify uninterpreted variation ratio of a fitted MID model without weights mid <- interpret(dist ~ speed, cars) #> 'model' not passed: response variable in 'data' is used RSS <- weighted.loss(cars$dist, predict(mid, cars), method = \"mse\") TSS <- weighted.loss(cars$dist, method = \"mse\") RSS / TSS #> [1] 0.2263636 mid$ratio #> [1] 0.2263636  # Verify uninterpreted variation ratio of a fitted MID model with weights w <- 1:nrow(cars) mid <- interpret(dist ~ speed, cars, weights = w) #> 'model' not passed: response variable in 'data' is used RSS <- weighted.loss(cars$dist, predict(mid, cars), w = w, method = \"mse\") TSS <- weighted.loss(cars$dist, w = w, method = \"mse\") RSS / TSS #> [1] 0.2864814 mid$ratio #> [1] 0.2864814"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Sample Quantile — weighted.quantile","title":"Weighted Sample Quantile — weighted.quantile","text":"weighted.quantile() produces weighted sample quantiles corresponding given probabilities.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Sample Quantile — weighted.quantile","text":"","code":"weighted.quantile(   x,   w = NULL,   probs = seq(0, 1, 0.25),   na.rm = FALSE,   names = TRUE,   digits = 7L,   type = 1L,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Sample Quantile — weighted.quantile","text":"x numeric vector whose weighted sample quantiles wanted. w numeric vector sample weights value x. probs numeric vector probabilities values [0, 1]. na.rm logical. TRUE, NA NaNs removed x quantiles computed. names logical. TRUE, result \"names\" attribute. digits used names TRUE. precision use formatting percentages. type integer 1 9 selecting quantile algorithms. 1 available weighted quantile. ... arguments passed stats::quantile() weights passed.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Sample Quantile — weighted.quantile","text":"weighted.quantile() returns weighted sample quantiles corresponding given probabilities.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Sample Quantile — weighted.quantile","text":"weighted.quantile() wrapper function stats::quantile() weighted quantiles. weighted quantile, \"type 1\" quantile, inverse empirical distribution function, available. function used numeric.encoder() enable weights-based encoding.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Tabulation for Vectors — weighted.tabulate","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"weighted.tabulate() returns sum weights integer vector bin.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"","code":"weighted.tabulate(bin, w = NULL, nbins = max(1L, bin, na.rm = TRUE))"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"bin numeric vector positive integers, factor. w numeric vector sample weights value bin. nbins number bins used.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"weighted.tabulate() returns numeric vector.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"weighted.tabulate() wrapper function tabulate() reflect sample weights. function used factor.encoder() enable weights-based encoding.","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-051900","dir":"Changelog","previous_headings":"","what":"midr 0.5.1.900","title":"midr 0.5.1.900","text":"Changed argument names consistency (max.nterms, max.nplots, max.nrow).","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-051","dir":"Changelog","previous_headings":"","what":"midr 0.5.1","title":"midr 0.5.1","text":"CRAN release: 2025-08-27 Second release CRAN.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050909","dir":"Changelog","previous_headings":"","what":"midr 0.5.0.909","title":"midr 0.5.0.909","text":"Vectorized design matrix encoding process factor.encoder() numeric.encoder() improved performance. Unified weighted.rmse() related functions single, versatile weighted.loss() function. Updated improved various help documents clarity completeness. Changed argument names consistency (e.g., changed max.bars max.terms, max.nrow max.rows, etc.). Deprecated weighted() family functions. Deprecated mid.extract() mid.frames().","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050908","dir":"Changelog","previous_headings":"","what":"midr 0.5.0.908","title":"midr 0.5.0.908","text":"Rewrote color.theme() significantly enhance functionality flexibility.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050906","dir":"Changelog","previous_headings":"","what":"midr 0.5.0.906","title":"midr 0.5.0.906","text":"Fixed memory leak issue numeric.encoder() factor.encoder() held unnecessary reference execution environment interpret.default(). Updated hex logo favicons.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050905","dir":"Changelog","previous_headings":"","what":"midr 0.5.0.905","title":"midr 0.5.0.905","text":"Rewrote interpret.formula() factor.encoder() correctly support subset drop.unused.levels arguments. Updated get.yhat() methods ensure prediction outputs always length number input observations.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050904","dir":"Changelog","previous_headings":"","what":"midr 0.5.0.904","title":"midr 0.5.0.904","text":"Improved computational efficiency parameter interpolation step interpret.default().","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050903","dir":"Changelog","previous_headings":"","what":"midr 0.5.0.903","title":"midr 0.5.0.903","text":"Fixed bug interpret.default() caused inconsistency “fitted.values” “residuals”. Fixed issue mid.f() (mid.effect()) correctly handle vector recycling input’s length 1. Fixed autoplot.mid.conditional() avoid redundant evaluation “mid” object. Updated automatic determination method number knots (k) interpret(). Added support type suffixes color.theme() easier theme specification.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050902","dir":"Changelog","previous_headings":"","what":"midr 0.5.0.902","title":"midr 0.5.0.902","text":"Rewrote interpret.formula() resolve environment issues related stats::model.frame() Added new tests cover improved functionality. Refined default diverging color theme “midr”.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050901","dir":"Changelog","previous_headings":"","what":"midr 0.5.0.901","title":"midr 0.5.0.901","text":"Corrected “HCL” color theme properly categorized “qualitative” theme. Changed rounding method used numeric “encoder” objects. Updated article examples related color.theme().","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050900","dir":"Changelog","previous_headings":"","what":"midr 0.5.0.900","title":"midr 0.5.0.900","text":"Default color themes can now set globally via R options: midr.diverging, midr.qualitative midr.sequential. Added “HCL” color theme set new default “qualitative” theme. Fixed issue interpret.formula() ensure evaluated formula correctly stored function call.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050","dir":"Changelog","previous_headings":"","what":"midr 0.5.0","title":"midr 0.5.0","text":"CRAN release: 2025-06-23 First release CRAN.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-049909","dir":"Changelog","previous_headings":"","what":"midr 0.4.9.909","title":"midr 0.4.9.909","text":"accompanying working paper now available arXiv.","code":""}]

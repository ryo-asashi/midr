[{"path":"https://ryo-asashi.github.io/midr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 midr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"classification-task","dir":"Articles","previous_headings":"","what":"Classification Task","title":"Interpretation of Classification Models","text":"use titanic dataset, available website https://www.encyclopedia-titanica.org/ included DALEX package. dataset 9 variables 2207 people, 1317 passengers 890 crew members. fit classification models predict survived tragedy , interpret fitted models. model type, fit classification model using train data 1707 people interpretative MID surrogate target model using data. evaluate predictive accuracy target model interpretative accuracy MID surrogate based AUC test predicted probabilities Spearman’s rank correlation coefficient two predicted probabilities, respectively.","code":"# benchmark classification task library(DALEX) #> Welcome to DALEX (version: 2.4.3). #> Find examples and detailed introduction at: http://ema.drwhy.ai/ #> Additional features will be available after installation of: ggpubr. #> Use 'install_dependencies()' to get all suggested dependencies set.seed(42) test_rows <- sample(nrow(titanic), 500L) train <- titanic[-test_rows, -5] str(train) #> 'data.frame':    1707 obs. of  8 variables: #>  $ gender  : Factor w/ 2 levels \"female\",\"male\": 2 1 1 2 2 1 2 2 2 2 ... #>  $ age     : num  42 39 16 25 30 28 27 20 30 27 ... #>  $ class   : Factor w/ 7 levels \"1st\",\"2nd\",\"3rd\",..: 3 3 3 3 2 2 3 3 3 3 ... #>  $ embarked: Factor w/ 4 levels \"Belfast\",\"Cherbourg\",..: 4 4 4 4 2 2 2 4 4 4 ... #>  $ fare    : num  7.11 20.05 7.13 7.13 24 ... #>  $ sibsp   : num  0 1 0 0 1 1 0 0 0 0 ... #>  $ parch   : num  0 1 0 0 0 0 0 0 0 0 ... #>  $ survived: Factor w/ 2 levels \"no\",\"yes\": 1 2 2 2 1 2 2 2 1 1 ... test  <- titanic[ test_rows, -5] str(test[, -9]) #> 'data.frame':    500 obs. of  8 variables: #>  $ gender  : Factor w/ 2 levels \"female\",\"male\": 2 2 1 2 2 2 2 2 1 2 ... #>  $ age     : num  74 19 32 21 40 23 24 26 34 28 ... #>  $ class   : Factor w/ 7 levels \"1st\",\"2nd\",\"3rd\",..: 3 3 2 3 4 3 5 5 2 5 ... #>  $ embarked: Factor w/ 4 levels \"Belfast\",\"Cherbourg\",..: 4 2 4 4 4 4 4 4 4 1 ... #>  $ fare    : num  7.15 7.04 21 8.08 0 ... #>  $ sibsp   : num  0 0 0 0 0 0 0 0 1 0 ... #>  $ parch   : num  0 0 0 0 0 0 0 0 1 0 ... #>  $ survived: Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 1 1 2 1 2 2 ... # define utility functions for the following chunks link <- list(   linkfun = function(mu) binomial()$linkfun(pmax(1e-9, pmin(1 - 1e-9, mu))),   linkinv = binomial()$linkinv )  effect_plots <- function(object) {   plots <- mid.plots(mid, terms = terms(mid)[1:6])   for (i in 1:6) {     plots[[i]] <- plots[[i]] + ggtitle(\"main effect\")     if (any(i == c(1, 3, 4)))       plots[[i]] <- plots[[i]] + coord_flip()   }   plots }  interaction_plot <- function(object, data) {   ggmid(mid, \"age:class\", type = \"data\", data = na.omit(titanic),          theme = \"Temps\", main.effects = TRUE) +     theme(legend.position = \"bottom\") +     ggtitle(\"main effect + interaction\") }  ice_plot <- function(object, data) {   ggmid(mid.conditional(mid, \"age\", data = data),               var.color = gender, theme = \"Set 1\") +     theme(legend.position = \"bottom\") +     ggtitle(\"conditional expectation\") }  importance_plot <- function(object) {   ggmid(mid.importance(object), \"dotchart\", theme = \"Okabe-Ito\") +     theme(legend.position = \"bottom\") +     ggtitle(\"feature importance\") }  evaluation_plot <- function(pred, pred_mid, actual) {   auc_vs_test <- auc(actual, pred)   cor_vs_mid <-  cor(pred, pred_mid, method = \"spearman\",                      use = \"pairwise.complete.obs\")   ggplot() + scale_color_theme(\"Accent\") +     geom_point(aes(x = pred, y = actual, col = \"vs test\"),                data = na.omit(data.frame(pred, actual))) +     geom_point(aes(x = pred, y = pred_mid, col = \"vs mid\"),                data = na.omit(data.frame(pred, pred_mid))) +     geom_abline(slope = 1, intercept = 0, col = \"black\", lty = 2) +     theme(legend.position = \"bottom\") + xlim(0, 1) +     labs(x = \"model-prediction\", y = \"mid-prediction / test\") +     annotate(       \"text\", family = \"serif\", size = 3, x = 0.2, y = 0.8,       label = sprintf(\"vs test (AUC): %.3f\\nvs mid (Spearman): %.3f\",                       auc_vs_test, cor_vs_mid)     ) + ggtitle(\"prediction/interpretation accuracy\") }"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"logistic-regression","dir":"Articles","previous_headings":"Additive Models","what":"Logistic Regression","title":"Interpretation of Classification Models","text":"","code":"model <- glm(survived == \"yes\" ~ ., family = \"binomial\", data = train) mid <- interpret(survived ~ .^2, train, model, link = \"logit\") pred <- get.yhat(model, test) pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model, #>  link = \"logit\") #>  #> Intercept: -0.921 #>  #> Model Class: glm, lm #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Rate: 0 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, interaction_plot(mid),              ice_plot(mid, test[1:100, ])) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, (test$survived == \"yes\") * 1L))"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"single-hidden-layer-network","dir":"Articles","previous_headings":"Neural Network","what":"Single Hidden Layer Network","title":"Interpretation of Classification Models","text":"","code":"library(nnet) set.seed(42) model <- nnet(survived ~ ., train, size = 5, maxit = 1e3, trace = FALSE) mid <- interpret(survived ~ .^2, train, model, link = link, lambda = .1) pred <- get.yhat(model, test) pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model, #>  link = link, lambda = 0.1) #>  #> Intercept: -0.84955 #>  #> Model Class: nnet.formula, nnet #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Rate: 0.059739 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, interaction_plot(mid),              ice_plot(mid, test[1:100, ])) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, (test$survived == \"yes\") * 1L))"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"rbf-kernel-svm","dir":"Articles","previous_headings":"Support Vector Machine","what":"RBF Kernel SVM","title":"Interpretation of Classification Models","text":"","code":"library(e1071) model <- svm(survived ~ ., train, kernel = \"radial\", probability = TRUE) mid <- interpret(survived ~ .^2, train, model, link = link,                  pred.args = list(target = \"yes\"), lambda = .1) pred <- get.yhat(model, test, target = \"yes\") pred_mid <- predict(mid, test) grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, interaction_plot(mid),              ice_plot(mid, test[1:100, ])) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, (test$survived == \"yes\") * 1L))"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"random-forest","dir":"Articles","previous_headings":"Tree Based Models","what":"Random Forest","title":"Interpretation of Classification Models","text":"","code":"library(ranger) set.seed(42) model <- ranger(survived ~ ., na.omit(train), probability = TRUE) mid <- interpret(survived ~ .^2, train, model, link = link,                  pred.args = list(target = \"yes\"), lambda = .1) pred <- get.yhat(model, test, target = \"yes\") pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model, #>  pred.args = list(target = \"yes\"), link = link, lambda = 0.1) #>  #> Intercept: -0.82531 #>  #> Model Class: ranger #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Rate: 0.084207 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, interaction_plot(mid),              ice_plot(mid, test[1:100, ])) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, (test$survived == \"yes\") * 1L))"},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"decision-tree","dir":"Articles","previous_headings":"Tree Based Models","what":"Decision Tree","title":"Interpretation of Classification Models","text":"","code":"library(rpart) model <- rpart(survived ~ ., train) mid <- interpret(survived ~ .^2, train, model, link = link,                  pred.args = list(target = \"yes\"), lambda = .1) pred <- get.yhat(model, test, target = \"yes\") pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model, #>  pred.args = list(target = \"yes\"), link = link, lambda = 0.1) #>  #> Intercept: -0.87452 #>  #> Model Class: rpart #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Rate: 0.074538 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, interaction_plot(mid),              ice_plot(mid, test[1:100, ])) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, (test$survived == \"yes\") * 1L))"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/classification.html","id":"predictive-mid","dir":"Articles","previous_headings":"Other Models","what":"Predictive MID","title":"Interpretation of Classification Models","text":"","code":"train$survived <- relevel(train$survived, \"yes\") # unlike glm(), interpret() takes the first level as the target mid <- interpret(survived ~ .^2, train, lambda = 10, link = link) #> 'model' is not passed: the response variable in the data is used pred <- pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = survived ~ .^2, data = train, lambda = 10, #>  link = link) #>  #> Intercept: -7.3423 #>  #> Main Effects: #> 7 main effect terms #>  #> Interactions: #> 21 interaction terms #>  #> Uninterpreted Rate: 0.65527 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, interaction_plot(mid),              ice_plot(mid, test[1:100, ])) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, (test$survived == \"yes\") * 1L))"},{"path":"https://ryo-asashi.github.io/midr/articles/ggplot2.html","id":"feature-importance","dir":"Articles","previous_headings":"","what":"Feature Importance","title":"Visualization with ggplot2 package","text":"","code":"# compute MID based variable importance imp <- mid.importance(mid)  # create importance plots ggmid(imp, theme = \"Temps\", max = 15) +   ggtitle('Feature Importance (barplot)') ggmid(imp, type = \"dotchart\", theme = \"Set 1\", max = 15, cex = 3) +   ggtitle('Feature Importance (dotchart)') ggmid(imp, type = \"heatmap\", theme = \"BuPu\") +   ggtitle('Feature Importance (heatmap)') ggmid(imp, type = \"boxplot\", theme = \"Spectral\", max = 15) +   ggtitle('Feature Importance (boxplot)')"},{"path":"https://ryo-asashi.github.io/midr/articles/ggplot2.html","id":"component-functions","dir":"Articles","previous_headings":"","what":"Component Functions","title":"Visualization with ggplot2 package","text":"","code":"# create component plots ggmid(mid, term = \"temp\") +   ggtitle('Main Effect (effect)') ggmid(mid, term = \"hr\") +   ggtitle('Main Effect (effect)') ggmid(mid, term = \"hr:as.factor(workingday)\") +   ggtitle('Interaction Effect (effect)') ggmid(mid, term = \"hr:temp\", type = \"data\",      main.effects = TRUE, theme = \"Mako\", data = Bikeshare) +   ggtitle('Interaction Effect (data)') ggmid(mid, term = \"temp:windspeed\", type = \"compound\",      main.effects = TRUE, data = Bikeshare) +   ggtitle('Interaction Effect (compound)')"},{"path":"https://ryo-asashi.github.io/midr/articles/ggplot2.html","id":"conditional-expectations","dir":"Articles","previous_headings":"","what":"Conditional Expectations","title":"Visualization with ggplot2 package","text":"","code":"# compute ICE plots set.seed(42) ice_rows <- sample(nrow(Bikeshare), 200L) ice <- mid.conditional(mid, variable = \"hr\",                        data = Bikeshare[ice_rows, ]) # create plots ggmid(ice, theme = \"Cividis\", var.color = mnth == \"Aug\") +   ggtitle('Conditional Expectations (iceplot)') +   theme(legend.position = \"bottom\") ggmid(ice, term = \"hr:temp\", dots = FALSE,      theme = \"Temps\", var.color = temp) +   ggtitle('Conditional Expectations (iceplot)') ggmid(ice, type = \"centered\", alpha = .3,      theme = \"midr\", var.color = `as.factor(workingday)`) +   ggtitle('Conditional Expectations (centered)') +   theme(legend.position = \"bottom\")"},{"path":"https://ryo-asashi.github.io/midr/articles/ggplot2.html","id":"prediction-breakdown","dir":"Articles","previous_headings":"","what":"Prediction Breakdown","title":"Visualization with ggplot2 package","text":"","code":"# compute MID breakdown for the individual penguins bd100 <- mid.breakdown(mid, Bikeshare[100L, ])  # create plots ggmid(bd100, theme = \"Tableau 10\") +   ggtitle('Prediction Breakdown (waterfall)') ggmid(bd100, type = \"barplot\", theme = \"Set 1\") +   ggtitle('Prediction Breakdown (barplot)') ggmid(bd100, type = \"dotchart\", theme = \"Set 2\", cex = 3) +   ggtitle('Prediction Breakdown (dotchart)')"},{"path":"https://ryo-asashi.github.io/midr/articles/graphics.html","id":"feature-importance","dir":"Articles","previous_headings":"","what":"Feature Importance","title":"Visualization with graphics package","text":"","code":"# compute MID based variable importance imp <- mid.importance(mid)  # create importance plots par.midr(bg = \"#FEFEFE\") plot(imp, theme = \"Temps\", max = 15) title(main = 'Feature Importance (barplot)') plot(imp, type = \"dotchart\", theme = \"Set 1\", max = 15, cex = 1.4) title(main = 'Feature Importance (dotchart)') plot(imp, type = \"heatmap\", theme = \"BuPu\") title(main = 'Feature Importance (heatmap)') plot(imp, type = \"boxplot\", theme = \"Spectral\", max = 15, cex = .5) title(main = 'Feature Importance (boxplot)')"},{"path":"https://ryo-asashi.github.io/midr/articles/graphics.html","id":"component-functions","dir":"Articles","previous_headings":"","what":"Component Functions","title":"Visualization with graphics package","text":"","code":"# create component plots par.midr(bg = \"#FEFEFE\") plot(mid, term = \"temp\") title(main = 'Main Effect (effect)') plot(mid, term = \"hr\") title(main = 'Main Effect (effect)') plot(mid, term = \"hr:as.factor(workingday)\") title(main = 'Interaction Effect (effect)') plot(mid, term = \"hr:temp\", type = \"data\",      main.effects = TRUE, theme = \"Mako\", data = Bikeshare) title(main = 'Interaction Effect (data)') plot(mid, term = \"temp:windspeed\", type = \"compound\",      main.effects = TRUE, data = Bikeshare) title(main = 'Interaction Effect (compound)')"},{"path":"https://ryo-asashi.github.io/midr/articles/graphics.html","id":"conditional-expectations","dir":"Articles","previous_headings":"","what":"Conditional Expectations","title":"Visualization with graphics package","text":"","code":"# compute ICE plots set.seed(42) ice_rows <- sample(nrow(Bikeshare), 200L) ice <- mid.conditional(mid, variable = \"hr\",                        data = Bikeshare[ice_rows, ]) # create plots par.midr(bg = \"#FEFEFE\") plot(ice, theme = \"Cividis\", var.color = mnth == \"Aug\") title(main = 'Conditional Expectations (iceplot)') plot(ice, term = \"hr:temp\", dots = FALSE,      theme = \"Temps\", var.color = temp) title(main = 'Conditional Expectations (iceplot)') plot(ice, type = \"centered\", alpha = .3,      theme = \"midr\", var.color = `as.factor(workingday)`) title(main = 'Conditional Expectations (centered)')"},{"path":"https://ryo-asashi.github.io/midr/articles/graphics.html","id":"prediction-breakdown","dir":"Articles","previous_headings":"","what":"Prediction Breakdown","title":"Visualization with graphics package","text":"","code":"# compute MID breakdown for the individual penguins bd100 <- mid.breakdown(mid, Bikeshare[100L, ])  # create plots par.midr(bg = \"#FEFEFE\") plot(bd100, theme = \"Tableau 10\") title(main = 'Prediction Breakdown (waterfall)') plot(bd100, type = \"barplot\", theme = \"Set 1\") title(main = 'Prediction Breakdown (barplot)') plot(bd100, type = \"dotchart\", theme = \"Set 2\", cex = 1.5) title(main = 'Prediction Breakdown (dotchart)')"},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"regression-task","dir":"Articles","previous_headings":"","what":"Regression Task","title":"Interpretation of Regression Models","text":"use benchmark regression task, originally described Friedman (1991) Breiman (1996), implemented mlbench package. dataset 10 independent predictor variables x1,x2,...,x10x_1,x_2,...,x_{10} uniformly distributed interval [0,1][0,1], response variable yy , generated according following formula disturbance term ϵ∼𝒩(0,1)\\epsilon\\ {\\sim}\\ \\mathcal{N}{(0, 1)}. y=10sin(πx1x2)+20(x3−0.5)2+10x4+5x5+ϵ y=10\\sin{(\\pi{x_1}{x_2})+20{(x_3-0.5)}^2+10x_4+5x_5+\\epsilon} following plots show effect predictor variable response. x1x_1 x2x_2 , interaction effect shown colored lines: effect x1x_1 depends value x2x_2 (blue 0 red 1) vice versa.  model type, fit regression model using train data 500 observations interpretative MID surrogate target model using mtrain data 2500 observations without response variable. evaluate predictive accuracy target model interpretative accuracy MID surrogate based RMSE test model prediction two predictions, respectively.","code":"# benchmark regression task library(mlbench) set.seed(42) train  <- as.data.frame(mlbench.friedman1(n = 500L)) test   <- as.data.frame(mlbench.friedman1(n = 500L)) mtrain <- as.data.frame(mlbench.friedman1(n = 2500L))[, -11L] # define utility functions for the following chunks effect_plots <- function(object) {   plots <- mid.plots(mid, terms = paste(\"x\", 1:5, sep = \".\"))   for (i in 1:5)     plots[[i]] <- plots[[i]] + ggtitle(\"main effect\")   plots[[6]] <- ggmid(mid, \"x.1:x.2\", main.effects = TRUE) +     theme(legend.position = \"none\") +     ggtitle(\"main effect + interaction\")   plots }  ice_theme <- color.theme(\"Zissou 1\", type = \"sequential\") ice_plots <- function(object, data) {   p1 <- ggmid(mid.conditional(mid, \"x.1\", data = data),               var.color = x.2, type = \"centered\", theme = ice_theme) +     theme(legend.position = \"bottom\") +     ggtitle(\"conditional expectation\")   p2 <- ggmid(mid.conditional(mid, \"x.2\", data = data),               var.color = x.1, type = \"centered\", theme = ice_theme) +     theme(legend.position = \"bottom\") +     ggtitle(\"conditional expectation\")   list(p1, p2) }  importance_plot <- function(object) {   ggmid(mid.importance(object), \"dotchart\", theme = \"Set 1\") +     theme(legend.position = \"bottom\") +     ggtitle(\"feature importance\") }  evaluation_plot <- function(pred, pred_mid, actual) {   rmse_vs_test <- rmse(pred, actual)   rmse_vs_mid <-  rmse(pred, pred_mid)   ggplot() + scale_color_theme(\"Accent\") +     geom_point(aes(x = pred, y = actual, col = \"vs test\")) +     geom_point(aes(x = pred, y = pred_mid, col = \"vs mid\")) +     geom_abline(slope = 1, intercept = 0, col = \"black\", lty = 2) +     theme(legend.position = \"bottom\") +     labs(x = \"model-prediction\", y = \"mid-prediction / test\") +     annotate(       \"text\", family = \"serif\", size = 3,       x = min(pred) + diff(range(pred)) / 9,       y = max(actual) - diff(range(actual) / 10),       label = sprintf(\"RMSE\\nvs test: %.3f\\nvs mid: %.3f\",                       rmse_vs_test, rmse_vs_mid)     ) + ggtitle(\"prediction/interpretation accuracy\") }"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"linear-model","dir":"Articles","previous_headings":"Additive Models","what":"Linear Model","title":"Interpretation of Regression Models","text":"","code":"model <- lm(y ~ ., train) mid <- interpret(y ~ .^2, mtrain, model) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = mtrain, model = model) #>  #> Intercept: 14.319 #>  #> Model Class: lm #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Rate: 0 grid.arrange(grobs = effect_plots(mid), nrow = 2L) pred <- predict(model, test) pred_mid <- predict(mid, test) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, test$y)) # grid.arrange(grobs = ice_plots(mid, test[1:100, ]), nrow = 1L)"},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"regularized-glm","dir":"Articles","previous_headings":"Additive Models","what":"Regularized GLM","title":"Interpretation of Regression Models","text":"","code":"library(glmnet) model <- glmnet(x = as.matrix(train[, -11]), y = train[, 11]) # prediction with arbitrarily chosen lambda mid <- interpret(y ~ .^2, train[, -11], model,                  pred.args = list(s = model$lambda[9])) pred <- predict(model, as.matrix(test[, -11]), s = model$lambda[9]) pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train[, -11], model = model, #>  pred.args = list(s = model$lambda[9])) #>  #> Intercept: 14.417 #>  #> Model Class: elnet, glmnet #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Rate: 0 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, test$y)) # grid.arrange(grobs = ice_plots(mid, test[1:100, ]), nrow = 1L)"},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"generalized-additive-model","dir":"Articles","previous_headings":"Additive Models","what":"Generalized Additive Model","title":"Interpretation of Regression Models","text":"","code":"library(gam) model <- gam(y ~ s(x.1) + s(x.2) + s(x.3) + s(x.4) + s(x.5) +              s(x.6) + s(x.7) + s(x.8) + s(x.9) + s(x.10),              family = gaussian, data = train) mid <- interpret(y ~ .^2, train, model) pred <- predict(model, test) pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = model) #>  #> Intercept: 14.417 #>  #> Model Class: Gam, glm, lm #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Rate: 1.1114e-07 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, test$y)) grid.arrange(grobs = ice_plots(mid, test[1:100, ]), nrow = 1L)"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"single-hidden-layer-network","dir":"Articles","previous_headings":"Neural Network","what":"Single Hidden Layer Network","title":"Interpretation of Regression Models","text":"","code":"library(nnet) set.seed(42) model <- nnet(y ~ ., train, size = 5, linout = TRUE, maxit = 1e3, trace = FALSE) mid <- interpret(y ~ .^2, mtrain, model) pred <- predict(model, test) pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = mtrain, model = model) #>  #> Intercept: 14.195 #>  #> Model Class: nnet.formula, nnet #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Rate: 0.0028096 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, test$y)) grid.arrange(grobs = ice_plots(mid, test[1:100, ]), nrow = 1L)"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"rbf-kernel-svm","dir":"Articles","previous_headings":"Support Vector Machine","what":"RBF Kernel SVM","title":"Interpretation of Regression Models","text":"","code":"library(e1071) model <- svm(y ~ ., train, kernel = \"radial\") mid <- interpret(y ~ .^2, mtrain, model) pred <- predict(model, test) pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = mtrain, model = model) #>  #> Intercept: 14.32 #>  #> Model Class: svm.formula, svm #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Rate: 0.0075539 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, test$y)) grid.arrange(grobs = ice_plots(mid, test[1:100, ]), nrow = 1L)"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"gradient-boosting-trees","dir":"Articles","previous_headings":"Tree Based Models","what":"Gradient Boosting Trees","title":"Interpretation of Regression Models","text":"","code":"library(xgboost) params <- list(eta = .1, subsample = .7, max_depth = 5) set.seed(42) model <- xgboost(as.matrix(train[, -11]), train[, 11], nrounds = 100,                  params = params, verbose = 0) mid <- interpret(y ~ .^2, as.matrix(mtrain), model) pred <- predict(model, as.matrix(test[, -11])) pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = as.matrix(mtrain), model = model) #>  #> Intercept: 14.172 #>  #> Model Class: xgb.Booster #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Rate: 0.011813 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, test$y)) grid.arrange(grobs = ice_plots(mid, test[1:100, ]), nrow = 1L)"},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"random-forest","dir":"Articles","previous_headings":"Tree Based Models","what":"Random Forest","title":"Interpretation of Regression Models","text":"","code":"library(ranger) set.seed(42) model <- ranger(y ~ ., train, mtry = 5) mid <- interpret(y ~ .^2, mtrain, model) pred <- predict(model, test)$predictions pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = mtrain, model = model) #>  #> Intercept: 14.27 #>  #> Model Class: ranger #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Rate: 0.0075668 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, test$y)) grid.arrange(grobs = ice_plots(mid, test[1:100, ]), nrow = 1L)"},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"decision-tree","dir":"Articles","previous_headings":"Tree Based Models","what":"Decision Tree","title":"Interpretation of Regression Models","text":"","code":"library(rpart) model <- rpart(y ~ ., train) mid <- interpret(y ~ .^2, mtrain, model) pred <- predict(model, test) pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = yhat ~ .^2, data = mtrain, model = model) #>  #> Intercept: 14.264 #>  #> Model Class: rpart #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Rate: 0.05739 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, test$y)) grid.arrange(grobs = ice_plots(mid, test[1:100, ]), nrow = 1L)"},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/articles/regression.html","id":"predictive-mid","dir":"Articles","previous_headings":"Other Modes","what":"Predictive MID","title":"Interpretation of Regression Models","text":"","code":"model <- mid <- interpret(y ~ .^2, train, lambda = .2) #> 'model' is not passed: the response variable in the data is used pred <- pred_mid <- predict(mid, test) print(mid) #>  #> Call: #> interpret(formula = y ~ .^2, data = train, lambda = 0.2) #>  #> Intercept: 14.417 #>  #> Main Effects: #> 10 main effect terms #>  #> Interactions: #> 45 interaction terms #>  #> Uninterpreted Rate: 0.031792 grid.arrange(grobs = effect_plots(mid), nrow = 2L) grid.arrange(nrow = 1L, importance_plot(mid),              evaluation_plot(pred, pred_mid, test$y)) grid.arrange(grobs = ice_plots(mid, test[1:100, ]), nrow = 1L)"},{"path":"https://ryo-asashi.github.io/midr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryoichi Asasihba. Author, maintainer. Hirokazu Iwasawa. Author. Reiji Kozuma. Contributor.","code":""},{"path":"https://ryo-asashi.github.io/midr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Asasihba R, Iwasawa H (2025). midr: Interpret Black-Box Models Maximum Interpretation Decomposition. R package version 0.4.8.909, https://github.com/ryo-asashi/midr.","code":"@Manual{,   title = {midr: Interpret Black-Box Models by Maximum Interpretation Decomposition},   author = {Ryoichi Asasihba and Hirokazu Iwasawa},   year = {2025},   note = {R package version 0.4.8.909},   url = {https://github.com/ryo-asashi/midr}, }"},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"midr-","dir":"","previous_headings":"","what":"Interpret Black-Box Models by Maximum Interpretation Decomposition","title":"Interpret Black-Box Models by Maximum Interpretation Decomposition","text":"midr designed provide model-agnostic method interpreting black-box machine learning models creating globally interpretable surrogate target model using functional decomposition technique called Maximum Interpretation Decomposition (MID). theoretical details MID, see Iwasawa & Matsumori (2025) [Forthcoming], technical details package, see Asashiba et al. (2025) [Forthcoming].","code":""},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interpret Black-Box Models by Maximum Interpretation Decomposition","text":"can install released version midr CRAN : development version GitHub :","code":"install.packages(\"midr\") # not yet available # install.packages(\"devtools\") devtools::install_github(\"ryo-asashi/midr\")"},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Interpret Black-Box Models by Maximum Interpretation Decomposition","text":"following example, fit random forest model Boston dataset included ISLR2, attempt interpret using functions midr. first step create MID model global surrogate target model using interpret(). visualize main interaction effects variables, apply ggmid() plot() fitted MID model.  mid.importance() helps compute compare importance main interaction effects.  mid.breakdown() provides way analyze individual predictions decomposing differences intercept predicted value variable effects.  mid.conditional() can used compute ICE curves (Goldstein et al. 2015) fitted MID model, well breakdown ICE curves main interaction effects.","code":"# load required packages library(midr) library(ggplot2) library(gridExtra) library(ISLR2) library(ranger) theme_set(theme_midr()) # split the Boston dataset data(\"Boston\", package = \"ISLR2\") set.seed(42) idx <- sample(nrow(Boston), nrow(Boston) * .75) train <- Boston[ idx, ] valid <- Boston[-idx, ] # fit a random forest model rf <- ranger(medv ~ ., train, mtry = 5) preds_rf <- predict(rf, valid)$predictions cat(\"RMSE: \", weighted.rmse(valid$medv, preds_rf)) #> RMSE:  3.351362 # fit a two-dimensional MID model mid <- interpret(medv ~ .^2, train, rf, lambda = .1) mid #>  #> Call: #> interpret(formula = yhat ~ .^2, data = train, model = rf, lambda = 0.1) #>  #> Intercept: 22.446 #>  #> Model Class: ranger #>  #> Main Effects: #> 12 main effect terms #>  #> Interactions: #> 66 interaction terms #>  #> Uninterpreted Rate: 0.016249 preds_mid <- predict(mid, valid) cat(\"RMSE: \", weighted.rmse(preds_rf, preds_mid)) #> RMSE:  1.106746 cat(\"RMSE: \", weighted.rmse(valid$medv, preds_mid)) #> RMSE:  3.306111 # visualize the main effects and interactions of the MID model grid.arrange(   ggmid(mid, \"lstat\") +     ggtitle(\"main effect of lstat\"),   ggmid(mid, \"dis\") +     ggtitle(\"main effect of dis\"),   ggmid(mid, \"lstat:dis\") +     ggtitle(\"interaction of lstat:dis\"),   ggmid(mid, \"lstat:dis\", main.effects = TRUE) +     ggtitle(\"interaction + main effects\") ) # visualize the MID importance of the component functions imp <- mid.importance(mid) grid.arrange(nrow = 1L,   ggmid(imp, theme = \"Dark 2_r\", max.bars = 20L) +     theme(legend.position = \"bottom\") +     ggtitle(\"importance of variable effects\"),   ggmid(imp, \"heatmap\", theme = \"grayscale\") +     theme(legend.position = \"bottom\") +     ggtitle(\"heatmap of variable importance\") ) # visualize the MID breakdown of the model predictions bd1 <- mid.breakdown(mid, data = train[1L, ]) bd9 <- mid.breakdown(mid, data = train[9L, ]) grid.arrange(nrow = 1L,   ggmid(bd1, \"waterfall\", theme = \"Tableau 10\", max.bars = 12L) +     theme(legend.position = \"bottom\") +     ggtitle(\"breakdown of prediction 1\"),   ggmid(bd9, \"waterfall\", theme = \"Tableau 10\", max.bars = 12L) +     theme(legend.position = \"bottom\") +     ggtitle(\"breakdown of prediction 9\") ) # visualize the ICE curves of the MID model ice <- mid.conditional(mid, \"lstat\", data = train) grid.arrange(   ggmid(ice, alpha = .1) +     ggtitle(\"ICE of lstat\"),   ggmid(ice, \"centered\", alpha = .1, var.color = dis > 3) +     ggtitle(\"c-ICE of lstat\"),   ggmid(ice, term = \"lstat:dis\", var.color = dis > 3, alpha = .1) +     ggtitle(\"ICE of interaction with dis\"),   ggmid(ice, term = \"lstat:age\", var.color = age, dots = FALSE) +     ggtitle(\"ICE of interaction with age\") )"},{"path":"https://ryo-asashi.github.io/midr/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Interpret Black-Box Models by Maximum Interpretation Decomposition","text":"[1] Iwasawa, H. & Matsumori, Y. (2025). [Forthcoming] [2] Asashiba, R., Kozuma, R. & Iwasawa, H. (2025). “Interpreting Black-Box Models Functional Decomposition R”. [Forthcoming] [3] Goldstein, ., Kapelner, ., Bleich, J., & Pitkin, E. (2015). “Peeking Inside Black Box: Visualizing Statistical Learning Plots Individual Conditional Expectation”. Journal Computational Graphical Statistics, 24(1), 44–65. https://doi.org/10.1080/10618600.2014.907095","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Color Themes for Graphics — color.theme","title":"Color Themes for Graphics — color.theme","text":"color.theme() returns object class \"color.theme\" provides two types color functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color Themes for Graphics — color.theme","text":"","code":"color.theme(   colors,   type = c(\"sequential\", \"qualitative\", \"diverging\"),   name = NULL,   ... )  # S3 method for class 'color.theme' plot(x, n = NULL, text = x$name, ...)  # S3 method for class 'color.theme' print(x, display = TRUE, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color Themes for Graphics — color.theme","text":"colors one following: color theme name \"Viridis\" optional suffix \"_r\" color themes reverse order (\"Viridis_r\"), character vector color names, palette function, ramp function used create color theme. type character string specifying type color theme: One \"sequential\", \"qualitative\" \"diverging\". name optional character string, specifying name color theme. ... optional arguments passed palette ramp functions. x \"color.theme\" object displayed. n integer. number colors. text character string displayed. display logical. TRUE, colors displayed plot area.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color Themes for Graphics — color.theme","text":"color.theme() returns \"color.theme\" object containing following components: ramp function takes numeric vector x values within [0, 1] returns color name vector. palette function takes integer n returns color name vector length n. type type color theme; \"sequential\", \"diverging\" \"qualitative\". name name color theme.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color Themes for Graphics — color.theme","text":"\"color.theme\" objects container two types color functions: palette(n) returns color name vector length n, ramp(x) returns color names values x within [0, 1]. color themes \"qualitative\" contain ramp() function.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/color.theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color Themes for Graphics — color.theme","text":"","code":"ct <- color.theme(\"Mako\") ct$palette(5L) #> [1] \"#070707\" \"#423460\" \"#007FA8\" \"#48C2B4\" \"#E0F7E1\" ct$ramp(seq.int(0, 1, 1/4)) #> [1] \"#060606\" \"#3E365E\" \"#007FA7\" \"#5BC1B7\" \"#DFF7E0\" ct <- color.theme(\"RdBu\") ct$palette(5L) #> [1] \"#66001F\" \"#E58366\" \"#F7F7F7\" \"#6DABD0\" \"#053060\" ct$ramp(seq.int(0, 1, 1/4)) #> [1] \"#66001F\" \"#E58366\" \"#F7F7F7\" \"#6DABD0\" \"#053060\" ct <- color.theme(\"Tableau 10\") ct$palette(10L) #>  [1] \"#4E79A7\" \"#F28E2B\" \"#E15759\" \"#76B7B2\" \"#59A14F\" \"#EDC948\" \"#B07AA1\" #>  [8] \"#FF9DA7\" \"#9C755F\" \"#BAB0AC\" pals <- c(\"midr\", \"grayscale\", \"bluescale\", hcl.pals(), palette.pals()) par(mfrow = c(5L, 2L)) for (pal in pals[1:10]) plot(color.theme(pal))  for (pal in pals[11:20]) plot(color.theme(pal))  for (pal in pals[21:30]) plot(color.theme(pal))  for (pal in pals[31:40]) plot(color.theme(pal))  for (pal in pals[41:50]) plot(color.theme(pal))  for (pal in pals[51:60]) plot(color.theme(pal))  for (pal in pals[61:70]) plot(color.theme(pal))  for (pal in pals[71:80]) plot(color.theme(pal))  for (pal in pals[81:90]) plot(color.theme(pal))  for (pal in pals[91:100]) plot(color.theme(pal))  for (pal in pals[101:110]) plot(color.theme(pal))  for (pal in pals[111:120]) plot(color.theme(pal))  for (pal in pals[121:130]) plot(color.theme(pal))  for (pal in pals[131:134]) plot(color.theme(pal)) par(mfrow = c(1L, 1L))"},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":null,"dir":"Reference","previous_headings":"","what":"Encoder for Qualitative Variables — factor.encoder","title":"Encoder for Qualitative Variables — factor.encoder","text":"factor.encoder() returns encoder qualitative variable.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encoder for Qualitative Variables — factor.encoder","text":"","code":"factor.encoder(   x,   k,   use.catchall = TRUE,   catchall = \"(others)\",   tag = \"x\",   frame = NULL,   weights = NULL )  factor.frame(levels, catchall = \"(others)\", tag = \"x\")"},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encoder for Qualitative Variables — factor.encoder","text":"x vector encoded qualitative variable. k integer specifying maximum number distinct levels. positive, unique values x used levels. use.catchall logical. TRUE, less frequent levels dropped replaced catchall level. catchall character string used catchall level. tag character string. name variable. frame \"factor.frame\" object character vector defines levels variable. weights optional. numeric vector sample weights value x. levels vector used levels variable.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encoder for Qualitative Variables — factor.encoder","text":"factor.encoder() returns list containing following components: frame object class \"factor.frame\". encode function encode new_x dummy matrix. n number encoding levels. type type encoding. factor.frame() returns \"factor.frame\" object containing encoding information.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encoder for Qualitative Variables — factor.encoder","text":"factor.encoder() extracts unique values (levels) vector x returns list containing encode() function convert vector dummy matrix using one-hot encoding. use.catchall TRUE number levels exceeds k, frequent k - 1 levels used values replaced catchall.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/factor.encoder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encoder for Qualitative Variables — factor.encoder","text":"","code":"data(iris, package = \"datasets\") enc <- factor.encoder(x = iris$Species, use.catchall = FALSE, tag = \"Species\") enc$frame #>      Species Species_level #> 1     setosa             1 #> 2 versicolor             2 #> 3  virginica             3 enc$encode(new_x = c(\"setosa\", \"virginica\", \"ensata\", NA, \"versicolor\")) #>      setosa versicolor virginica #> [1,]      1          0         0 #> [2,]      0          0         1 #> [3,]      0          0         0 #> [4,]      0          0         0 #> [5,]      0          1         0  frm <- factor.frame(c(\"setosa\", \"virginica\"), \"other iris\") enc <- factor.encoder(x = iris$Species, frame = frm) enc$encode(c(\"setosa\", \"virginica\", \"ensata\", NA, \"versicolor\")) #>      setosa virginica other iris #> [1,]      1         0          0 #> [2,]      0         1          0 #> [3,]      0         0          1 #> [4,]      0         0          1 #> [5,]      0         0          1  enc <- factor.encoder(x = iris$Species, frame = c(\"setosa\", \"versicolor\")) enc$encode(c(\"setosa\", \"virginica\", \"ensata\", NA, \"versicolor\")) #>      setosa versicolor #> [1,]      1          0 #> [2,]      0          0 #> [3,]      0          0 #> [4,]      0          0 #> [5,]      0          1"},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper Prediction Function — get.yhat","title":"Wrapper Prediction Function — get.yhat","text":"get.yhat() works proxy prediction function many classes fitted models.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper Prediction Function — get.yhat","text":"","code":"get.yhat(X.model, newdata, ...)  # Default S3 method get.yhat(X.model, newdata, ...)  # S3 method for class 'mid' get.yhat(X.model, newdata, ...)  # S3 method for class 'lm' get.yhat(X.model, newdata, ...)  # S3 method for class 'glm' get.yhat(X.model, newdata, ...)  # S3 method for class 'rpart' get.yhat(X.model, newdata, ...)  # S3 method for class 'randomForest' get.yhat(X.model, newdata, ...)  # S3 method for class 'ranger' get.yhat(X.model, newdata, ...)  # S3 method for class 'svm' get.yhat(X.model, newdata, ...)  # S3 method for class 'ksvm' get.yhat(X.model, newdata, ...)  # S3 method for class 'AccurateGLM' get.yhat(X.model, newdata, ...)  # S3 method for class 'glmnet' get.yhat(X.model, newdata, ...)  # S3 method for class 'model_fit' get.yhat(X.model, newdata, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper Prediction Function — get.yhat","text":"X.model fitted model object. newdata data.frame matrix. ... parameters passed prediction method model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper Prediction Function — get.yhat","text":"get.yhat() returns numeric vector model predictions newdata.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper Prediction Function — get.yhat","text":"get.yhat() wrapper prediction function many classes models. Although many predictive models method stats::predict(), structure type output methods uniform. get.yhat() designed always return simple numeric vector model predictions. design get.yhat() strongly influenced DALEX::yhat().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/get.yhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper Prediction Function — get.yhat","text":"","code":"data(trees, package = \"datasets\") model <- glm(Volume ~ ., trees, family = Gamma(log)) predict(model, trees, \"response\")[1:5] #>        1        2        3        4        5  #> 11.68832 11.23782 11.19185 16.63260 19.87816  get.yhat(model, trees)[1:5] #> [1] 11.68832 11.23782 11.19185 16.63260 19.87816"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID with ggplot2 Package — ggmid","title":"Plot MID with ggplot2 Package — ggmid","text":"\"mid\" objects, ggmid() visualizes MID component function using ggplot2 package.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID with ggplot2 Package — ggmid","text":"","code":"ggmid(object, ...)  # S3 method for class 'mid' ggmid(   object,   term,   type = c(\"effect\", \"data\", \"compound\"),   theme = NULL,   intercept = FALSE,   main.effects = FALSE,   data = NULL,   cells.count = c(100L, 100L),   limits = c(NA, NA),   ... )  # S3 method for class 'mid' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID with ggplot2 Package — ggmid","text":"object \"mid\" object visualized. ... optional parameters passed main layer. term character string specifying component function plotted. type character string. method plotting interaction effects. theme character string specifying color theme item can used define \"color.theme\" object. intercept logical. TRUE, intercept added MID values. main.effects logical. TRUE, main effects included interaction plot. data data frame plotted corresponding MID values. cells.count integer integer-valued vector length two, specifying number cells raster type interaction plot. limits NULL numeric vector length two specifying limits plotting scale. NAs replaced minimum /maximum MID values.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID with ggplot2 Package — ggmid","text":"ggmid.mid() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID with ggplot2 Package — ggmid","text":"S3 method ggmid() \"mid\" objects creates \"ggplot\" object visualizes MID component function. main layer drawn using geom_line() geom_path() main effect quantitative variable, geom_col() main effect qualitative variable, geom_raster() geom_rect() interaction effect. methods ggmid(), see help(ggmid.mid.importance), help(ggmid.mid.breakdown) help(ggmid.mid.conditional).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID with ggplot2 Package — ggmid","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used ggmid(mid, \"carat\")  ggmid(mid, \"clarity\")  ggmid(mid, \"carat:clarity\", main.effects = TRUE)  ggmid(mid, \"clarity:color\", type = \"data\", theme = \"Mako\", data = diamonds[idx, ])  ggmid(mid, \"carat:color\", type = \"compound\", data = diamonds[idx, ])"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Breakdown with ggplot2 Package — ggmid.mid.breakdown","title":"Plot MID Breakdown with ggplot2 Package — ggmid.mid.breakdown","text":"\"mid.breakdown\" objects, ggmid() visualizes breakdown prediction component functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Breakdown with ggplot2 Package — ggmid.mid.breakdown","text":"","code":"# S3 method for class 'mid.breakdown' ggmid(   object,   type = c(\"waterfall\", \"barplot\", \"dotchart\"),   theme = NULL,   terms = NULL,   max.bars = 15L,   width = NULL,   vline = TRUE,   catchall = \"others\",   format = c(\"%t=%v\", \"%t\"),   ... )  # S3 method for class 'mid.breakdown' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Breakdown with ggplot2 Package — ggmid.mid.breakdown","text":"object \"mid.breakdown\" object visualized. type character string specifying type plot. One \"waterfall\", \"barplot\" \"dotchart\". theme character string specifying color theme item can used define \"color.theme\" object. terms optional character vector specifying terms displayed. max.bars integer specifying maximum number bars plot. width numeric value specifying width bars. vline logical. TRUE, vertical line drawn zero intercept. catchall character string used catchall label. format character string character vector length two used format axis labels. \"t\" \"v\" immediately percent sign replaced corresponding term value. ... optional parameters passed main layer.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Breakdown with ggplot2 Package — ggmid.mid.breakdown","text":"ggmid.mid.breakdown() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Breakdown with ggplot2 Package — ggmid.mid.breakdown","text":"S3 method ggmid() \"mid.breakdown\" objects creates \"ggplot\" object visualizes breakdown single model prediction. main layer drawn using geom_col().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.breakdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Breakdown with ggplot2 Package — ggmid.mid.breakdown","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used mbd <- mid.breakdown(mid, diamonds[1L, ]) ggmid(mbd, type = \"waterfall\")  ggmid(mbd, type = \"waterfall\", theme = \"midr\")  ggmid(mbd, type = \"barplot\", theme = \"Set 1\")  ggmid(mbd, type = \"dotchart\", size = 3, theme = \"Cividis\")"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"\"mid.conditional\" objects, ggmid() visualizes ICE curves MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"","code":"# S3 method for class 'mid.conditional' ggmid(   object,   type = c(\"iceplot\", \"centered\"),   theme = NULL,   term = NULL,   var.alpha = NULL,   var.color = NULL,   var.linetype = NULL,   var.linewidth = NULL,   dots = TRUE,   sample = NULL,   ... )  # S3 method for class 'mid.conditional' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"object \"mid.conditional\" object visualized. type character string specifying type plot. One \"iceplot\" \"centered\". \"centered\", ICE values observation set zero leftmost point varriable. theme character string specifying color theme item can used define \"color.theme\" object. term optional character string specifying interaction term. passed, ICE curve specified term plotted. var.alpha name variable expression used set alpha. var.color name variable expression used set colour. var.linetype name variable expression used set linetype. var.linewidth name variable expression used set linewidth. dots logical. TRUE, points representing predictions observation plotted. sample optional vector specifying names observations plotted. ... optional parameters passed main layer.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"ggmid.mid.conditional() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"S3 method ggmid() \"mid.conditional\" objects creates \"ggplot\" object visualizes ICE curves fitted MID model using geom_line().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ICE of MID Model with ggplot2 Package — ggmid.mid.conditional","text":"","code":"data(airquality, package = \"datasets\") library(midr) mid <- interpret(Ozone ~ .^2, airquality, lambda = 0.1) #> 'model' is not passed: the response variable in the data is used ice <- mid.conditional(mid, \"Temp\", data = airquality) ggmid(ice, var.color = \"Wind\")  ggmid(ice, type = \"centered\", theme = \"Purple-Yellow\",       var.color = factor(Month), var.linetype = Wind > 10)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"\"mid.importance\" objects, ggmid() visualizes importance MID component functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"","code":"# S3 method for class 'mid.importance' ggmid(   object,   type = c(\"barplot\", \"dotchart\", \"heatmap\", \"boxplot\"),   theme = NULL,   max.bars = 30L,   ... )  # S3 method for class 'mid.importance' autoplot(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"object \"mid.importance\" object visualized. type character string specifying type plot. One \"barplot\", \"heatmap\", \"dotchart\" \"boxplot\". theme character string specifying color theme item can used define \"color.theme\" object. max.bars integer specifying maximum number bars barplot, boxplot dotchart. ... optional parameters passed main layer.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"ggmid.mid.importance() returns \"ggplot\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"S3 method ggmid() \"mid.importance\" objects creates \"ggplot\" object visualizes term importance fitted MID model. main layer drawn using geom_col(), geom_tile(), geom_point() geom_boxplot().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/ggmid.mid.importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Importance with ggplot2 Package — ggmid.mid.importance","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used imp <- mid.importance(mid) ggmid(imp, theme = \"Tableau 10\")  ggmid(imp, type = \"dotchart\", theme = \"Okabe-Ito\", size = 3)  ggmid(imp, type = \"heatmap\", theme = \"Blues\")  ggmid(imp, type = \"boxplot\", theme = \"Accent\")"},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit MID Models — interpret","title":"Fit MID Models — interpret","text":"interpret() used fit MID model specifically interpretable surrogate black-box ML models. fitted MID model consists set component functions, two variables.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit MID Models — interpret","text":"","code":"interpret(object, ...)  # Default S3 method interpret(   object,   x,   y = NULL,   weights = NULL,   pred.fun = get.yhat,   link = NULL,   k = c(NA, NA),   type = c(1L, 1L),   frames = list(),   interaction = FALSE,   terms = NULL,   singular.ok = FALSE,   mode = 1L,   method = NULL,   lambda = 0,   kappa = 1e+06,   na.action = getOption(\"na.action\"),   encoding.digits = 3L,   use.catchall = FALSE,   catchall = \"(others)\",   max.ncol = 3000L,   nil = 1e-07,   tol = 1e-07,   pred.args = list(),   ... )  # S3 method for class 'formula' interpret(   formula,   data = NULL,   model = NULL,   pred.fun = get.yhat,   weights = NULL,   subset = NULL,   na.action = getOption(\"na.action\"),   mode = 1L,   drop.unused.levels = FALSE,   pred.args = list(),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit MID Models — interpret","text":"object fitted model object interpreted. ... interpret.default(), optional arguments including special aliases ok singular.ok ie interaction. interpret.formula(), optional parameters passed interpret.default(). x matrix data.frame predictor variables used fitting process. response variable included. y optional numeric vector model predictions response variable. weights numeric vector sample weights observation x. pred.fun function obtain predictions fitted model, first argument fitted model second argument new data. default get.yhat(). link character string specifying link function: one \"logit\", \"probit\", \"cauchit\", \"cloglog\", \"identity\", \"log\", \"sqrt\", \"1/mu^2\", \"inverse\", object containing two functions linkfun() linkinv(). See help(make.link). k integer integer-valued vector length two. maximum number sample points variable. vector passed, k[1L] used main effects k[2L] used interactions. integer passed, k used main effects sqrt(k) used interactions. positive, unique values used sample points. type integer integer-valued vector length two. type encoding. effects quantitative variables modeled piecewise linear functions type 1, step functions type 0. vector passed, type[1L] used main effects type[2L] used interactions. frames named list encoding frames (\"numeric.frame\" \"factor.frame\" objects). encoding frames used encode variable corresponding name. name begins \"|\" \":\", encoding frame used main effects interactions, respectively. interaction logical. TRUE terms formula supplied, interactions pair variables modeled calculated. terms character vector term labels specifying set component functions modeled. passed, terms includes main effects, interactions interaction TRUE. singular.ok logical. FALSE, singular fit error. mode integer specifying method calculation. mode 1, centralization constraints treated penalties least squares problem. mode 2, constraints used reduce number free parameters. method integer specifying method used solve least squares problem. non-negative value passed RcppEigen::fastLmPure(). negative, stats::lm.fit() used. lambda strength smoothing penalty. default 0. kappa strength penalty centralization. Used mode 1. default 1e+6. na.action function character string specifying method NA handling. default \"na.omit\". encoding.digits integer. rounding digits encoding numeric variables. Used type 1. use.catchall logical. TRUE, less frequent levels qualitative variables dropped replaced catchall level. catchall character string specifying catchall level. max.ncol integer. maximum number columns design matrix. nil threshold intercept coefficients treated zero. default 1e-7. tol tolerance singular value decomposition. default 1e-7. pred.args optional parameters fitted model new data passed pred.fun(). formula symbolic description MID model fit. data data.frame, list environment containing variables formula. found data, variables taken environment(formula). model fitted model object interpreted. subset optional vector specifying subset observations used fitting process. drop.unused.levels logical. TRUE, unused levels factors dropped.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit MID Models — interpret","text":"interpret() returns \"mid\" object following components: weights numeric vector sample weights. call matched call. terms term labels. link \"link-glm\" object containing link function. intercept intercept. encoders list variable encoders. main.effects list data frames representing main effects. interacions list data frames representing interactions. uninterpreted.rate ratio sum squared error target model predictions fitted MID values, sum squared deviations target model predictions. fitted.matrix matrix showing breakdown predictions effects component functions. linear.predictors numeric vector linear predictors. fitted.values numeric vector fitted values. residuals numeric vector working residuals. na.action information special handlings NAs.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit MID Models — interpret","text":"prediction function fitted MID model \\(\\hat{f}(X)\\) following structure: $$\\hat{f}(X) = f_{\\phi} + \\Sigma_{j\\ \\D}\\ f_{j}(X_j) + \\Sigma_{j,k\\ \\D}\\ f_{j,k}(X_j, X_k)$$ , \\(f_\\phi\\) intercept, \\(f_{j}(X_j)\\) main effect variable \\(j\\), \\(f_{j,k}(X_j, X_k)\\) second-order interaction two variables \\(j\\) \\(k\\). effects quantitative variables modeled piecewise functions degree 1 (piecewise linear function) 0 (step function). MID values sample point determined using constrained least squares method. loss function \\(E[(\\hat{Y}-\\hat{f}(X))^2]\\), \\(\\hat{Y}\\) model prediction response variable, constraints \\(E[f_j(X_j)] = 0\\) variable \\(j\\) \\(E[f_{j,k}(X_j, X_k)]=E[f_{j,k}(X_j, X_k)|X_j]=E[f_{j,k}(X_j, X_k)|X_k]=0\\) pair variables \\((j,k)\\).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/interpret.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit MID Models — interpret","text":"","code":"# fit a MID model as a surrogate model data(cars, package = \"datasets\") model <- lm(dist ~ I(speed^2) + speed, cars) mid <- interpret(dist ~ speed, cars, model) plot(mid, \"speed\", intercept = TRUE) points(cars)   # customize the flexibility of a MID model data(Nile, package = \"datasets\") mid <- interpret(x = 1L:100L, y = Nile, k = 100L) plot(mid, \"x\", intercept = TRUE, ylim = c(600L, 1300L)) points(x = 1L:100L, y = Nile)  # reduce the number of knots by setting the 'k' parameter mid <- interpret(x = 1L:100L, y = Nile, k = 10L) plot(mid, \"x\", intercept = TRUE, ylim = c(600L, 1300L)) points(x = 1L:100L, y = Nile)  # perform a pseudo smoothing by setting the 'lambda' parameter mid <- interpret(x = 1L:100L, y = Nile, k = 100L, lambda = 100L) plot(mid, \"x\", intercept = TRUE, ylim = c(600L, 1300L)) points(x = 1L:100L, y = Nile)   # fit a MID model as a predictive model data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, na.omit(airquality), lambda = .4) #> 'model' is not passed: the response variable in the data is used plot(mid, \"Wind\")  plot(mid, \"Temp\")  plot(mid, \"Wind:Temp\", theme = \"RdBu\")  plot(mid, \"Wind:Temp\", main.effects = TRUE)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MID Breakdown — mid.breakdown","title":"Calculate MID Breakdown — mid.breakdown","text":"mid.breakdown() calculates MID breakdown prediction MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MID Breakdown — mid.breakdown","text":"","code":"mid.breakdown(   object,   data,   sort = TRUE,   digits = 6L,   format = c(\"%s\", \"%s, %s\") )  # S3 method for class 'mid.breakdown' print(x, digits = max(3L, getOption(\"digits\") - 2L), ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MID Breakdown — mid.breakdown","text":"object \"mid\" object. data data frame containing observations used calculate MID importance. NULL, fitted.matrix MID model used. data one observation, output special class \"mid.breakdown\". sort logical. TRUE, output data frame sorted MID . digits integer specifying minimum number significant digits. format character vector length two used formats sprintf() function value pair values predictor variables. x \"mid.importance\" object printed. ... additional parameters passed print.data.frame() print importance component functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MID Breakdown — mid.breakdown","text":"mid.breakdown() returns object class \"mid.breakdown\" containing following components. breakdown data frame containing breakdown prediction. data data frame containing values predictor variables used prediction. intercept intercept MID model. prediction predicted value.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate MID Breakdown — mid.breakdown","text":"mid.breakdown() returns object class \"mid.breakdown\".","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.breakdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate MID Breakdown — mid.breakdown","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, airquality, lambda = 1) #> 'model' is not passed: the response variable in the data is used mbd <- mid.breakdown(mid, airquality[1L, ]) mbd #>  #> MID Breakdown of a Prediction #>  #> Intercept: 42.099 #>  #> Prediction: 39.739 #>  #> Breakdown of Effects: #>             term    value         mid degree #> 1           Temp       67 -1.5043e+01      1 #> 2            Day        1  4.9770e+00      1 #> 3          Month        5  3.7575e+00      1 #> 4     Wind:Month   7.4, 5  2.0404e+00      2 #> 5       Temp:Day    67, 1  1.3885e+00      2 #> 6  Solar.R:Month   190, 5  1.3124e+00      2 #> 7           Wind      7.4  1.0227e+00      1 #> 8        Solar.R      190 -9.4228e-01      1 #> 9      Wind:Temp  7.4, 67 -6.2914e-01      2 #> 10  Solar.R:Temp  190, 67 -5.6533e-01      2 #> 11     Month:Day     5, 1  5.0500e-01      2 #> 12   Solar.R:Day   190, 1 -2.4755e-01      2 #> 13      Wind:Day   7.4, 1  4.2771e-02      2 #> 14    Temp:Month    67, 5  2.0660e-02      2 #> 15  Solar.R:Wind 190, 7.4 -3.4803e-04      2"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ICE of MID Models — mid.conditional","title":"Calculate ICE of MID Models — mid.conditional","text":"mid.conditional() creates object draw ICE curves MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ICE of MID Models — mid.conditional","text":"","code":"mid.conditional(   object,   variable,   data,   keep.effects = TRUE,   n.samples = 100L,   max.nrow = 100000L,   type = c(\"response\", \"link\") )  # S3 method for class 'mid.conditional' print(x, digits = max(3L, getOption(\"digits\") - 2L), ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ICE of MID Models — mid.conditional","text":"object \"mid\" object. variable character string expression specifying variable ICE calculation. data data frame containing observations ICE values calculated. keep.effects logical. TRUE, effects component functions stored output object. n.samples integer. number sample points calculation. max.nrow integer specifying maximum number rows output data frames. type type prediction required. default \"response\". \"link\" possible MID model uses link function. x \"mid.conditional\" object printed. digits integer specifying minimum number significant digits printed. ... additional parameters passed print.default() print sample point vector.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ICE of MID Models — mid.conditional","text":"mid.conditional() returns object class \"mid.conditional\" following components: terms character vector relevant terms. observed data frame actual observations corresponding predictions. conditional data frame hypothetical observations corresponding predictions. values sample points variable.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate ICE of MID Models — mid.conditional","text":"mid.conditional() obtains predictions hypothetical observations MID model returns \"mid.conditional\" object. graphing functions ggmid() plot() can used generate ICE curve plots.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate ICE of MID Models — mid.conditional","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, airquality, lambda = 1) #> 'model' is not passed: the response variable in the data is used mc <- mid.conditional(mid, \"Wind\", airquality) mc #>  #> Individual Conditional Expectation for 153 Observations #>  #> Variable: Wind #>  #> Sample Points: #>   [1]  2.3000  2.4859  2.6717  2.8576  3.0434  3.2293  3.4152  3.6010  3.7869 #>  [10]  3.9727  4.1586  4.3444  4.5303  4.7162  4.9020  5.0879  5.2737  5.4596 #>  [19]  5.6455  5.8313  6.0172  6.2030  6.3889  6.5747  6.7606  6.9465  7.1323 #>  [28]  7.3182  7.5040  7.6899  7.8758  8.0616  8.2475  8.4333  8.6192  8.8051 #>  [37]  8.9909  9.1768  9.3626  9.5485  9.7343  9.9202 10.1061 10.2919 10.4778 #>  [46] 10.6636 10.8495 11.0354 11.2212 11.4071 11.5929 11.7788 11.9646 12.1505 #>  [55] 12.3364 12.5222 12.7081 12.8939 13.0798 13.2657 13.4515 13.6374 13.8232 #>  [64] 14.0091 14.1949 14.3808 14.5667 14.7525 14.9384 15.1242 15.3101 15.4960 #>  [73] 15.6818 15.8677 16.0535 16.2394 16.4253 16.6111 16.7970 16.9828 17.1687 #>  [82] 17.3545 17.5404 17.7263 17.9121 18.0980 18.2838 18.4697 18.6556 18.8414 #>  [91] 19.0273 19.2131 19.3990 19.5848 19.7707 19.9566 20.1424 20.3283 20.5141 #> [100] 20.7000"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Components from MID Models — mid.extract","title":"Extract Components from MID Models — mid.extract","text":"mid.extract() returns component MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Components from MID Models — mid.extract","text":"","code":"mid.extract(object, component, ...)  mid.encoding.scheme(object, ...)  mid.frames(object, ...)  mid.ur(object, ...)  mid.terms(   object,   main.effect = TRUE,   interaction = TRUE,   require = NULL,   remove = NULL,   ... )  # S3 method for class 'mid' terms(x, ...)  # S3 method for class 'mid.importance' terms(x, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Components from MID Models — mid.extract","text":"object \"mid\" object. component literal character string name. name component extract, \"frames\", \"encoding.scheme\" \"uninterpreted.rate\". ... optional parameters passed function used extract component. main.effect logical. FALSE, main effect terms excluded. interaction logical. FALSE, interaction terms excluded. require character vector variable names. terms related specified names excluded. remove character vector variable names. terms related least one specified names excluded. x \"mid\" \"mid.importance\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Components from MID Models — mid.extract","text":"mid.extract() returns component extracted object, mid.encoding.scheme() returns data frame containing information encoding schemes, mid.frames() returns list encoding frames, mid.terms() returns character vector term labels, mid.ur() returns uninterpreted rate MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Components from MID Models — mid.extract","text":"","code":"data(trees, package = \"datasets\") mid <- interpret(Volume ~ .^2, trees, k = 10) #> 'model' is not passed: the response variable in the data is used mid.extract(mid, encoding.scheme) #>        main.effect interaction #> Girth   linear(10)   linear(4) #> Height  linear(10)   linear(4) mid.extract(mid, ur) #> [1] 0.0002371872 mid.extract(mid, frames) #> $`|Girth` #>    Girth Girth_min Girth_max #> 1    8.3      8.30      9.40 #> 2   10.5      9.40     10.75 #> 3   11.0     10.75     11.15 #> 4   11.3     11.15     11.50 #> 5   11.7     11.50     12.50 #> 6   13.3     12.50     13.65 #> 7   14.0     13.65     15.15 #> 8   16.3     15.15     17.10 #> 9   17.9     17.10     19.25 #> 10  20.6     19.25     20.60 #>  #> $`:Girth` #>   Girth Girth_min Girth_max #> 1   8.3      8.30      9.80 #> 2  11.3      9.80     12.65 #> 3  14.0     12.65     17.30 #> 4  20.6     17.30     20.60 #>  #> $`|Height` #>    Height Height_min Height_max #> 1      63       63.0       64.5 #> 2      66       64.5       68.5 #> 3      71       68.5       72.5 #> 4      74       72.5       74.5 #> 5      75       74.5       76.5 #> 6      78       76.5       79.0 #> 7      80       79.0       80.5 #> 8      81       80.5       82.0 #> 9      83       82.0       85.0 #> 10     87       85.0       87.0 #>  #> $`:Height` #>   Height Height_min Height_max #> 1     63       63.0       68.5 #> 2     74       68.5       77.0 #> 3     80       77.0       83.5 #> 4     87       83.5       87.0 #>  mid.extract(mid, Girth) #>    Girth Girth_min Girth_max    density         mid #> 1    8.3      8.30      9.40 0.08506452  -21.003604 #> 2   10.5      9.40     10.75 0.07622581   -6.108702 #> 3   11.0     10.75     11.15 0.12903226    1.782576 #> 4   11.3     11.15     11.50 0.11290323    4.368677 #> 5   11.7     11.50     12.50 0.09070968    2.595397 #> 6   13.3     12.50     13.65 0.10977419  -18.178493 #> 7   14.0     13.65     15.15 0.13261290   -5.837210 #> 8   16.3     15.15     17.10 0.09029032   31.919879 #> 9   17.9     17.10     19.25 0.13874194   42.242478 #> 10  20.6     19.25     20.60 0.03464516 -135.072647 mid.extract(mid, intercept) #> [1] 30.17097"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MID Importance — mid.importance","title":"Calculate MID Importance — mid.importance","text":"mid.importance() calculates MID importance fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MID Importance — mid.importance","text":"","code":"mid.importance(object, data = NULL, weights = NULL, sort = TRUE, measure = 1L)  # S3 method for class 'mid.importance' print(x, digits = max(3L, getOption(\"digits\") - 2L), ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MID Importance — mid.importance","text":"object \"mid\" object. data data frame containing observations used calculate MID importance. NULL, fitted.matrix MID model used. data one observation, output special class \"mid.breakdown\". weights optional numeric vector sample weights. sort logical. TRUE, output data frame sorted MID importance. measure integer specifying measure MID importance. Possible alternatives 1 mean absolute effect, 2 root mean square effect, 3 median absolute effect. x \"mid.importance\" object printed. digits integer specifying minimum number significant digits printed. ... additional parameters passed print.data.frame() print importance component functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MID Importance — mid.importance","text":"mid.importance() returns object class \"mid.importance\" containing following components. importance data frame calculated importances. predictions matrix fitted predicted MID values. measure type importance measure.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate MID Importance — mid.importance","text":"mid.importance() returns object class \"mid.importance\". MID importance defined component function MID model mean absolute effect given data.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate MID Importance — mid.importance","text":"","code":"data(airquality, package = \"datasets\") mid <- interpret(Ozone ~ .^2, airquality, lambda = 1) #> 'model' is not passed: the response variable in the data is used imp <- mid.importance(mid) imp #>  #> MID Importance based on 111 Observations #>  #> Measure: Mean Absolute Deviation #>  #> Importance: #>             term importance degree #> 1           Temp   13.94096      1 #> 2           Wind   10.50540      1 #> 3        Solar.R    5.57458      1 #> 4            Day    4.39277      1 #> 5          Month    2.27995      1 #> 6   Solar.R:Wind    0.44950      2 #> 7  Solar.R:Month    0.37623      2 #> 8       Temp:Day    0.37148      2 #> 9     Wind:Month    0.36905      2 #> 10      Wind:Day    0.36547      2 #> 11     Month:Day    0.32260      2 #> 12     Wind:Temp    0.28060      2 #> 13   Solar.R:Day    0.26646      2 #> 14  Solar.R:Temp    0.23464      2 #> 15    Temp:Month    0.12076      2"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Multiple MID Component Functions — mid.plots","title":"Plot Multiple MID Component Functions — mid.plots","text":"mid.plots() applies ggmid() plot() component functions \"mid\" object.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Multiple MID Component Functions — mid.plots","text":"","code":"mid.plots(   object,   terms = mid.terms(object, interaction = FALSE),   limits = c(NA, NA),   intercept = FALSE,   main.effects = FALSE,   max.plots = NULL,   engine = c(\"ggplot2\", \"graphics\"),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Multiple MID Component Functions — mid.plots","text":"object \"mid\" object. terms character vector. names terms visualized. limits NULL numeric vector length two specifying limits plotting scale. NAs replaced minimum /maximum MID values. intercept logical. TRUE, intercept added MID values plotting scale shifted. main.effects logical. TRUE, main effects included interaction plot. max.plots integer specifying number maximum number plots. engine character string. One \"ggplot2\" \"graphics\". ... optional parameters passed ggmid() plot().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Multiple MID Component Functions — mid.plots","text":"engine \"ggplot2\", mid.plots() returns list \"ggplot\" objects. Otherwise mid.plots() produces plots returns NULL.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/mid.plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Multiple MID Component Functions — mid.plots","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4L) mid <- interpret(price ~ (carat + cut + color + clarity) ^ 2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used mid.plots(mid, c(\"carat\", \"color\", \"carat:color\", \"clarity:color\"), limits = NULL) #> $carat  #>  #> $color  #>  #> $`carat:color`  #>  #> $`clarity:color`  #>"},{"path":"https://ryo-asashi.github.io/midr/reference/midr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"midr: Interpret Black-Box Models by Maximum Interpretation Decomposition — midr-package","title":"midr: Interpret Black-Box Models by Maximum Interpretation Decomposition — midr-package","text":"midr designed provide model-agnostic method interpreting explaining black-box machine learning models creating globally interpretable surrogate target model using functional decomposition technique called Maximum Interpretation Decomposition (MID). theoretical details MID, see Iwasawa & Matsumori (2025) <d>[Forthcoming], technical details package, see Asashiba et al. (2025) [Forthcoming].","code":""},{"path":[]},{"path":"https://ryo-asashi.github.io/midr/reference/midr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"midr: Interpret Black-Box Models by Maximum Interpretation Decomposition — midr-package","text":"Maintainer: Ryoichi Asasihba ryoichi.asashiba@gmail.com Authors: Hirokazu Iwasawa contributors: Reiji Kozuma [contributor]","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":null,"dir":"Reference","previous_headings":"","what":"Encoder for Quantitative Variables — numeric.encoder","title":"Encoder for Quantitative Variables — numeric.encoder","text":"numeric.encoder() returns encoder quantitative variable.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encoder for Quantitative Variables — numeric.encoder","text":"","code":"numeric.encoder(   x,   k,   type = 1L,   encoding.digits = NULL,   tag = \"x\",   frame = NULL,   weights = NULL )  numeric.frame(   reps = NULL,   breaks = NULL,   type = NULL,   encoding.digits = NULL,   tag = \"x\" )  # S3 method for class 'encoder' print(x, digits = NULL, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encoder for Quantitative Variables — numeric.encoder","text":"x numeric vector encoded. k integer specifying coarseness encoding. positive, unique values x used sample points. type integer specifying encoding method. 1, values encoded [0, 1] scale based linear interpolation knots. 0, values encoded 0 1 using ont-hot encoding intervals. encoding.digits integer specifying rounding digits encoding case type 1. tag character string. name variable. frame \"numeric.frame\" object numeric vector defines sample points binning. weights optional. numeric vector sample weights value x. reps numeric vector used representative values (knots). breaks numeric vector used binning breaks. digits minimum number significant digits used. ... used.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encoder for Quantitative Variables — numeric.encoder","text":"numeric.encoder() returns list containing following components: frame object class \"numeric.frame\". encode function encode new_x dummy matrix. n number encoding levels. type type encoding, \"linear\" \"constant\". numeric.frame() returns \"numeric.frame\" object containing encoding information.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encoder for Quantitative Variables — numeric.encoder","text":"numeric.encoder() selects sample points variable x returns list containing encode() function convert vector dummy matrix. type 1, k considered maximum number knots, values two knots encoded two decimals, reflecting relative position knots. type 0, k considered maximum number intervals, values converted using one-hot encoding intervals.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/numeric.encoder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encoder for Quantitative Variables — numeric.encoder","text":"","code":"data(iris, package = \"datasets\") enc <- numeric.encoder(x = iris$Sepal.Length, k = 5L, tag = \"Sepal.Length\") enc$frame #>   Sepal.Length Sepal.Length_min Sepal.Length_max #> 1          4.3             4.30             4.70 #> 2          5.1             4.70             5.45 #> 3          5.8             5.45             6.10 #> 4          6.4             6.10             7.15 #> 5          7.9             7.15             7.90 enc$encode(new_x = c(4:8, NA)) #>        4.3   5.1       5.8       6.4 7.9 #> [1,] 1.000 0.000 0.0000000 0.0000000 0.0 #> [2,] 0.125 0.875 0.0000000 0.0000000 0.0 #> [3,] 0.000 0.000 0.6666667 0.3333333 0.0 #> [4,] 0.000 0.000 0.0000000 0.6000000 0.4 #> [5,] 0.000 0.000 0.0000000 0.0000000 1.0 #> [6,] 0.000 0.000 0.0000000 0.0000000 0.0  frm <- numeric.frame(breaks = seq(3, 9, 2), type = 0L) enc <- numeric.encoder(x = iris$Sepal.Length, frame = frm) enc$encode(new_x = c(4:8, NA)) #>      [-Inf, 5) [5, 7) [7, Inf) #> [1,]         1      0        0 #> [2,]         0      1        0 #> [3,]         0      1        0 #> [4,]         0      0        1 #> [5,]         0      0        1 #> [6,]         0      0        0  enc <- numeric.encoder(x = iris$Sepal.Length, frame = seq(3, 9, 2)) enc$encode(new_x = c(4:8, NA)) #>        3   5   7   9 #> [1,] 0.5 0.5 0.0 0.0 #> [2,] 0.0 1.0 0.0 0.0 #> [3,] 0.0 0.5 0.5 0.0 #> [4,] 0.0 0.0 1.0 0.0 #> [5,] 0.0 0.0 0.5 0.5 #> [6,] 0.0 0.0 0.0 0.0"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Breakdown with graphics Package — plot.mid.breakdown","title":"Plot MID Breakdown with graphics Package — plot.mid.breakdown","text":"\"mid.breakdown\" objects, plot() visualizes breakdown prediction component functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Breakdown with graphics Package — plot.mid.breakdown","text":"","code":"# S3 method for class 'mid.breakdown' plot(   x,   type = c(\"waterfall\", \"barplot\", \"dotchart\"),   theme = NULL,   terms = NULL,   max.bars = 15L,   width = NULL,   vline = TRUE,   catchall = \"others\",   format = c(\"%t=%v\", \"%t\"),   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Breakdown with graphics Package — plot.mid.breakdown","text":"x \"mid.breakdown\" object visualized. type character string specifying type plot. One \"barplot\" \"dotchart\". theme character string specifying color theme item can used define \"color.theme\" object. terms optional character vector specifying terms displayed. max.bars integer specifying maximum number bars barplot, boxplot dotchart. width numeric value specifying width bars. vline logical. TRUE, vertical line drawn zero intercept. catchall character string used catchall label. format character string character vector length two used format axis labels. \"t\" \"v\" immediately percent sign replaced corresponding term value. ... optional parameters passed graphing function. Possible arguments \"col\", \"fill\", \"pch\", \"cex\", \"lty\", \"lwd\" aliases .","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Breakdown with graphics Package — plot.mid.breakdown","text":"plot.mid.breakdown() produces plot returns NULL.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Breakdown with graphics Package — plot.mid.breakdown","text":"S3 method plot() \"mid.breakdown\" objects creates visualization MID breakdown using functions graphics package.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.breakdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Breakdown with graphics Package — plot.mid.breakdown","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used mbd <- mid.breakdown(mid, diamonds[1L, ]) plot(mbd, type = \"waterfall\")  plot(mbd, type = \"waterfall\", theme = \"midr\")  plot(mbd, type = \"barplot\", theme = \"Set 1\")  plot(mbd, type = \"dotchart\", theme = \"Cividis\")"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ICE of MID Model with graphics Package — plot.mid.conditional","title":"Plot ICE of MID Model with graphics Package — plot.mid.conditional","text":"\"mid.conditional\" objects, plot() visualizes ICE curves MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ICE of MID Model with graphics Package — plot.mid.conditional","text":"","code":"# S3 method for class 'mid.conditional' plot(   x,   type = c(\"iceplot\", \"centered\"),   theme = NULL,   term = NULL,   var.alpha = NULL,   var.color = NULL,   var.linetype = NULL,   var.linewidth = NULL,   dots = TRUE,   sample = NULL,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ICE of MID Model with graphics Package — plot.mid.conditional","text":"x \"mid.conditional\" object visualized. type character string specifying type plot. One \"iceplot\" \"centered\". \"centered\", ICE values observation set zero leftmost point varriable. theme character string specifying color theme item can used define \"color.theme\" object. term optional character string specifying interaction term. passed, ICE specified term plotted. var.alpha name variable expression used set alpha. var.color name variable expression used set colour. var.linetype name variable expression used set linetype. var.linewidth name variable expression used set linewidth. dots logical. TRUE, points representing predictions observation plotted. sample optional vector specifying names observations plotted. ... optional parameters passed graphing function. Possible arguments \"col\", \"fill\", \"pch\", \"cex\", \"lty\", \"lwd\" aliases .","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ICE of MID Model with graphics Package — plot.mid.conditional","text":"plot.mid.conditional() produces ICE plot invisibly returns ICE matrix used plot.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot ICE of MID Model with graphics Package — plot.mid.conditional","text":"S3 method plot() \"mid.conditional\" objects creates visualization ICE curves fitted MID model using functions graphics package.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.conditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ICE of MID Model with graphics Package — plot.mid.conditional","text":"","code":"data(airquality, package = \"datasets\") library(midr) mid <- interpret(Ozone ~ .^2, airquality, lambda = 0.1) #> 'model' is not passed: the response variable in the data is used ice <- mid.conditional(mid, \"Temp\", data = airquality) plot(ice, var.color = \"Wind\")  plot(ice, type = \"centered\", theme = \"Purple-Yellow\",      var.color = factor(Month), var.linetype = Wind > 10)"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID with graphics Package — plot.mid","title":"Plot MID with graphics Package — plot.mid","text":"\"mid\" objects, plot() visualizes MID component function.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID with graphics Package — plot.mid","text":"","code":"# S3 method for class 'mid' plot(   x,   term,   type = c(\"effect\", \"data\", \"compound\"),   theme = NULL,   intercept = FALSE,   main.effects = FALSE,   data = NULL,   cells.count = c(100L, 100L),   limits = NULL,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID with graphics Package — plot.mid","text":"x \"mid\" object visualized. term character string specifying component function plotted. type character string. theme character vector color names character string specifying color theme. intercept logical. TRUE, intercept added MID values plotting scale shifted. main.effects logical. TRUE, main effects included interaction plot. data data frame plotted. cells.count integer integer-valued vector length two specifying number cells raster type interaction plot. limits NULL numeric vector length two specifying limits plotting scale. NAs replaced minimum /maximum MID values. ... optional parameters passed graphing function. Possible arguments \"col\", \"fill\", \"pch\", \"cex\", \"lty\", \"lwd\" aliases .","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID with graphics Package — plot.mid","text":"plot.mid() produces line plot bar plot main effect filled contour plot interaction returns NULL.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID with graphics Package — plot.mid","text":"S3 method plot() \"mid\" objects creates visualization MID component function using functions graphics package.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID with graphics Package — plot.mid","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used plot(mid, \"carat\")  plot(mid, \"clarity\")  plot(mid, \"carat:clarity\", main.effects = TRUE)  plot(mid, \"clarity:color\", type = \"data\", theme = \"Mako\", data = diamonds[idx, ])  plot(mid, \"carat:color\", type = \"compound\", data = diamonds[idx, ])"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MID Importance with graphics Package — plot.mid.importance","title":"Plot MID Importance with graphics Package — plot.mid.importance","text":"\"mid.importance\" objects, plot() visualizes importance MID component functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MID Importance with graphics Package — plot.mid.importance","text":"","code":"# S3 method for class 'mid.importance' plot(   x,   type = c(\"barplot\", \"dotchart\", \"heatmap\", \"boxplot\"),   theme = NULL,   max.bars = 30L,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MID Importance with graphics Package — plot.mid.importance","text":"x \"mid.importance\" object visualized. type character string specifying type plot. One \"barplot\", \"heatmap\", \"dotchart\" \"boxplot\". theme character string specifying color theme item can used define \"color.theme\" object. max.bars integer specifying maximum number bars barplot, boxplot dotchart. ... optional parameters passed graphing function. Possible arguments \"col\", \"fill\", \"pch\", \"cex\", \"lty\", \"lwd\" aliases .","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MID Importance with graphics Package — plot.mid.importance","text":"plot.mid.importance() produces plot returns NULL.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MID Importance with graphics Package — plot.mid.importance","text":"S3 method plot() \"mid.importance\" objects creates visualization MID importance using functions graphics package.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/plot.mid.importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MID Importance with graphics Package — plot.mid.importance","text":"","code":"data(diamonds, package = \"ggplot2\") set.seed(42) idx <- sample(nrow(diamonds), 1e4) mid <- interpret(price ~ (carat + cut + color + clarity)^2, diamonds[idx, ]) #> 'model' is not passed: the response variable in the data is used imp <- mid.importance(mid) plot(imp, theme = \"Tableau 10\")  plot(imp, type = \"dotchart\", theme = \"Okabe-Ito\")  plot(imp, type = \"heatmap\", theme = \"Blues\")  plot(imp, type = \"boxplot\", theme = \"Accent\")"},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Method for fitted MID Models — predict.mid","title":"Predict Method for fitted MID Models — predict.mid","text":"method predict() \"mid\" objects obtains predictions fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Method for fitted MID Models — predict.mid","text":"","code":"# S3 method for class 'mid' predict(   object,   newdata = NULL,   na.action = \"na.pass\",   type = c(\"response\", \"link\", \"terms\"),   terms = object$terms,   ... )  mid.f(object, term, x, y = NULL)"},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Method for fitted MID Models — predict.mid","text":"object \"mid\" object used make predictions. newdata data frame new observations. na.action function character string specifying happen data contain NAs. type type prediction required. default scale response varialbe. alternative \"link\" scale linear predictors. \"terms\" option returns matrix giving fitted values term model formula linear predictor scale. terms character vector term labels, specifying subset component functions used make predictions. ... used. term character string specifying component function fitted MID model. x matrix, data frame vector used input first argument component function. matrix data frame passed, inputs x y extracted . y vector used input second argument component function.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Method for fitted MID Models — predict.mid","text":"predict.mid() returns numeric vector MID model predictions.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict Method for fitted MID Models — predict.mid","text":"S3 method predict() MID models returns model predictions. mid.f() works component function MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/predict.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Method for fitted MID Models — predict.mid","text":"","code":"data(trees, package = \"datasets\") idx <- c(5L, 10L, 15L, 20L, 25L, 30L) mid <- interpret(Volume ~ .^2, trees[-idx,], lambda = 1) #> 'model' is not passed: the response variable in the data is used trees[idx, \"Volume\"] #> [1] 18.8 19.9 19.1 24.9 42.6 51.0 predict(mid, trees[idx,]) #> [1] 18.55337 20.58210 22.14285 23.46519 45.01464 57.83952 predict(mid, trees[idx,], type = \"terms\") #>           Girth     Height Girth:Height #> [1,] -12.738856  1.1216360 -0.189405623 #> [2,]  -8.033129 -1.7644569  0.019681599 #> [3,]  -6.497487 -1.7644569  0.044798668 #> [4,]  -1.870473 -4.7782653 -0.246067966 #> [5,]  15.096778 -0.4426815  0.000545126 #> [6,]  27.372413  0.1252837 -0.018178806 #> attr(,\"constant\") #> [1] 30.36 mid.f(mid, \"Girth\", trees[idx,]) #> [1] -12.738856  -8.033129  -6.497487  -1.870473  15.096778  27.372413 mid.f(mid, \"Girth:Height\", trees[idx,]) #> [1] -0.189405623  0.019681599  0.044798668 -0.246067966  0.000545126 #> [6] -0.018178806 predict(mid, trees[idx,], terms = c(\"Girth\", \"Height\")) #> [1] 18.74278 20.56241 22.09806 23.71126 45.01410 57.85770"},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Print MID Models — print.mid","title":"Print MID Models — print.mid","text":"\"mid\" objects, print() prints MID values uninterpreted rate.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print MID Models — print.mid","text":"","code":"# S3 method for class 'mid' print(x, digits = max(3L, getOption(\"digits\") - 2L), main.effects = FALSE, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print MID Models — print.mid","text":"x \"mid\" object printed. digits integer specifying number significant digits. main.effects logical. TRUE, MID values main effects printed. ... used.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print MID Models — print.mid","text":"print.mid() returns \"mid\" object passed function without modification.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print MID Models — print.mid","text":"S3 method print() \"mid\" objects prints MID values fitted MID model uninterpreted rate.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/print.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print MID Models — print.mid","text":"","code":"data(cars, package = \"datasets\") print(interpret(dist ~ speed, cars)) #> 'model' is not passed: the response variable in the data is used #>  #> Call: #> interpret(formula = dist ~ speed, data = cars) #>  #> Intercept: 42.98 #>  #> Main Effects: #> 1 main effect term #>  #> Uninterpreted Rate: 0.22636"},{"path":"https://ryo-asashi.github.io/midr/reference/scale_color_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Color Scales for ggplot2 Graphics based on Color Themes — scale_color_theme","title":"Color Scales for ggplot2 Graphics based on Color Themes — scale_color_theme","text":"scale_color_theme() family functions returns color scales \"colour\" \"fill\" aesthetics ggplot objects.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/scale_color_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color Scales for ggplot2 Graphics based on Color Themes — scale_color_theme","text":"","code":"scale_color_theme(   theme,   ...,   discrete = NULL,   middle = 0,   aesthetics = \"colour\" )  scale_colour_theme(   theme,   ...,   discrete = NULL,   middle = 0,   aesthetics = \"colour\" )  scale_fill_theme(theme, ..., discrete = NULL, middle = 0, aesthetics = \"fill\")"},{"path":"https://ryo-asashi.github.io/midr/reference/scale_color_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color Scales for ggplot2 Graphics based on Color Themes — scale_color_theme","text":"theme one following: color theme name \"Viridis\", character vector color names, palette function, ramp function used create color theme. ... optional arguments passed ggplot2::continuous_scale() ggplot2::discrete_scale(). discrete logical. TRUE, discrete scale returned. middle numeric value specifying middle point diverging color themes. aesthetics character string: \"fill\" \"color\".","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/scale_color_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color Scales for ggplot2 Graphics based on Color Themes — scale_color_theme","text":"","code":"data(txhousing, package = \"ggplot2\") cities <- c(\"Houston\", \"Fort Worth\", \"San Antonio\", \"Dallas\", \"Austin\") df <- subset(txhousing, city %in% cities) d <- ggplot2::ggplot(data = df, ggplot2::aes(x = sales, y = median)) +   ggplot2::geom_point(ggplot2::aes(colour = city)) d + scale_color_theme(\"Set 1\")  d + scale_color_theme(\"R3\")  d + scale_color_theme(\"Blues\", discrete = TRUE)  d + scale_color_theme(\"SunsetDark\", discrete = TRUE)  data(faithfuld, package = \"ggplot2\") v <- ggplot2::ggplot(faithfuld) +   ggplot2::geom_tile(ggplot2::aes(waiting, eruptions, fill = density)) v + scale_fill_theme(\"Plasma\")  v + scale_fill_theme(\"Spectral\")  v + scale_fill_theme(\"Spectral_r\")  v + scale_fill_theme(\"midr\", middle = 0.017)"},{"path":"https://ryo-asashi.github.io/midr/reference/shapviz.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate SHAP of MID Predictions — shapviz.mid","title":"Calculate SHAP of MID Predictions — shapviz.mid","text":"shapviz.mid() S3 method shapviz::shapviz() fitted MID models.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/shapviz.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate SHAP of MID Predictions — shapviz.mid","text":"","code":"# S3 method for class 'mid' shapviz(object, data = NULL)"},{"path":"https://ryo-asashi.github.io/midr/reference/shapviz.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate SHAP of MID Predictions — shapviz.mid","text":"object \"mid\" object. data data frame containing observations SHAP values calculated.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/shapviz.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate SHAP of MID Predictions — shapviz.mid","text":"shapviz.mid() returns object class \"shapviz\".","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/shapviz.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate SHAP of MID Predictions — shapviz.mid","text":"S3 method shapviz() \"mid\" objects returns object class \"shapviz\" used create SHAP plots functions shapviz package sv_waterfall() sv_importance().","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize MID Models — summary.mid","title":"Summarize MID Models — summary.mid","text":"\"mid\" objects, summary() prints information fitted MID model.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize MID Models — summary.mid","text":"","code":"# S3 method for class 'mid' summary(object, digits = max(3L, getOption(\"digits\") - 2L), top.n = 10L, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize MID Models — summary.mid","text":"object \"mid\" object summarized. digits integer specifying number significant digits. top.n integer specifying maximum number terms printed MID importance values. ... used.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize MID Models — summary.mid","text":"summary.mid() returns \"mid\" object passed function without modification.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize MID Models — summary.mid","text":"S3 method summary() \"mid\" objects prints basic information MID model including uninterpreted rate, residuals, encoding schemes, MID importance.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/summary.mid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize MID Models — summary.mid","text":"","code":"data(cars, package = \"datasets\") summary(interpret(dist ~ speed, cars)) #> 'model' is not passed: the response variable in the data is used #>  #> Call: #> interpret(formula = dist ~ speed, data = cars) #>  #> Uninterpreted Rate: #> [1] 0.22636 #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -24.50000  -8.06250  -0.33333   8.37500  29.50000   #>  #> Encoding: #>       main.effect #> speed  linear(17) #>  #> Importance: #>    term importance degree #> 1 speed     18.138      1"},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for ggplot Objects — theme_midr","title":"Theme for ggplot Objects — theme_midr","text":"theme_midr() returns complete theme \"ggplot\" objects.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for ggplot Objects — theme_midr","text":"","code":"theme_midr(   grid_type = c(\"none\", \"x\", \"y\", \"xy\"),   base_size = 11,   base_family = \"serif\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )  par.midr(...)"},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for ggplot Objects — theme_midr","text":"grid_type one \"none\", \"x\", \"y\" \"xy\". base_size base font size, given pts. base_family base font family. base_line_size base size line elements. base_rect_size base size rect elements. ... optional parameters passed `graphics::par()`.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme for ggplot Objects — theme_midr","text":"theme_midr() provides ggplot2 theme customized midr package.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/theme_midr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for ggplot Objects — theme_midr","text":"","code":"X <- data.frame(x = 1:10, y = 1:10) ggplot2::ggplot(X) +   ggplot2::geom_point(ggplot2::aes(x, y)) +   theme_midr()  ggplot2::ggplot(X) +   ggplot2::geom_col(ggplot2::aes(x, y)) +   theme_midr(grid_type = \"y\")  ggplot2::ggplot(X) +   ggplot2::geom_line(ggplot2::aes(x, y)) +   theme_midr(grid_type = \"xy\")"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Data Frames — weighted","title":"Weighted Data Frames — weighted","text":"weighted() returns data frame sample weights.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Data Frames — weighted","text":"","code":"weighted(data, weights = NULL)  augmented(data, weights = NULL, size = nrow(data), r = 0.01)  shuffled(data, weights = NULL, size = nrow(data))  latticized(   data,   weights = NULL,   k = 10L,   type = 0L,   use.catchall = TRUE,   catchall = \"(others)\",   frames = list(),   keep.mean = TRUE )  # S3 method for class 'weighted' weights(object, ...)"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Data Frames — weighted","text":"data data frame. weights numeric vector sample weights observation data. size integer. number random observations whose values sampled marginal distribution variable. r numeric value specifying ratio total weights random observations sum sample weights. weight random observations calculated sum(attr(data, \"weights\")) * r / size. k integer. maximum number sample points variable. positive, unique values used sample points. type integer. type encoding quantitative variables passed numeric.encoder(). use.catchall logical. TRUE, less frequent levels factor variables dropped replaced catchall level. catchall character string used catchall level. frames named list encoding frames (\"numeric.frame\" \"factor.frame\" objects). keep.mean logical. TRUE, representative values group average corresponding group. object data frame attribute \"weights\". ... used.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Data Frames — weighted","text":"weighted() returns data frame attribute \"weights\". augmented() returns weighted data frame original data shuffled data relatively small weights. shuffled() returns weighted data frame shuffled data. latticized() returns weighted data frame latticized data, whose values grouped replaced representative value corresponding group.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Data Frames — weighted","text":"weighted() returns data frame \"weights\" attribute can extracted using stats::weights(). augmented(), shuffled() latticized() return weighted data frame data modifications. functions designed use interpret(). modified data frames preserve original correlation structure variables, response variable (y) always replaced model predictions (yhat).","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Data Frames — weighted","text":"","code":"set.seed(42) x1 <- runif(1000L, -1, 1) x2 <- x1 + runif(1000L, -1, 1) weights <- (abs(x1) + abs(x2)) / 2 x <- data.frame(x1, x2) xw <- weighted(x, weights) ggplot2::ggplot(xw, ggplot2::aes(x1, x2, alpha = weights(xw))) +   ggplot2::geom_point() +   ggplot2::ggtitle(\"weighted\")  xs <- shuffled(xw) ggplot2::ggplot(xs, ggplot2::aes(x1, x2, alpha = weights(xs))) +   ggplot2::geom_point() +   ggplot2::ggtitle(\"shuffled\")  xa <- augmented(xw) ggplot2::ggplot(xa, ggplot2::aes(x1, x2, alpha = weights(xa))) +   ggplot2::geom_point() +   ggplot2::ggtitle(\"augmented\")  xl <- latticized(xw) ggplot2::ggplot(xl, ggplot2::aes(x1, x2, size = weights(xl))) +   ggplot2::geom_point() +   ggplot2::ggtitle(\"latticized\")"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.mse.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Loss Functions — weighted.mse","title":"Weighted Loss Functions — weighted.mse","text":"weighted.mse(), weighted.rmse(), weighted.mae() weighted.medae() compute loss based differences two numeric vectors deviations mean numeric vector.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.mse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Loss Functions — weighted.mse","text":"","code":"weighted.mse(x, y = NULL, w = NULL, ..., na.rm = FALSE)  weighted.rmse(x, y = NULL, w = NULL, ..., na.rm = FALSE)  weighted.mae(x, y = NULL, w = NULL, ..., na.rm = FALSE)  weighted.medae(x, y = NULL, w = NULL, ..., na.rm = FALSE)"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.mse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Loss Functions — weighted.mse","text":"x numeric vector. y optional numeric vector. passed, loss calculated differences x y. , loss calculated deviations x weighted mean . w numeric vector sample weights value x. ... optional parameters. na.rm logical. TRUE, NA NaNs removed x calculation.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.mse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Loss Functions — weighted.mse","text":"weighted.mse() (mean square error), weighted.rmse() (root mean square error), weighted.mae() (mean absolute error) weighted.medae (median absolute error) returns single numeric value.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.mse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Loss Functions — weighted.mse","text":"weighted.mse() returns mean square error, weighted.rmse() returns root mean square error, weighted.mae() returns mean absolute error, weighted.medae() returns median absolute error two weighted vectors x y. y passed, functions return corresponding statistic based deviations mean x.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.mse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Loss Functions — weighted.mse","text":"","code":"weighted.rmse(x = c(0, 10), y = c(0, 0), w = c(99, 1)) #> [1] 1 weighted.mae(x = c(0, 10), y = c(0, 0), w = c(99, 1)) #> [1] 0.1 weighted.medae(x = c(0, 10), y = c(0, 0), w = c(99, 1)) #> [1] 0 # compute uninterpreted rate mid <- interpret(dist ~ speed, cars) #> 'model' is not passed: the response variable in the data is used weighted.mse(cars$dist, predict(mid, cars)) / weighted.mse(cars$dist) #> [1] 0.2263636 mid.ur(mid) #> [1] 0.2263636"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Sample Quantile — weighted.quantile","title":"Weighted Sample Quantile — weighted.quantile","text":"weighted.quantile() produces weighted sample quantiles corresponding given probabilities.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Sample Quantile — weighted.quantile","text":"","code":"weighted.quantile(   x,   w = NULL,   probs = seq(0, 1, 0.25),   na.rm = FALSE,   names = TRUE,   digits = 7L,   type = 1L,   ... )"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Sample Quantile — weighted.quantile","text":"x numeric vector whose weighted sample quantiles wanted. w numeric vector sample weights value x. probs numeric vector probabilities values [0, 1]. na.rm logical. TRUE, NA NaNs removed x quantiles computed. names logical. TRUE, result \"names\" attribute. digits used names TRUE. precision use formatting percentages. type integer 1 9 selecting quantile algorithms. 1 available weighted quantile. ... arguments passed stats::quantile() weights passed.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Sample Quantile — weighted.quantile","text":"weighted.quantile() returns weighted sample quantiles corresponding given probabilities.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Sample Quantile — weighted.quantile","text":"weighted.quantile() wrapper function stats::quantile() weighted quantiles. weighted quantile, \"type 1\" quantile, inverse empirical distribution function, available.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Sample Quantile — weighted.quantile","text":"","code":"stats::quantile(x = 1:10, type = 1L, probs = c(0, .25, .50, .75, 1)) #>   0%  25%  50%  75% 100%  #>    1    3    5    8   10  weighted.quantile(x = 1:10, w = 1:10, probs = c(0, .25, .50, .75, 1)) #>   0%  25%  50%  75% 100%  #>    1    5    7    9   10"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Tabulation for Vectors — weighted.tabulate","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"weighted.tabulate() returns sum weights integer vector bin.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"","code":"weighted.tabulate(bin, w = NULL, nbins = max(1L, bin, na.rm = TRUE))"},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"bin numeric vector positive integers, factor. w numeric vector sample weights value bin. nbins number bins used.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"weighted.tabulate() returns numeric vector.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"weighted.tabulate() wrapper function tabulate() reflect sample weights.","code":""},{"path":"https://ryo-asashi.github.io/midr/reference/weighted.tabulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Tabulation for Vectors — weighted.tabulate","text":"","code":"tabulate(bin = c(2, 2, 3, 5)) #> [1] 0 2 1 0 1 weighted.tabulate(bin = c(2, 2, 3, 5), w = 1:4) #> [1] 0 3 3 0 4"},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-050-tbr","dir":"Changelog","previous_headings":"","what":"midr 0.5.0 (TBR)","title":"midr 0.5.0 (TBR)","text":"[First release CRAN.]","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-048909","dir":"Changelog","previous_headings":"","what":"midr 0.4.8.909","title":"midr 0.4.8.909","text":"Add mid.ur() extract uninterpreted ratio (rate) conveniently. Modify weighted loss functions compute deviation--mean based losses one input.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-048908","dir":"Changelog","previous_headings":"","what":"midr 0.4.8.908","title":"midr 0.4.8.908","text":"Modify ggmid.mid.breakdown() , ggmid.mid.importance() plot.mid.breakdown() improve usability functions.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-048907","dir":"Changelog","previous_headings":"","what":"midr 0.4.8.907","title":"midr 0.4.8.907","text":"Modify interpret() add pred.args argument can used pass optional arguments prediction function (pred.fun()). Add draft article “interpretation classification models”.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-048906","dir":"Changelog","previous_headings":"","what":"midr 0.4.8.906","title":"midr 0.4.8.906","text":"Modify interpret() allow matrices used valid inputs data (interpret.formula()) x (interpret.default()). Add article “interpretation regression models”.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-048905","dir":"Changelog","previous_headings":"","what":"midr 0.4.8.905","title":"midr 0.4.8.905","text":"Define print.encoder() “encoder” objects improve usability fitted MID models. Update README.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-048904","dir":"Changelog","previous_headings":"","what":"midr 0.4.8.904","title":"midr 0.4.8.904","text":"Change default values arguments: e.g. na.action = na.pass predict.mid(). Fix small bugs plot.mid.conditional().","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-048903","dir":"Changelog","previous_headings":"","what":"midr 0.4.8.903","title":"midr 0.4.8.903","text":"Update interpret() ensure value argument link character string. Update ggmid.mid.conditional() plot.mid.conditional(): var.color similar arguments can take expression input.","code":""},{"path":"https://ryo-asashi.github.io/midr/news/index.html","id":"midr-043-048902","dir":"Changelog","previous_headings":"","what":"midr 0.4.3-0.4.8.902","title":"midr 0.4.3-0.4.8.902","text":"midr release process. submit package CRAN mid-January 2025 . Improving usability graphing functions. Finalizing code documentation. Writing vignettes. [Submitted JARIP BULLETIN]","code":""}]
